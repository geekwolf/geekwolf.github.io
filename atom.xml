<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Geekwolf&#39;s Blog</title>
  
  <subtitle>Quick notes</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.simlinux.com/"/>
  <updated>2018-01-31T04:03:29.251Z</updated>
  <id>http://www.simlinux.com/</id>
  
  <author>
    <name>Geekwolf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Filebeat和Logstash集中归档游戏日志</title>
    <link href="http://www.simlinux.com/2018/01/13/filebeat-redis-logstash.html"/>
    <id>http://www.simlinux.com/2018/01/13/filebeat-redis-logstash.html</id>
    <published>2018-01-13T09:39:32.000Z</published>
    <updated>2018-01-31T04:03:29.251Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h4><p>由于游戏项目日志目前不够规范,不太容易根据字段结构化数据,开发又有实时查看生产和测试环境服务运行日志需求;如果写入ES通过Kibana查看,对于非分析类查看还是不太友好,当然也可以通过<a href="https://github.com/sivasamyk/logtrail" target="_blank" rel="external">LogTrail</a>插件</p><h4 id="方-案"><a href="#方-案" class="headerlink" title="方 案"></a>方 案</h4><ul><li>Filebeat-&gt;Logstash-&gt;Files</li><li>Filebeat-&gt;Redis-&gt;Logstash-&gt;Files</li><li>Nxlog(Rsyslog、Logstash)-&gt;Kafka-&gt;Flink(Logstash-&gt;ES-Kibana)</li><li>其他方案(可根据自己需求，选择合适的架构,作者选择了第二种方案)</li></ul><p><strong>注释:</strong> 由于Logstash无法处理输出到文件乱序的问题，可通过不同的文件使用不同的Logstash,单线程归档；或者直接写入ES(基于@timestamp)、通过Flink输出到文件</p><h4 id="部-署"><a href="#部-署" class="headerlink" title="部 署"></a>部 署</h4><h5 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h5><ul><li>Debian8 x64</li><li>logstash-6.1.1</li><li>filebeat-6.1.1-amd64</li><li>Redis-3.2</li></ul><h5 id="Filebeat配置"><a href="#Filebeat配置" class="headerlink" title="Filebeat配置"></a>Filebeat配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/etc/filebeat/filebeat.yml</div><div class="line"></div><div class="line">filebeat.prospectors:</div><div class="line">- type: log</div><div class="line">  paths:</div><div class="line">    - /home/data/log/*</div><div class="line">    - /home/data/*.log</div><div class="line">  scan_frequency: 20s</div><div class="line">  encoding: utf-8</div><div class="line">  tail_files: true</div><div class="line">  harvester_buffer_size: 5485760</div><div class="line">fields:</div><div class="line">  ip_address: 192.168.2.2</div><div class="line">  env: qa</div><div class="line">output.redis:</div><div class="line">  hosts: [&quot;192.168.1.1:6379&quot;]</div><div class="line">  password: &quot;geekwolf&quot;</div><div class="line">  key: &quot;filebeat&quot;</div><div class="line">  db: 0</div><div class="line">  timeout: 5</div><div class="line">  max_retires: 3</div><div class="line">  worker: 2</div><div class="line">  bulk_max_size: 4096</div></pre></td></tr></table></figure><h5 id="Logstash配置"><a href="#Logstash配置" class="headerlink" title="Logstash配置"></a>Logstash配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line"> #Filebeat</div><div class="line"> # beats &#123;</div><div class="line"> #   port =&gt; 5044</div><div class="line"> # &#125;</div><div class="line"> #Redis</div><div class="line">  redis &#123;</div><div class="line">    batch_count =&gt; 4096</div><div class="line">    data_type =&gt; &quot;list&quot;</div><div class="line">    key =&gt; &quot;filebeat&quot;</div><div class="line">    host =&gt; &quot;127.0.0.1&quot;</div><div class="line">    port =&gt; 5044</div><div class="line">    password =&gt; &quot;geekwolf&quot;</div><div class="line">    db =&gt; 0</div><div class="line">    threads =&gt; 2</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">filter &#123;</div><div class="line">  ruby &#123;</div><div class="line">      code =&gt; &apos;event.set(&quot;filename&quot;,event.get(&quot;source&quot;).split(&quot;/&quot;)[-1])&apos;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line"></div><div class="line">  if [filename] =~ &quot;nohup&quot; &#123;</div><div class="line">    file &#123;</div><div class="line">        path =&gt; &quot;/data/logs/%&#123;[fields][env]&#125;/%&#123;+YYYY-MM-dd&#125;/%&#123;[fields][ip_address]&#125;/%&#123;filename&#125;&quot;</div><div class="line">        flush_interval =&gt; 3</div><div class="line">        codec =&gt; line &#123; format =&gt; &quot;%&#123;message&#125;&quot;&#125;</div><div class="line">    &#125;</div><div class="line">  &#125; else &#123;</div><div class="line">    file &#123;</div><div class="line">         path =&gt; &quot;/data/logs/%&#123;[fields][env]&#125;/%&#123;+YYYY-MM-dd&#125;/%&#123;[fields][ip_address]&#125;/logs/%&#123;filename&#125;&quot;</div><div class="line">        flush_interval =&gt; 3</div><div class="line">        codec =&gt; line &#123; format =&gt; &quot;%&#123;message&#125;&quot;&#125;</div><div class="line">   &#125;</div><div class="line"> &#125;</div><div class="line"> #stdout &#123; codec =&gt; rubydebug &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="生产日志目录"><a href="#生产日志目录" class="headerlink" title="生产日志目录"></a>生产日志目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── prod</div><div class="line">│   └── 2018-01-13</div><div class="line">│       └── 2.2.2.2</div><div class="line">│           ├── logs</div><div class="line">│           │   ├── rpg_slow_db_.27075</div><div class="line">│           └── nohup_service.log</div><div class="line">└── qa</div><div class="line">    ├── 2018-01-12</div><div class="line">    │   ├── 192.168.3.1</div><div class="line">    └── 2018-01-13</div><div class="line">        ├── 192.168.3.2</div></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>笔者在测试Logstash单线程输出时，依然产生乱序问题(有知晓的可以留言),最终选择通过自己开发的daemon程序实现,参考<a href="https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/plogstash/plogstash.py" target="_blank" rel="external">Plogstash</a>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Author: Geekwolf</div><div class="line"># @Date:   2018-01-29 14:23:04</div><div class="line"># @Last Modified by:   Geekwolf</div><div class="line"># @Last Modified time: 2018-01-31 10:55:01</div><div class="line"></div><div class="line">#!/usr/bin/env python3</div><div class="line"># daemon.py</div><div class="line"></div><div class="line">import os</div><div class="line">import sys</div><div class="line">import time</div><div class="line">import redis</div><div class="line">import json</div><div class="line">import re</div><div class="line">import atexit</div><div class="line">import signal</div><div class="line"># import collections</div><div class="line"></div><div class="line"></div><div class="line">class Base(object):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line"></div><div class="line">        self.pidfile = &apos;/var/run/plogstash.pid&apos;</div><div class="line">        self.service_name = &apos;Plogstash&apos;</div><div class="line">        self.path = &apos;/var/log/plogstash&apos;</div><div class="line">        os.makedirs(self.path, exist_ok=True)</div><div class="line">        self.logfile = &apos;%s/%s.log&apos; % (self.path, self.service_name)</div><div class="line"></div><div class="line">        self.redis_host = &apos;127.0.0.1&apos;</div><div class="line">        self.redis_password = &apos;geekwolf&apos;</div><div class="line">        self.redis_port = 5044</div><div class="line">        self.redis_db = 0</div><div class="line">        self.redis_key = &apos;filebeat&apos;</div><div class="line">        self.batch_size = 5000</div><div class="line">        self.expires = 5  # second</div><div class="line">        self.archive_time = 1  # how long time to archive</div><div class="line">        self.base_dir = &apos;/data/logs&apos;</div><div class="line">        # self._tmp = &apos;/tmp/.%s&apos; % self.service_name</div><div class="line"></div><div class="line"></div><div class="line">class Daemon(Base):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line">        super(Daemon, self).__init__(*args, **kwargs)</div><div class="line"></div><div class="line">    def daemonize(self):</div><div class="line"></div><div class="line">        # First fork (detaches from parent)</div><div class="line">        try:</div><div class="line">            if os.fork() &gt; 0:</div><div class="line">                raise SystemExit(0)   # Parent exit</div><div class="line">        except OSError as e:</div><div class="line">            raise RuntimeError(&apos;fork #1 failed.&apos;)</div><div class="line"></div><div class="line">        os.chdir(&apos;/&apos;)</div><div class="line">        # set this will 777</div><div class="line">        # os.umask(0)</div><div class="line">        os.setsid()</div><div class="line">        # Second fork (relinquish session leadership)</div><div class="line">        try:</div><div class="line">            if os.fork() &gt; 0:</div><div class="line">                raise SystemExit(0)</div><div class="line">        except OSError as e:</div><div class="line">            raise RuntimeError(&apos;fork #2 failed.&apos;)</div><div class="line"></div><div class="line">        # Flush I/O buffers</div><div class="line">        sys.stdout.flush()</div><div class="line">        sys.stderr.flush()</div><div class="line"></div><div class="line">        # Replace file descriptors for stdin, stdout, and stderr</div><div class="line">        with open(self.logfile, &apos;ab&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stdout.fileno())</div><div class="line">        with open(self.logfile, &apos;ab&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stderr.fileno())</div><div class="line">        with open(self.logfile, &apos;rb&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stdin.fileno())</div><div class="line"></div><div class="line">        # Write the PID file</div><div class="line">        print(os.getpid())</div><div class="line">        with open(self.pidfile, &apos;w&apos;) as f:</div><div class="line">            print(os.getpid(), file=f)</div><div class="line"></div><div class="line">        # Arrange to have the PID file removed on exit/signal</div><div class="line">        atexit.register(lambda: os.remove(self.pidfile))</div><div class="line"></div><div class="line">        # Signal handler for termination (required)</div><div class="line">        def sigterm_handler(signo, frame):</div><div class="line">            raise SystemExit(1)</div><div class="line"></div><div class="line">        signal.signal(signal.SIGTERM, sigterm_handler)</div><div class="line"></div><div class="line">    def get_now_date(self):</div><div class="line"></div><div class="line">        return time.strftime(&apos;%Y-%m-%d&apos;, time.localtime(time.time()))</div><div class="line"></div><div class="line">    def get_now_timestamp(self):</div><div class="line"></div><div class="line">        return time.time()</div><div class="line"></div><div class="line">    def get_now_time(self):</div><div class="line">        return time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())</div><div class="line"></div><div class="line">    def logging(self, msg):</div><div class="line"></div><div class="line">        with open(self.logfile) as f:</div><div class="line">            print(&apos;%s  %s&apos; % (self.get_now_time(), msg))</div><div class="line"></div><div class="line">    def append_log(self):</div><div class="line">        pass</div><div class="line"></div><div class="line">    def start(self):</div><div class="line"></div><div class="line">        if os.path.exists(self.pidfile):</div><div class="line">            raise RuntimeError(&apos;Already running&apos;)</div><div class="line">        else:</div><div class="line">            try:</div><div class="line">                self.daemonize()</div><div class="line">                self.append_log()</div><div class="line">                self.status()</div><div class="line">            except RuntimeError as e:</div><div class="line">                print(e, file=sys.stderr)</div><div class="line">                raise SystemExit(1)</div><div class="line"></div><div class="line">    def stop(self):</div><div class="line"></div><div class="line">        # f = os.open(self.pipe_path, os.O_RDONLY | os.O_NONBLOCK)</div><div class="line">        # ret = os.read(f, 1024).decode(&apos;utf-8&apos;)</div><div class="line">        # print(ret.split(&apos;\n&apos;))</div><div class="line">        # os.close(f)</div><div class="line"></div><div class="line">        if os.path.exists(self.pidfile):</div><div class="line">            # with open(self._tmp) as f:</div><div class="line">            #     _data = f.read()</div><div class="line">            #     if _data is not None and len(eval(_data)) &gt; 0:</div><div class="line">            #         for k, v in eval(_data).items():</div><div class="line">            #             v = v[&apos;fd&apos;].rstrip(&apos;\n&apos;)</div><div class="line">            #             v.close()</div><div class="line">            with open(self.pidfile) as f:</div><div class="line">                os.kill(int(f.read()), signal.SIGTERM)</div><div class="line">            print(&apos;Plogstash is stopped&apos;)</div><div class="line">        else:</div><div class="line">            print(&apos;Not running&apos;, file=sys.stderr)</div><div class="line">            raise SystemExit(1)</div><div class="line"></div><div class="line">    def restart(self):</div><div class="line"></div><div class="line">        self.stop()</div><div class="line">        self.start()</div><div class="line"></div><div class="line">    def status(self):</div><div class="line"></div><div class="line">        try:</div><div class="line">            with open(self.pidfile, &apos;r&apos;) as f:</div><div class="line">                pid = int(f.read().strip())</div><div class="line">        except:</div><div class="line">            pid = None</div><div class="line"></div><div class="line">        if pid:</div><div class="line">            print(&apos;%s is running as pid:%s&apos; % (self.service_name, pid))</div><div class="line">        else:</div><div class="line">            print(&apos;%s is not running&apos; % self.service_name)</div><div class="line"></div><div class="line"></div><div class="line">class Worker(Daemon):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line">        super(Worker, self).__init__(self, *args, **kwargs)</div><div class="line"></div><div class="line">    def _redis(self):</div><div class="line"></div><div class="line">        pool = redis.ConnectionPool(host=self.redis_host, password=self.redis_password, port=self.redis_port, db=self.redis_db, socket_timeout=10000)</div><div class="line">        rc = redis.StrictRedis(connection_pool=pool)</div><div class="line">        return rc</div><div class="line"></div><div class="line">    def get_redis_data(self):</div><div class="line"></div><div class="line">        _data = self._redis().lrange(self.redis_key, 0, self.batch_size - 1)</div><div class="line">        # 删除数据(可考虑处理完再删除)</div><div class="line">        return _data</div><div class="line"></div><div class="line">    def del_redis_data(self):</div><div class="line"></div><div class="line">        _data = self._redis().ltrim(self.redis_key, self.batch_size, -1)</div><div class="line"></div><div class="line">    def append_log(self):</div><div class="line"></div><div class="line">        file_meta = &#123;&#125;</div><div class="line">        # file_handler = collections.defaultdict(dict)</div><div class="line">        # try:</div><div class="line">        #     os.mkfifo(self.pipe_path)</div><div class="line">        # except Exception as e:</div><div class="line">        #     print(str(e))</div><div class="line"></div><div class="line">        # pipe_ins = os.open(self.pipe_path, os.O_SYNC | os.O_CREAT | os.O_RDWR)</div><div class="line">        while True:</div><div class="line">            time.sleep(self.archive_time)</div><div class="line">            _data = self.get_redis_data()</div><div class="line">            if _data:</div><div class="line">                for _d in _data:</div><div class="line">                    try:</div><div class="line">                        _d = json.loads(_d.decode(&apos;utf-8&apos;))</div><div class="line">                        _path = &apos;%s/%s/%s/%s&apos; % (self.base_dir, _d[&apos;fields&apos;][&apos;env&apos;], self.get_now_date(), _d[&apos;fields&apos;][&apos;ip_address&apos;])</div><div class="line">                        os.makedirs(_path + &apos;/logs&apos;, exist_ok=True)</div><div class="line">                        file_name = _d[&apos;source&apos;].split(&apos;/&apos;)[-1]</div><div class="line">                       # _path = &apos;%s/%s/%s/%s&apos; % (self.base_dir, _d[&apos;fields&apos;][&apos;env&apos;],self.get_now_date(), _d[&apos;fields&apos;][&apos;ip_address&apos;])</div><div class="line"></div><div class="line">                        if re.match(&apos;nohup&apos;, file_name):</div><div class="line">                            file_path = &apos;%s/%s&apos; % (_path, file_name)</div><div class="line">                        else:</div><div class="line">                            file_path = &apos;%s/logs/%s&apos; % (_path, file_name)</div><div class="line"></div><div class="line">                        with open(file_path, &apos;a&apos;) as f:</div><div class="line">                            f.write(_d[&apos;message&apos;] + &apos;\n&apos;)</div><div class="line">                        # if &apos;fd&apos; not in file_handler[file_path]:</div><div class="line">                        #     f = open(file_path, &apos;a&apos;, buffering=1024000)</div><div class="line">                        #     file_handler[file_path][&apos;fd&apos;] = str(f)</div><div class="line">                        # file_handler[file_path][&apos;time&apos;] = self.get_now_timestamp()</div><div class="line">                    except Exception as e:</div><div class="line">                        self.logging(str(e))</div><div class="line">                self.del_redis_data()</div><div class="line">            # with open(self._tmp, &apos;w&apos;) as f:</div><div class="line">            #     f.write(json.dumps(file_handler))</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line"></div><div class="line">    if len(sys.argv) != 2:</div><div class="line">        print(&apos;Usage: &#123;&#125; [start|stop|restart|status]&apos;.format(sys.argv[0]), file=sys.stderr)</div><div class="line">        raise SystemExit(1)</div><div class="line"></div><div class="line">    daemon = Worker()</div><div class="line">    if sys.argv[1] == &apos;start&apos;:</div><div class="line">        daemon.start()</div><div class="line">    elif sys.argv[1] == &apos;stop&apos;:</div><div class="line">        daemon.stop()</div><div class="line">    elif sys.argv[1] == &apos;restart&apos;:</div><div class="line">        print(&quot;Restart ...&quot;)</div><div class="line">        daemon.restart()</div><div class="line">    elif sys.argv[1] == &apos;status&apos;:</div><div class="line">        daemon.status()</div><div class="line">    else:</div><div class="line">        print(&apos;Unknown command &#123;!r&#125;&apos;.format(sys.argv[1]), file=sys.stderr)</div><div class="line">        raise SystemExit(1)</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景说明&quot;&gt;&lt;a href=&quot;#背景说明&quot; class=&quot;headerlink&quot; title=&quot;背景说明&quot;&gt;&lt;/a&gt;背景说明&lt;/h4&gt;&lt;p&gt;由于游戏项目日志目前不够规范,不太容易根据字段结构化数据,开发又有实时查看生产和测试环境服务运行日志需求;如果写入ES通过K
      
    
    </summary>
    
    
      <category term="Filebeat" scheme="http://www.simlinux.com/tags/Filebeat/"/>
    
      <category term="Logstash" scheme="http://www.simlinux.com/tags/Logstash/"/>
    
      <category term="ELK" scheme="http://www.simlinux.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix3.4.5新特性：历史数据支持Elasticsearch</title>
    <link href="http://www.simlinux.com/2018/01/09/zabbix-es.html"/>
    <id>http://www.simlinux.com/2018/01/09/zabbix-es.html</id>
    <published>2018-01-09T08:00:48.000Z</published>
    <updated>2018-01-31T03:18:20.460Z</updated>
    
    <content type="html"><![CDATA[<h4 id="特性功能"><a href="#特性功能" class="headerlink" title="特性功能"></a>特性功能</h4><p>Zabbix自3.4.5rc1版本开始支持Elasticsearch作为历史数据存储，17年12月28日发布了3.4.5</p><h4 id="部署Elasticsearch"><a href="#部署Elasticsearch" class="headerlink" title="部署Elasticsearch"></a>部署Elasticsearch</h4><p>安装Elasticsearch和Kibana:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">echo &quot;deb http://http.debian.net/debian jessie-backports main&quot; &gt;&gt;/etc/apt/source.list</div><div class="line">echo &quot;deb https://artifacts.elastic.co/packages/6.x/apt stable main&quot; &gt; /etc/apt/sources.list.d/elastic-6.x.list</div><div class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</div><div class="line"></div><div class="line">apt-get -y update</div><div class="line">apt-get install -t jessie-backports openjdk-8-jdk</div><div class="line">update-java-alternatives -s java-1.8.0-openjdk-amd64</div><div class="line"></div><div class="line">apt-get install -y elasticsearch kibana</div></pre></td></tr></table></figure></p><p>配置Elasticsearch和Kibana(两者在同一台机):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vim /etc/elasticsearch/elasticsearch.yml</div><div class="line">network.host: 0.0.0.0</div><div class="line"></div><div class="line">vim  /etc/kibana/kibana.yml </div><div class="line">server.host: &quot;0.0.0.0&quot;</div><div class="line">elasticsearch.url: &quot;http://localhost:9200&quot;</div></pre></td></tr></table></figure><p>启动Elasticsearch和kibana服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/elasticsearch start</div><div class="line">/etc/init.d/kibana start</div></pre></td></tr></table></figure><h4 id="Zabbix3-4-0升级至3-4-5"><a href="#Zabbix3-4-0升级至3-4-5" class="headerlink" title="Zabbix3.4.0升级至3.4.5"></a>Zabbix3.4.0升级至3.4.5</h4><p><strong>注:</strong> 由于Zabbix3.4.5对libcurl库要求在7.20.0或者更高，Debian 8下面默认是7.38.0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/zabbix_server stop</div><div class="line">tar xf zabbix-3.4.5.tar.gz</div><div class="line">cd zabbix-3.4.5</div><div class="line">./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line">make -j8</div><div class="line">make install</div></pre></td></tr></table></figure><h4 id="Zabbix-server配置支持Elasticsearch"><a href="#Zabbix-server配置支持Elasticsearch" class="headerlink" title="Zabbix_server配置支持Elasticsearch"></a>Zabbix_server配置支持Elasticsearch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_server.conf</div><div class="line">HistoryStorageURL=http://192.168.100.100:9200</div><div class="line">HistoryStorageTypes=uint,dbl,str,log,text</div></pre></td></tr></table></figure><p><strong>说明:</strong></p><p>Elasticsearch支持的监控项类型:uint,dbl,str,log,text<br>监控项数据类型|数据库表|对应Elasticsearch类型:<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix-es-type.png" alt="image"></p><h4 id="Zabbix-Web配置历史数据读Elasticsearch"><a href="#Zabbix-Web配置历史数据读Elasticsearch" class="headerlink" title="Zabbix Web配置历史数据读Elasticsearch"></a>Zabbix Web配置历史数据读Elasticsearch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">修改配置文件vim conf/zabbix.conf.php</div><div class="line">1. 如果不同类型使用不同的ES集群，可以按如下进行配置</div><div class="line">$HISTORY[&apos;url&apos;]   = [</div><div class="line">    &apos;uint&apos; =&gt; &apos;http://localhost1:9200&apos;,</div><div class="line">    &apos;text&apos; =&gt; &apos;http://localhost2:9200&apos;</div><div class="line">];</div><div class="line">$HISTORY[&apos;types&apos;] = [&apos;uint&apos;, &apos;text&apos;];</div><div class="line"></div><div class="line">2. 所有类型使用相同ES集群</div><div class="line">$HISTORY[&apos;url&apos;]   = &apos;http://192.168.100.100:9200&apos;;</div><div class="line">$HISTORY[&apos;types&apos;] = [&apos;str&apos;, &apos;text&apos;, &apos;log&apos;, &apos;uint&apos;, &apos;dbl&apos;];</div></pre></td></tr></table></figure><p><strong>注:</strong> 3.4.0升级到3.4.5后，请勿使用旧的zabbix.conf.php，根据新的zabbix.conf.php.example重新配置</p><h4 id="重启Zabbix-Server"><a href="#重启Zabbix-Server" class="headerlink" title="重启Zabbix Server"></a>重启Zabbix Server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/zabbix_server start</div><div class="line">此时可以通过观察日志，查看是否连接ES成功</div></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol><li><p>Zabbix配置ES成功后,通过Kibana可以看到：<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es1.png" alt="image"></p></li><li><p>创建索引<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es2.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es3.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es4.png" alt="image"></p></li><li><p>通过Zabbix Web访问是否正常显示数据</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;特性功能&quot;&gt;&lt;a href=&quot;#特性功能&quot; class=&quot;headerlink&quot; title=&quot;特性功能&quot;&gt;&lt;/a&gt;特性功能&lt;/h4&gt;&lt;p&gt;Zabbix自3.4.5rc1版本开始支持Elasticsearch作为历史数据存储，17年12月28日发布了3.4.5&lt;/
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>Django Channels实现Zabbix实时告警到页面</title>
    <link href="http://www.simlinux.com/2018/01/09/devops-django-channels.html"/>
    <id>http://www.simlinux.com/2018/01/09/devops-django-channels.html</id>
    <published>2018-01-09T02:10:10.000Z</published>
    <updated>2018-01-31T03:18:20.458Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是WebSocket"><a href="#什么是WebSocket" class="headerlink" title="什么是WebSocket"></a>什么是WebSocket</h4><p>websocket是HTML5开始提供的一种新协议,用于浏览器和服务器之间实现全双工通讯的技术。本质上是基于tcp协议,先通过HTTP/HTTPS协议发起一条特殊的http请求进行握手后,创建一个用于双向数据交换的tcp连接,此后服务端与客户端通过此连接进行实时通信。在websocket之前实现全双工通讯一般使用轮训、SSE(Server-Sent Event,服务端推送事件)、Comet技术</p><h4 id="HTTP与WebSocket的区别"><a href="#HTTP与WebSocket的区别" class="headerlink" title="HTTP与WebSocket的区别"></a>HTTP与WebSocket的区别</h4><p><img src="http://i.imgur.com/9oXAC24.png" alt="image"></p><ul><li>由上面的示意图可知,在传统的http1.0,request和response是一对一的，每次都要发送header信息</li><li>http1.1 默认开启了keeplive也只是复用同一个tcp连接，但是服务器和客户端还要大量交换HTTP header，信息交换效率很低。</li><li>WebSocket是一种双向通信协议。在建立连接后，WebSocket服务器端和客户端都能主动向对方发送或接收数据，就像Socket一样。从而更好的节省服务器资源和带宽并达到实时通讯的目的</li><li>WebSocket需要像TCP一样，先建立连接，连接成功后才能相互通信</li></ul><h4 id="客户端通过WebSocket与服务端建立通信过程"><a href="#客户端通过WebSocket与服务端建立通信过程" class="headerlink" title="客户端通过WebSocket与服务端建立通信过程"></a>客户端通过WebSocket与服务端建立通信过程</h4><ol><li><p>在客户端，new WebSocket实例化一个新的WebSocket客户端对象，请求类似 ws://yourdomain:port/path 的服务端WebSocket URL，客户端WebSocket对象会自动解析并识别为WebSocket请求，并连接服务端端口，执行双方握手过程，客户端发送数据格式类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GET /ws/alert/ HTTP/1.1</div><div class="line">Host: 127.0.0.1:8000</div><div class="line">Upgrade: websocket</div><div class="line">Connection: Upgrade</div><div class="line">Sec-WebSocket-Key: xqBt3ImNzJbYqRINxEFlkg==</div><div class="line">Origin: http://127.0.0.1:8000</div><div class="line">Sec-WebSocket-Version: 13</div></pre></td></tr></table></figure></li><li><p>可以看到，客户端发起的WebSocket连接报文类似传统HTTP报文，Upgrade：websocket参数值表明这是WebSocket类型请求，Sec-WebSocket-Key是WebSocket客户端发送的一个 base64编码的密文，要求服务端必须返回一个对应加密的Sec-WebSocket-Accept应答，否则客户端会抛出Error during WebSocket handshake错误，并关闭连接。服务端收到报文后返回的数据格式类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 101 Switching Protocols</div><div class="line">Upgrade: websocket</div><div class="line">Connection: Upgrade</div><div class="line">Sec-WebSocket-Accept: K7DJLdLooIwIG/MOpvWFB3y3FE8=</div></pre></td></tr></table></figure></li></ol><p>Sec-WebSocket-Accept的值是服务端采用与客户端一致的密钥计算出来后返回客户端的，HTTP/1.1 101 Switching Protocols表示服务端接受WebSocket协议的客户端连接，经过这样的请求-响应处理后，两端的WebSocket连接握手成功, 后续就可以进行TCP通讯了</p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2017/bg2017051503.jpg" alt="image"></p><p><code>注释:</code> WebSocket标识符是ws(如果加密,则是wss),如上图所示</p><h4 id="WebSocket服务"><a href="#WebSocket服务" class="headerlink" title="WebSocket服务"></a>WebSocket服务</h4><ul><li>Node(按热度排序): <a href="https://socket.io/" target="_blank" rel="external">Socket.IO</a>、<a href="https://github.com/uNetworking/uWebSockets" target="_blank" rel="external">uWebSockets</a>、<a href="https://github.com/theturtle32/WebSocket-Node" target="_blank" rel="external">WebSocket-Node</a></li><li>Go: <a href="https://github.com/joewalnes/websocketd" target="_blank" rel="external">websocketd</a>、<a href="https://github.com/gorilla/websocket" target="_blank" rel="external">websocket</a></li><li>Django: <a href="https://github.com/django/channels/" target="_blank" rel="external">Channel</a></li></ul><h4 id="Django-Channel"><a href="#Django-Channel" class="headerlink" title="Django Channel"></a>Django Channel</h4><h5 id="WSGI-ASGI"><a href="#WSGI-ASGI" class="headerlink" title="WSGI/ASGI"></a>WSGI/ASGI</h5><p><strong>WSGI</strong><br>大家都知道WSGI,即Web Server Gateway Interface,是服务器和客户端交互的接口规范，符合这种借口的application可以在所有符合该接口的server上运行，解耦了server和application;web组件被分成三类：client、server、middleware</p><p><img src="http://7xp2eu.com1.z0.glb.clouddn.com/wsgiframework.png" alt="image"><br><img src="http://7xp2eu.com1.z0.glb.clouddn.com/wsgiframeworkmiddleware.png" alt="image"></p><p>如上图所示</p><ul><li>Server/Gateway：处理HTTP协议，接受用户HTTP请求，调用application处理逻辑，将response返回给client;比如Apache、Nginx</li><li>Application：专注业务逻辑的python 应用或者框架，如Django；根据WSGI协议规范，Applicaiton需要定义<a href="http://wsgi.tutorial.codepoint.net/application-interface" target="_blank" rel="external">http://wsgi.tutorial.codepoint.net/application-interface</a></li><li>Middleware：位于Server/Gateway 和 Application/Framework 之间，对 Server/Gateway 来说，它相当于 Application/Framework ；对 Application/Framework  来说，它相当于 Server/Gateway。每个 middleware 实现不同的功能，我们通常根据需求选择相应的 middleware 并组合起来，实现所需的功能。比如，可在 middleware 中实现以下功能：<ol><li>根据 url 把用户请求调度到不同的 application 中</li><li>负载均衡，转发用户请求</li><li>限制请求速率，设置白名单<br>WSGI的middleware体现 unix 的哲学之一：do one thing and do it well</li></ol></li></ul><p><strong>ASGI</strong><br>由于WSGI协议支持HTTP,ASGI(Asynchronous Server Gateway Interface)在此基础上应运而生，对WSGI协议进行兼容和扩展，能够处理多种通用协议如HTTP、HTTP2、WebSocket，允许这些协议能通过网络或本地socket进行传输，以及让不同的协议被分配到不同的进程中<br><img src="http://ow1schdt5.bkt.clouddn.com/django-wsgi.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/asgi.jpg" alt="image"></p><p>ASGI由三个不同的组件组成:协议服务、频道层(Channnel Layer)、应用层；其中Channel Layer是最重要的部分，同时对协议服务和应用提供接口；</p><ul><li>频道和消息： ASGI规定所有通信都要通过在频道里发送消息进行，消息是一个dict,为了保证可序列化，只允许以下类型数据<br>  string/Unicode/int(非long)/list/dict(Key是Unicode)/boolean/None<br>  频道是一个先进先出队列，队列中的消息最多发送给一个消费者；频道中的消息超过设定时间会被清理，消息大小最大限定为1MB，超过需要分块</li><li>群组: 频道中消息只能被传送一次，不能广播；如果向任一组用户发送消息，就要用到群组</li></ul><h5 id="Channels"><a href="#Channels" class="headerlink" title="Channels"></a>Channels</h5><p>大概了解ASGI规范之后，看下django基于ASGI协议实现HTTP/HTTP2/WebSocket的模块Channels,安装好channels后，django将有原来的request-response模式，转换成worker工作模式；并没有运行单独的wsgi进程，而是分成了三层:</p><ul><li>interface Server: 负责Django和Client通信，同时适配WSGI和WebSocket Server</li><li>Channel Layer: 可插拔的Python代码和数据存储，如Redis、或者内存，用于消息的传输</li><li>Workers: 监听频道，消息抵达时运行消费者代码</li></ul><p>下面用例子来看下如何使用Channels: 实现Zabbix报警实时传送到客户端<br>描述:<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix-alert.png" alt="image"></p><ul><li>Trigger触发时，根据Action设置通过脚本报警，并将报警信息发布到Redis的ALARM频道</li><li>Django Commands alert  订阅Redis的ALARM频道</li><li>调用channels的send方法，通过websocket实时推送到Client</li></ul><p>目录结构:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">monitor</div><div class="line">├── monitor</div><div class="line">│   ├── celery.py</div><div class="line">│   ├── consumers.py</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── routing.py</div><div class="line">│   ├── settings.py</div><div class="line">│   ├── urls.py</div><div class="line">│   └── wsgi.py</div><div class="line">├── commands</div><div class="line">│   ├── admin.py</div><div class="line">│   ├── apps.py</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── management</div><div class="line">│   │   ├── commands</div><div class="line">│   │   │   ├── alert.py</div><div class="line">│   │   │   ├── __init__.py</div><div class="line">│   │   │   └── __pycache__</div><div class="line">│   │   ├── __init__.py</div><div class="line">│   │   └── __pycache__</div><div class="line">│   ├── migrations</div><div class="line">│   │   ├── __init__.py</div><div class="line">│   │   └── __pycache__</div><div class="line">│   ├── models.py</div><div class="line">│   ├── __pycache__</div><div class="line">│   ├── tests.py</div><div class="line">│   └── views.py</div><div class="line">├── static</div><div class="line">├── templates</div><div class="line">│   ├── base</div><div class="line">|        |—— base.html</div><div class="line">├── README.md</div><div class="line">├── requirements.txt</div></pre></td></tr></table></figure></p><h6 id="安装配置Channels"><a href="#安装配置Channels" class="headerlink" title="安装配置Channels"></a>安装配置Channels</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">pip install channels asgi_redis</div><div class="line">settings.py添加app和设置CHANNEL_LAYERS</div><div class="line"></div><div class="line">#commands是后面定义Django命令的app</div><div class="line">INSTALLED_APPS = [</div><div class="line">    &apos;django.contrib.admin&apos;,</div><div class="line">    &apos;django.contrib.auth&apos;,</div><div class="line">    &apos;django.contrib.contenttypes&apos;,</div><div class="line">    &apos;django.contrib.sessions&apos;,</div><div class="line">    &apos;django.contrib.messages&apos;,</div><div class="line">    &apos;django.contrib.staticfiles&apos;,</div><div class="line">    &apos;channels&apos;,</div><div class="line">    &apos;commands&apos;</div><div class="line">]</div><div class="line"></div><div class="line">#Redis信息</div><div class="line">REDIS_OPTIONS = &#123;</div><div class="line">    &apos;HOST&apos;: &apos;127.0.0.1&apos;,</div><div class="line">    &apos;PORT&apos;: 6379,</div><div class="line">    &apos;PASSWD&apos;: &apos;geekwolf&apos;,</div><div class="line">    &apos;DB&apos;: 0</div><div class="line">&#125;</div><div class="line"></div><div class="line">#可以使用内存存储Channels消息</div><div class="line">#CHANNEL_LAYERS = &#123;</div><div class="line">#    &quot;default&quot;: &#123;</div><div class="line">#        &quot;BACKEND&quot;: &quot;asgiref.inmemory.ChannelLayer&quot;,</div><div class="line">#        &quot;ROUTING&quot;: &quot;channels_example.routing.channel_routing&quot;,</div><div class="line">#    &#125;,</div><div class="line">#&#125;</div><div class="line"></div><div class="line">#使用Redis作为消息存储，需安装asgi_redis</div><div class="line">CHANNEL_LAYERS = &#123;</div><div class="line">    &apos;default&apos;: &#123;</div><div class="line">        &apos;BACKEND&apos;: &apos;asgi_redis.RedisChannelLayer&apos;,</div><div class="line">        &apos;CONFIG&apos;: &#123;</div><div class="line">            &apos;hosts&apos;: [&apos;redis://:&#123;0&#125;@&#123;1&#125;:&#123;2&#125;/&#123;3&#125;&apos;.format(REDIS_OPTIONS[&apos;PASSWD&apos;], REDIS_OPTIONS[&apos;HOST&apos;], REDIS_OPTIONS[&apos;PORT&apos;], 1)]</div><div class="line">        &#125;,</div><div class="line">        &apos;ROUTING&apos;: &apos;plonvol.routing.channel_routing&apos;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">#Redis频道和Channels群组名</div><div class="line">GROUP_NAME = &apos;alarm&apos;</div></pre></td></tr></table></figure><h6 id="添加路由-routing-py"><a href="#添加路由-routing-py" class="headerlink" title="添加路由(routing.py)"></a>添加路由(routing.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">from channels.routing import route</div><div class="line">from .consumers import ws_connect, ws_disconnect, ws_receive</div><div class="line"></div><div class="line"></div><div class="line">channel_routing = [</div><div class="line">    route(&apos;websocket.connect&apos;, ws_connect),</div><div class="line">    route(&apos;websocket.disconnect&apos;, ws_disconnect),</div><div class="line">]</div></pre></td></tr></table></figure><h6 id="添加consumers文件-类似view-consumers-py"><a href="#添加consumers文件-类似view-consumers-py" class="headerlink" title="添加consumers文件(类似view)(consumers.py)"></a>添加consumers文件(类似view)(consumers.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">from channels import Group</div><div class="line">from channels.handler import AsgiHandler</div><div class="line">from django.conf import settings</div><div class="line"></div><div class="line">def ws_connect(message):</div><div class="line">    message.reply_channel.send(&#123;&apos;accept&apos;: True&#125;)</div><div class="line">    Group(settings.GROUP_NAME).add(message.reply_channel)</div><div class="line"></div><div class="line"></div><div class="line">def ws_disconnect(message):</div><div class="line">    Group(settings.GROUP_NAME).discard(message.reply_channel)</div></pre></td></tr></table></figure><h6 id="订阅Redis报警消息脚本-commands-management-commands-alert-py"><a href="#订阅Redis报警消息脚本-commands-management-commands-alert-py" class="headerlink" title="订阅Redis报警消息脚本(commands/management/commands/alert.py)"></a>订阅Redis报警消息脚本(commands/management/commands/alert.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">import json</div><div class="line">import logging</div><div class="line">from channels import Group</div><div class="line">from django.core.management import BaseCommand</div><div class="line">from django.conf import settings</div><div class="line">import redis</div><div class="line"></div><div class="line">logger = logging.getLogger(__name__)</div><div class="line"></div><div class="line">class Command(BaseCommand):</div><div class="line">    &quot;&quot;&quot;</div><div class="line">    Command to start zabbix alert worker from command line.</div><div class="line">    &quot;&quot;&quot;</div><div class="line">    help = &apos;Subscribe the zabbix alerts channel&apos;</div><div class="line"></div><div class="line">    def handle(self, *args, **options):</div><div class="line">        rc = redis.Redis(host=settings.REDIS_OPTIONS[&apos;HOST&apos;],</div><div class="line">                         password=settings.REDIS_OPTIONS[&apos;PASSWD&apos;],</div><div class="line">                         port=settings.REDIS_OPTIONS[&apos;PORT&apos;],</div><div class="line">                         db=settings.REDIS_OPTIONS[&apos;DB&apos;])</div><div class="line">        rc.delete(settings.GROUP_NAME)</div><div class="line">        pubsub = rc.pubsub()</div><div class="line">        pubsub.subscribe(settings.GROUP_NAME)</div><div class="line">        for item in pubsub.listen():</div><div class="line">            if item[&apos;type&apos;] == &apos;message&apos;:</div><div class="line">                Group(settings.GROUP_NAME).send(&#123;&apos;text&apos;: bytes.decode(item[&apos;data&apos;])&#125;)</div><div class="line">                logger.debug(&apos;send a message %s &apos; % item)</div></pre></td></tr></table></figure><h6 id="前端页面base-html"><a href="#前端页面base-html" class="headerlink" title="前端页面base.html"></a>前端页面base.html</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 报警声音 --&gt;</div><div class="line">&lt;audio id=&quot;notify&quot;&gt;&lt;source src=&quot;/static/notify.ogg&quot; type=&quot;audio/ogg&quot;&gt;&gt;&lt;/audio&gt;</div><div class="line"></div><div class="line">&lt;script type=&quot;application/javascript&quot;&gt;</div><div class="line">    var ws_scheme = window.location.protocol == &quot;https:&quot; ? &quot;wss&quot; : &quot;ws&quot;;</div><div class="line">    var ws = new WebSocket(ws_scheme + &apos;://&apos; + window.location.host + window.location.pathname);</div><div class="line">    console.log(ws);</div><div class="line">    ws.onmessage = function (message) &#123;</div><div class="line">        var data = JSON.parse(message.data);</div><div class="line">        if(data[&apos;当前状态&apos;] == &apos;Problem&apos;)</div><div class="line">        &#123;</div><div class="line">           var subject = &apos;&lt;br&gt;故障！,服务器:&apos; + data[&apos;告警主机&apos;] + &apos;发生:&apos; + data[&apos;告警信息&apos;] + &apos;故障!&lt;br&gt;&apos;;</div><div class="line">        &#125;</div><div class="line">        else&#123;</div><div class="line">           var subject = &apos;&lt;br&gt;恢复！,服务器:&apos; + data[&apos;告警主机&apos;] + &apos;发生:&apos; + data[&apos;告警信息&apos;] + &apos;已经恢复!&lt;br&gt;&apos;;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        content = new Array();</div><div class="line">        $.each(data,function(k,v)&#123;</div><div class="line">            content.push(&quot;&lt;b&gt;&quot; + k + &apos;:&lt;/b&gt;   &apos; + v)</div><div class="line">        &#125;)</div><div class="line">        var data = subject + content.join(&quot;&lt;br&gt;&quot;)</div><div class="line">        $(&apos;#notify&apos;)[0].play();</div><div class="line">        notify(&apos;warning&apos;,&apos;glyphicon glyphicon-danger-sign&apos;,data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure><h6 id="测试消息，用于发布消息到Redis"><a href="#测试消息，用于发布消息到Redis" class="headerlink" title="测试消息，用于发布消息到Redis"></a>测试消息，用于发布消息到Redis</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">import redis</div><div class="line">import json</div><div class="line"></div><div class="line">rc = redis.Redis(host=&apos;127.0.0.1&apos;, password=&apos;geekwolf&apos;, port=6379, db=0)</div><div class="line">msg = &#123;&quot;告警主机&quot;: &quot;web-server-node1&quot;, &quot;告警地址&quot;: &quot;192.168.1133.11&quot;, &quot;告警时间&quot;: &quot;2017-11-11 05:05:22&quot;, &quot;告警等级&quot;: &quot;严重&quot;,</div><div class="line">       &quot;告警信息&quot;: &quot;Web端口80监控&quot;, &quot;问题详情&quot;: &quot;80端口连接失败&quot;, &quot;当前状态&quot;: &quot;Problem&quot;, &quot;事件ID&quot;: &quot;12345&quot;&#125;</div><div class="line"></div><div class="line">rc.publish(&apos;alarm&apos;, json.dumps(msg))</div></pre></td></tr></table></figure><h6 id="运行服务，测试"><a href="#运行服务，测试" class="headerlink" title="运行服务，测试"></a>运行服务，测试</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">启动项目(http/websocket):</div><div class="line">python manage.py runserver 0.0.0.0:8000</div><div class="line">启动监听报警消息进程:</div><div class="line">python manage.py alert</div></pre></td></tr></table></figure><p>访问<a href="http://192.168.1.1:8000,运行test.py脚本" target="_blank" rel="external">http://192.168.1.1:8000,运行test.py脚本</a><br><img src="http://ow1schdt5.bkt.clouddn.com/ws-warn.png" alt="image"></p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><blockquote><ul><li>利用Socket.IO实现消息实时推送 <a href="http://www.wukai.me/2017/08/27/push-message-with-socketio/" target="_blank" rel="external">http://www.wukai.me/2017/08/27/push-message-with-socketio/</a></li><li>WebSocket相关资料 <a href="http://www.52im.net/thread-331-1-1.html" target="_blank" rel="external">http://www.52im.net/thread-331-1-1.html</a></li><li>WSGI规范 <a href="http://wsgi.tutorial.codepoint.net/application-interface" target="_blank" rel="external">http://wsgi.tutorial.codepoint.net/application-interface</a></li><li>Channels文档:<a href="http://channels.readthedocs.io" target="_blank" rel="external">http://channels.readthedocs.io</a></li><li>Chat Example： <a href="https://gearheart.io/blog/creating-a-chat-with-django-channels/" target="_blank" rel="external">https://gearheart.io/blog/creating-a-chat-with-django-channels/</a></li><li>Websocket 5分钟从入门到精通 <a href="https://segmentfault.com/a/1190000012709475" target="_blank" rel="external">https://segmentfault.com/a/1190000012709475</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;什么是WebSocket&quot;&gt;&lt;a href=&quot;#什么是WebSocket&quot; class=&quot;headerlink&quot; title=&quot;什么是WebSocket&quot;&gt;&lt;/a&gt;什么是WebSocket&lt;/h4&gt;&lt;p&gt;websocket是HTML5开始提供的一种新协议,用于浏览
      
    
    </summary>
    
    
      <category term="WebSocket" scheme="http://www.simlinux.com/tags/WebSocket/"/>
    
      <category term="消息推送" scheme="http://www.simlinux.com/tags/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/"/>
    
      <category term="Zabbix 实时告警到页面" scheme="http://www.simlinux.com/tags/Zabbix-%E5%AE%9E%E6%97%B6%E5%91%8A%E8%AD%A6%E5%88%B0%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>运维故障管理系统FMS</title>
    <link href="http://www.simlinux.com/2017/09/12/devops-fms.html"/>
    <id>http://www.simlinux.com/2017/09/12/devops-fms.html</id>
    <published>2017-09-12T13:40:59.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h4><p>考虑到日常运维中涉及到故障的记录、统计等需求，针对不同的产品线、故障类型、级别等开发了运维故障管理系统FMS</p><blockquote><p>善于总结故障，刨根问底，方可预防，减少避免类似问题的出现</p></blockquote><h4 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Python: 3.6</div><div class="line">Django: 1.11.0</div><div class="line">项目地址: git@github.com:geekwolf/fms.git</div></pre></td></tr></table></figure><h4 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h4><ul><li>故障管理(类型、级别等)</li><li>项目管理(针对区分不同业务线)</li><li>用户管理(用户、用户组)</li><li>权限管理</li><li>统计Dashboard</li></ul><h4 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install -i https://pypi.douban.com/simple/  -r requirements.txt</div></pre></td></tr></table></figure><p>MySQL配置修改settings.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">DATABASES = &#123;</div><div class="line">    <span class="string">'default'</span>: &#123;</div><div class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</div><div class="line">        <span class="string">'NAME'</span>: <span class="string">'fms'</span>,</div><div class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</div><div class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'xxxx'</span>,</div><div class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</div><div class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改故障通知邮箱settings.py:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></div><div class="line">EMAIL_USE_TLS = <span class="keyword">False</span></div><div class="line">EMAIL_HOST = <span class="string">'service.simlinux.com'</span></div><div class="line">EMAIL_PORT = <span class="number">25</span></div><div class="line">EMAIL_HOST_USER = <span class="string">'admin@service.simlinux.com'</span></div><div class="line">EMAIL_HOST_PASSWORD = <span class="string">'xxx'</span></div><div class="line">DEFAULT_FROM_EMAIL = <span class="string">'geekwolf &lt;admin@service.simlinux.com&gt;'</span></div></pre></td></tr></table></figure></p><h4 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">python manage.py makemigrations</div><div class="line">python manage.py migrate</div><div class="line">python manage.py loaddata default_types</div><div class="line">python manage.py loaddata default_user</div></pre></td></tr></table></figure><p>登录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">python manage.py runserver</div><div class="line">http://127.0.0.1:8000</div><div class="line">admin admin</div></pre></td></tr></table></figure></p><h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/fms/dashboard.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/fms.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_fms.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_user.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/group_perm.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;背景说明&quot;&gt;&lt;a href=&quot;#背景说明&quot; class=&quot;headerlink&quot; title=&quot;背景说明&quot;&gt;&lt;/a&gt;背景说明&lt;/h4&gt;&lt;p&gt;考虑到日常运维中涉及到故障的记录、统计等需求，针对不同的产品线、故障类型、级别等开发了运维故障管理系统FMS&lt;/p&gt;
&lt;bl
      
    
    </summary>
    
    
      <category term="DevOps" scheme="http://www.simlinux.com/tags/DevOps/"/>
    
      <category term="运维故障管理系统" scheme="http://www.simlinux.com/tags/%E8%BF%90%E7%BB%B4%E6%95%85%E9%9A%9C%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>k8s部署之分布式KV存储Etcd</title>
    <link href="http://www.simlinux.com/2017/09/08/k8s-etcd-deploy-test.html"/>
    <id>http://www.simlinux.com/2017/09/08/k8s-etcd-deploy-test.html</id>
    <published>2017-09-08T11:16:09.000Z</published>
    <updated>2017-12-17T03:30:28.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Etcd是什么"><a href="#Etcd是什么" class="headerlink" title="Etcd是什么"></a>Etcd是什么</h4><blockquote><p>Etcd是一个分布式、使用Raft算法维护一致性的kv存储系统，与其类似产品有Zookeeper(老牌经典)、Consul等，Etcd相对ZK，更加轻量、易运维。具体三者之间的对比可参考 <a href="https://luyiisme.github.io/2017/04/22/spring-cloud-service-discovery-products/" target="_blank" rel="external">https://luyiisme.github.io/2017/04/22/spring-cloud-service-discovery-products/</a></p></blockquote><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><p>和zk、consul等类似，使用场景多用于:</p><ul><li>服务发现</li><li>消息发布与订阅</li><li>负载均衡</li><li>分布式锁</li><li>分布式队列</li></ul><h4 id="读写性能"><a href="#读写性能" class="headerlink" title="读写性能"></a>读写性能</h4><p>压测数据参考官方：<br><a href="https://coreos.com/etcd/docs/latest/op-guide/performance.html" target="_blank" rel="external">https://coreos.com/etcd/docs/latest/op-guide/performance.html</a></p><h4 id="本地集群部署"><a href="#本地集群部署" class="headerlink" title="本地集群部署"></a>本地集群部署</h4><ul><li>操作系统:Debian8 x64</li><li>Etcd v3.2.7</li></ul><p>A. 安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/coreos/etcd/releases/download/v3.2.7/etcd-v3.2.7-linux-arm64.tar.gz</div><div class="line">tar xf etcd-v3.2.7-linux-arm64.tar.gz</div><div class="line">cd etcd-v3.2.7-linux-amd64</div><div class="line">cp etc* /usr/local/bin/</div><div class="line"></div><div class="line">etcd: Etcd服务端文件</div><div class="line">etcdctl: 供用户使用的命令客户端</div></pre></td></tr></table></figure></p><p>B. 启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">root@a4c8d490:/home/geekwolf# etcd</div><div class="line">2017-09-07 15:42:23.957656 I | etcdmain: etcd Version: 3.2.7</div><div class="line">2017-09-07 15:42:23.957699 I | etcdmain: Git SHA: bb66589</div><div class="line">2017-09-07 15:42:23.957718 I | etcdmain: Go Version: go1.8.3</div><div class="line">2017-09-07 15:42:23.957723 I | etcdmain: Go OS/Arch: linux/amd64</div><div class="line">2017-09-07 15:42:23.957729 I | etcdmain: setting maximum number of CPUs to 8, total number of available CPUs is 8</div><div class="line">2017-09-07 15:42:23.957739 W | etcdmain: no data-dir provided, using default data-dir ./default.etcd</div><div class="line">2017-09-07 15:42:23.957764 N | etcdmain: the server is already initialized as member before, starting as etcd member...</div><div class="line">2017-09-07 15:42:23.957995 I | embed: listening for peers on http://localhost:2380</div><div class="line">2017-09-07 15:42:23.958107 I | embed: listening for client requests on localhost:2379</div><div class="line">2017-09-07 15:42:23.964607 I | etcdserver: name = default</div><div class="line">2017-09-07 15:42:23.964633 I | etcdserver: data dir = default.etcd</div><div class="line">2017-09-07 15:42:23.964652 I | etcdserver: member dir = default.etcd/member</div><div class="line">2017-09-07 15:42:23.964657 I | etcdserver: heartbeat = 100ms</div><div class="line">2017-09-07 15:42:23.964663 I | etcdserver: election = 1000ms</div><div class="line">2017-09-07 15:42:23.964668 I | etcdserver: snapshot count = 100000</div><div class="line">2017-09-07 15:42:23.964680 I | etcdserver: advertise client URLs = http://localhost:2379</div><div class="line">2017-09-07 15:42:23.973007 I | etcdserver: restarting member 8e9e05c52164694d in cluster cdf818194e3a8c32 at commit index 14</div><div class="line">2017-09-07 15:42:23.973041 I | raft: 8e9e05c52164694d became follower at term 2</div><div class="line">2017-09-07 15:42:23.973065 I | raft: newRaft 8e9e05c52164694d [peers: [], term: 2, commit: 14, applied: 0, lastindex: 14, lastterm: 2]</div><div class="line">2017-09-07 15:42:23.984367 W | auth: simple token is not cryptographically signed</div><div class="line">2017-09-07 15:42:23.993237 I | etcdserver: starting server... [version: 3.2.7, cluster version: to_be_decided]</div><div class="line">2017-09-07 15:42:23.993659 I | etcdserver/membership: added member 8e9e05c52164694d [http://localhost:2380] to cluster cdf818194e3a8c32</div><div class="line">2017-09-07 15:42:23.993754 N | etcdserver/membership: set the initial cluster version to 3.2</div><div class="line">2017-09-07 15:42:23.993796 I | etcdserver/api: enabled capabilities for version 3.2</div><div class="line">2017-09-07 15:42:24.473288 I | raft: 8e9e05c52164694d is starting a new election at term 2</div><div class="line">2017-09-07 15:42:24.473451 I | raft: 8e9e05c52164694d became candidate at term 3</div><div class="line">2017-09-07 15:42:24.473519 I | raft: 8e9e05c52164694d received MsgVoteResp from 8e9e05c52164694d at term 3</div><div class="line">2017-09-07 15:42:24.473568 I | raft: 8e9e05c52164694d became leader at term 3</div><div class="line">2017-09-07 15:42:24.473605 I | raft: raft.node: 8e9e05c52164694d elected leader 8e9e05c52164694d at term 3</div><div class="line">2017-09-07 15:42:24.478746 I | etcdserver: published &#123;Name:default ClientURLs:[http://localhost:2379]&#125; to cluster cdf818194e3a8c32</div><div class="line">2017-09-07 15:42:24.478824 I | embed: ready to serve client requests</div><div class="line">2017-09-07 15:42:24.479116 N | embed: serving insecure client requests on 127.0.0.1:2379, this is strongly discouraged!</div></pre></td></tr></table></figure></p><p>由上面的输出可知：</p><ul><li>etcd服务之间通信端口是2380，暴露给客户端端口为2379</li><li>默认将数据存放到当前路径default.etcd/目录下</li><li>该节点的名称默认为default</li><li>集群和节点都会生成唯一的uuid</li><li>启动服务时，会根据raft算法，选举leader</li></ul><p>C. 测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">查看api版本（默认api版本是v2）</div><div class="line">root@a4c8d490:~/k8s/etcd-v3.2.7-linux-amd64# etcdctl  --version</div><div class="line">etcdctl version: 3.2.7</div><div class="line">API version: 2</div><div class="line"></div><div class="line">使用API V3方法：</div><div class="line">Etcd服务端和客户端添加变量 export ETCDCTL_API=3,重新启动etcd服务即可</div><div class="line">以下操作在api v3版本:</div><div class="line">写入key: etcdctl put foo bar</div><div class="line">读取key: etcdctl get foo</div><div class="line">多key范围读取: etcdctl get foo foo9(会将foo..foo8的key读取,不包括foo9)</div><div class="line">读取过往版本key的值(Etcd键值对的修改都会增加全局修订版本号,--rev为版本号):</div><div class="line"> etcdctl get --rev=4 foo foo9</div><div class="line">删除key: etcdctl del foo</div><div class="line">范围删除(foo-&amp;gt;foo9):etcdctl del foo foo9</div><div class="line">观察key变化:etcdctl watch foo</div><div class="line">观察范围key变化: etcdctl watch foo foo9</div><div class="line">从rev=2版本开始观察key变化: etcdctl watch --rev=2 foo</div><div class="line">压缩版本5之前的修订版本(压缩后5之前的版本不可能访问): etcdctl compact 5</div><div class="line">授予key有效期:</div><div class="line">创建租约: </div><div class="line">$ etcdctl lease grant 10</div><div class="line">lease 694d5e5b63a74f31 granted with TTL(10s)</div><div class="line">附加key foo到租约694d5e5b63a74f31，该租约过期后，会删除附加的所有key</div><div class="line">撤销租约(撤销后，附加改租约的所有key被删除): etcdctl lease revoke 32695410dcc0ca06</div><div class="line">维持租约(执行后，会一直维持该租约): etcdctl lease keep-alive 32695410dcc0ca0</div><div class="line"></div><div class="line">其他参数可参考 etcdctl --help</div><div class="line">通过HTTP操作：</div><div class="line">Etcd v2: https://coreos.com/etcd/docs/latest/v2/api.html</div><div class="line">Etcd v3: https://coreos.com/etcd/docs/latest/dev-guide/api_grpc_gateway.html</div></pre></td></tr></table></figure></p><h4 id="多节点集群部署"><a href="#多节点集群部署" class="headerlink" title="多节点集群部署"></a>多节点集群部署</h4><h5 id="静态模式部署"><a href="#静态模式部署" class="headerlink" title="静态模式部署"></a>静态模式部署</h5><h6 id="环境说明-三节点集群"><a href="#环境说明-三节点集群" class="headerlink" title="环境说明(三节点集群)"></a>环境说明(三节点集群)</h6><table><thead><tr><th style="text-align:left">节点</th><th style="text-align:left">地址</th><th style="text-align:left">主机</th></tr></thead><tbody><tr><td style="text-align:left">etcd1</td><td style="text-align:left">192.168.234.133</td><td style="text-align:left">etcd1.simlinux.com</td></tr><tr><td style="text-align:left">etcd2</td><td style="text-align:left">192.168.234.134</td><td style="text-align:left">etcd2.simlinux.com</td></tr><tr><td style="text-align:left">etcd3</td><td style="text-align:left">192.168.234.135</td><td style="text-align:left">etcd3.simlinux.com</td></tr></tbody></table><h6 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h6><p>三个节点分别设置主机名:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hostnamectl --static  set-hostname etcd1.simlinux.com</div><div class="line">hostnamectl --static  set-hostname etcd2.simlinux.com</div><div class="line">hostnamectl --static  set-hostname etcd3.simlinux.com</div></pre></td></tr></table></figure></p><p>三个节点hosts文件添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vim /etc/hosts</div><div class="line">192.168.234.133 etcd1.simlinux.com </div><div class="line">192.168.234.134 etcd2.simlinux.com </div><div class="line">192.168.234.135 etcd3.simlinux.com</div></pre></td></tr></table></figure></p><p><strong>生成etcd证书(用于etcd间、客户端与etcd通信)</strong></p><blockquote><ul><li>etcdctl等客户端与etcd服务通信证书</li><li>etcd服务之间通信证书</li></ul><p>由上篇<a href="http://blog.simlinux.com/archives/1953.html" target="_blank" rel="external">k8s部署之使用CFSSL创建证书</a>的CA来生成</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">cat  etcd.json </div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;etcd&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;127.0.0.1&quot;,</div><div class="line">        &quot;192.168.234.133&quot;,</div><div class="line">        &quot;192.168.234.134&quot;,</div><div class="line">        &quot;192.168.234.135&quot;</div><div class="line">    ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;ShangHai&quot;,</div><div class="line">            &quot;ST&quot;: &quot;ShangHai&quot;,</div><div class="line">            &quot;O&quot;: &quot;K8s&quot;,</div><div class="line">            &quot;OU&quot;: &quot;System&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成服务端证书,用于服务端认证客户端(hosts需要包括允许访问ETCD Cluster的IP或者FQDN):</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server-csr.json | cfssljson -bare server</div><div class="line">server-key.pem</div><div class="line">server.csr</div><div class="line">server.pem</div><div class="line"></div><div class="line">生成对等证书，用于etcd间通信(这里三个节点使用同一个证书,建议分别生成证书):</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd.json | cfssljson -bare etcd</div><div class="line">etcd-key.pem</div><div class="line">etcd.csr</div><div class="line">etcd.pem</div><div class="line"></div><div class="line">将CA和etcd证书拷贝到etcd所有节点:</div><div class="line">cp ca.pem  etcd-key.pem etcd.pem server-key.pem server.pem /etc/etcd/ssl/</div></pre></td></tr></table></figure><h6 id="安装etcd节点-所有节点"><a href="#安装etcd节点-所有节点" class="headerlink" title="安装etcd节点(所有节点)"></a>安装etcd节点(所有节点)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/coreos/etcd/releases/download/v3.2.7/etcd-v3.2.7-linux-amd64.tar.gz</div><div class="line">tar xf etcd-v3.2.7-linux-amd64.tar.gz</div><div class="line">cd etcd-v3.2.7-linux-amd64</div><div class="line">chmod +x etcd*</div><div class="line">cp etcd* /bin</div></pre></td></tr></table></figure><h6 id="etcd配置"><a href="#etcd配置" class="headerlink" title="etcd配置"></a>etcd配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">服务管理(所有节点相同):</div><div class="line">vim /usr/lib/systemd/system/etcd.service</div><div class="line">[Unit]</div><div class="line">Description=Etcd Server</div><div class="line">After=network.target</div><div class="line">After=network-online.target</div><div class="line">Wants=network-online.target</div><div class="line">Documentation=https://github.com/coreos</div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">WorkingDirectory=/data/k8s/etcd/</div><div class="line">EnvironmentFile=/etc/etcd/etcd.conf</div><div class="line">ExecStart=/bin/etcd </div><div class="line">  --name=$&#123;NAME&#125; </div><div class="line">  --cert-file=/etc/etcd/ssl/etcd.pem </div><div class="line">  --key-file=/etc/etcd/ssl/etcd-key.pem </div><div class="line">  --peer-cert-file=/etc/etcd/ssl/etcd.pem </div><div class="line">  --peer-key-file=/etc/etcd/ssl/etcd-key.pem </div><div class="line">  --trusted-ca-file=/etc/etcd/ssl/ca.pem </div><div class="line">  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem </div><div class="line">  --initial-advertise-peer-urls=$&#123;INITIAL_ADVERTISE_PEER_URLS&#125; </div><div class="line">  --listen-peer-urls=$&#123;LISTEN_PEER_URLS&#125; </div><div class="line">  --listen-client-urls=$&#123;LISTEN_CLIENT_URLS&#125; </div><div class="line">  --advertise-client-urls=$&#123;ADVERTISE_CLIENT_URLS&#125; </div><div class="line">  --initial-cluster-token=$&#123;INITIAL_CLUSTER_TOKEN&#125; </div><div class="line">  --initial-cluster=$&#123;INITIAL_CLUSTER&#125; </div><div class="line">  --initial-cluster-state=new </div><div class="line">  --data-dir=$&#123;DATA_DIR&#125;</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">LimitNOFILE=65536</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure><p>配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">vim /etc/etcd/etcd.conf</div><div class="line">#节点名称</div><div class="line">NAME=&quot;etcd1&quot;</div><div class="line">#etcd数据存放目录</div><div class="line">DATA_DIR=&quot;/data/k8s/etcd&quot;</div><div class="line">#etcd节点间通信监听地址</div><div class="line">LISTEN_PEER_URLS=&quot;https://192.168.234.133:2380&quot;</div><div class="line">#对外提供服务的地址</div><div class="line">LISTEN_CLIENT_URLS=&quot;https://192.168.234.133:2379,https://127.0.0.1:2379&quot;</div><div class="line">#通知其他etcd节点本实例地址</div><div class="line">INITIAL_ADVERTISE_PEER_URLS=&quot;https://192.168.234.133:2380&quot;</div><div class="line">#初始化集群内节点地址</div><div class="line">INITIAL_CLUSTER=&quot;etcd1=https://192.168.234.133:2380,etcd2=https://192.168.234.134:2380,etcd3=https://192.168.234.135:2380&quot;</div><div class="line">#初始化状态.new表示新建,已经存在的集群使用existing</div><div class="line">INITIAL_CLUSTER_STATE=&quot;new&quot;</div><div class="line">#创建集群的token,每个集群唯一</div><div class="line">INITIAL_CLUSTER_TOKEN=&quot;k8s-etcd-cluster&quot;</div><div class="line">#告知其他集群本节点客户端监听地址</div><div class="line">ADVERTISE_CLIENT_URLS=&quot;https://192.168.234.133:2379&quot;</div><div class="line">ETCDCTL_API=3</div><div class="line">其中NAME/LISTEN_PEER_URLS/LISTEN_CLIENT_URLS/INITIAL_ADVERTISE_PEER_URLS/ADVERTISE_CLIENT_URLS替换成相应节点名称和地址</div></pre></td></tr></table></figure></p><h6 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y install ntp </div><div class="line">systemctl start ntpd </div><div class="line">systemctl start etcd.service</div><div class="line">systemctl stop etcd.service</div><div class="line">systemctl status etcd.service(查看服务状态及日志)</div></pre></td></tr></table></figure><h6 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">[root@etcd1 ~]# export etcd1=192.168.234.133</div><div class="line">[root@etcd1 ~]# export etcd2=192.168.234.134</div><div class="line">[root@etcd1 ~]# export etcd3=192.168.234.135</div><div class="line">[root@etcd1 ~]# export ETCDCTL_API=3</div><div class="line">[root@etcd1 ~]# export ENDPOINTS=$etcd1:2379,$etcd2:2379,$etcd3:2379</div><div class="line">查看集群成员:</div><div class="line">[root@etcd1 etcd]#  etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member list</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">|        ID        | STATUS  | NAME  |          PEER ADDRS          |         CLIENT ADDRS         |</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">| 1a4a83ef243ff1c9 | started | etcd2 | https://192.168.234.134:2380 | https://192.168.234.134:2379 |</div><div class="line">| 68243ef8797bd1ce | started | etcd1 | https://192.168.234.133:2380 | https://192.168.234.133:2379 |</div><div class="line">| fa30209a63d949b0 | started | etcd3 | https://192.168.234.135:2380 | https://192.168.234.135:2379 |</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">查看集群状态:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem endpoint status</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">|       ENDPOINT       |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">| 192.168.234.133:2379 | 68243ef8797bd1ce |   3.2.7 |   25 kB |     false |        10 |          9 |</div><div class="line">| 192.168.234.134:2379 | 1a4a83ef243ff1c9 |   3.2.7 |   25 kB |     false |        10 |          9 |</div><div class="line">| 192.168.234.135:2379 | fa30209a63d949b0 |   3.2.7 |   25 kB |      true |        10 |          9 |</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem endpoint health</div><div class="line">192.168.234.135:2379 is healthy: successfully committed proposal: took = 1.374345ms</div><div class="line">192.168.234.134:2379 is healthy: successfully committed proposal: took = 2.217525ms</div><div class="line">192.168.234.133:2379 is healthy: successfully committed proposal: took = 1.996245ms</div><div class="line">保存快照:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot save my.db</div><div class="line">Snapshot saved at my.db</div><div class="line">查看快照状态:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot status my.db</div><div class="line">+----------+----------+------------+------------+</div><div class="line">|   HASH   | REVISION | TOTAL KEYS | TOTAL SIZE |</div><div class="line">+----------+----------+------------+------------+</div><div class="line">| 9a496339 |        3 |          8 |      25 kB |</div><div class="line">+----------+----------+------------+------------+</div><div class="line">恢复数据(要先删除原来数据目录,所有节点操作)：</div><div class="line">[root@etcd1 ~]# etcdctl  --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot restore my.db  --data-dir=/data/k8s/etcd/</div><div class="line">2017-09-09 02:28:52.439616 I | etcdserver/membership: added member 8e9e05c52164694d [http://localhost:2380] to cluster cdf818194e3a8c32</div><div class="line">删除节点:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member remove 68243ef8797bd1ce</div><div class="line">更新节点:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member update 68243ef8797bd1ce https://192.168.234.133:1111(INITIAL_ADVERTISE_PEER_URLS)</div><div class="line">添加节点(删除etcd3，添加etcd4):</div><div class="line">export etcd4=192.168.234.136</div><div class="line">[root@etcd1 ~]#  etcdctl --endpoints=$&#123;etcd1&#125;:2379,$&#123;etcd2&#125;:2379 --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem  member add etcd4 --peer-urls=http://192.168.234.136:2380</div></pre></td></tr></table></figure><blockquote><p>Etcd:从应用场景到实现原理的全方位解读 <a href="http://www.infoq.com/cn/articles/etcd-interpretation-application-scenario-implement-principle" target="_blank" rel="external">http://www.infoq.com/cn/articles/etcd-interpretation-application-scenario-implement-principle</a><br>  Eetcd集群管理 <a href="https://coreos.com/etcd/docs/latest/demo.html" target="_blank" rel="external">https://coreos.com/etcd/docs/latest/demo.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Etcd是什么&quot;&gt;&lt;a href=&quot;#Etcd是什么&quot; class=&quot;headerlink&quot; title=&quot;Etcd是什么&quot;&gt;&lt;/a&gt;Etcd是什么&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Etcd是一个分布式、使用Raft算法维护一致性的kv存储系统，与其类似产
      
    
    </summary>
    
      <category term="docker" scheme="http://www.simlinux.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.simlinux.com/tags/docker/"/>
    
      <category term="etcd" scheme="http://www.simlinux.com/tags/etcd/"/>
    
  </entry>
  
  <entry>
    <title>k8s部署之使用CFSSL创建证书</title>
    <link href="http://www.simlinux.com/2017/09/07/k8s-cfssl-install-cert.html"/>
    <id>http://www.simlinux.com/2017/09/07/k8s-cfssl-install-cert.html</id>
    <published>2017-09-07T11:39:05.000Z</published>
    <updated>2017-12-17T03:24:31.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装CFSSL"><a href="#安装CFSSL" class="headerlink" title="安装CFSSL"></a>安装CFSSL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">curl -s -L -o /bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</div><div class="line">curl -s -L -o /bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</div><div class="line">curl -s -L -o /bin/cfssl-certinfo https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</div><div class="line">chmod +x /bin/cfssl*</div></pre></td></tr></table></figure><h4 id="容器相关证书类型"><a href="#容器相关证书类型" class="headerlink" title="容器相关证书类型"></a>容器相关证书类型</h4><blockquote><p>client certificate： 用于服务端认证客户端,例如etcdctl、etcd proxy、fleetctl、docker客户端<br>server certificate:  服务端使用，客户端以此验证服务端身份,例如docker服务端、kube-apiserver<br>peer certificate: 双向证书，用于etcd集群成员间通信</p></blockquote><h4 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建CA证书</h4><h5 id="生成默认CA配置"><a href="#生成默认CA配置" class="headerlink" title="生成默认CA配置"></a>生成默认CA配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mkdir /opt/ssl</div><div class="line">cd /opt/ssl</div><div class="line">cfssl print-defaults config &gt; ca-config.json</div><div class="line">cfssl print-defaults csr &gt; ca-csr.json</div></pre></td></tr></table></figure><p><strong>修改ca-config.json,分别配置针对三种不同证书类型的profile,其中有效期43800h为5年</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;signing&quot;: &#123;</div><div class="line">    &quot;default&quot;: &#123;</div><div class="line">        &quot;expiry&quot;: &quot;43800h&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;profiles&quot;: &#123;</div><div class="line">        &quot;server&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;server auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &quot;client&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;client auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &quot;peer&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;server auth&quot;,</div><div class="line">                &quot;client auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong>修改ca-csr.json</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;CN&quot;: &quot;Self Signed Ca&quot;,</div><div class="line">&quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 2048</div><div class="line">&#125;,</div><div class="line">&quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">        &quot;C&quot;: &quot;CN&quot;,</div><div class="line">        &quot;L&quot;: &quot;SH&quot;,</div><div class="line">        &quot;O&quot;: &quot;Netease&quot;,</div><div class="line">        &quot;ST&quot;: &quot;SH&quot;,            </div><div class="line">        &quot;OU&quot;: &quot;OT&quot;</div><div class="line">    &#125;    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong>生成CA证书和私钥</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</div><div class="line">生成ca.pem、ca.csr、ca-key.pem(CA私钥,需妥善保管)</div></pre></td></tr></table></figure></p><h5 id="签发Server-Certificate"><a href="#签发Server-Certificate" class="headerlink" title="签发Server Certificate"></a>签发Server Certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; server.json</div><div class="line">vim server.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;Server&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;192.168.1.1&quot;</div><div class="line">       ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成服务端证书和私钥</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson -bare server</div></pre></td></tr></table></figure><h5 id="签发Client-Certificate"><a href="#签发Client-Certificate" class="headerlink" title="签发Client Certificate"></a>签发Client Certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; client.json</div><div class="line">vim client.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;Client&quot;,</div><div class="line">    &quot;hosts&quot;: [],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成客户端证书和私钥</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson -bare client</div></pre></td></tr></table></figure><h5 id="签发peer-certificate"><a href="#签发peer-certificate" class="headerlink" title="签发peer certificate"></a>签发peer certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; member1.json</div><div class="line">vim member1.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;member1&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;192.168.1.1&quot;</div><div class="line">    ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">为节点member1生成证书和私钥:</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer member1.json | cfssljson -bare member1</div><div class="line">针对etcd服务,每个etcd节点上按照上述方法生成相应的证书和私钥</div></pre></td></tr></table></figure><h5 id="最后校验证书"><a href="#最后校验证书" class="headerlink" title="最后校验证书"></a>最后校验证书</h5><p>校验生成的证书是否和配置相符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openssl x509 -in ca.pem -text -noout</div><div class="line">openssl x509 -in server.pem -text -noout</div><div class="line">openssl x509 -in client.pem -text -noout</div></pre></td></tr></table></figure></p><h4 id="k8s集群所需证书"><a href="#k8s集群所需证书" class="headerlink" title="k8s集群所需证书"></a>k8s集群所需证书</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/09/cert.jpg" alt=""></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote><p><a href="https://coreos.com/os/docs/latest/generate-self-signed-certificates.html" target="_blank" rel="external">https://coreos.com/os/docs/latest/generate-self-signed-certificates.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装CFSSL&quot;&gt;&lt;a href=&quot;#安装CFSSL&quot; class=&quot;headerlink&quot; title=&quot;安装CFSSL&quot;&gt;&lt;/a&gt;安装CFSSL&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="docker" scheme="http://www.simlinux.com/categories/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>Django模板无法使用perms变量问题</title>
    <link href="http://www.simlinux.com/2017/09/06/django-perms.html"/>
    <id>http://www.simlinux.com/2017/09/06/django-perms.html</id>
    <published>2017-09-06T08:33:00.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先,在使用Django内置权限管理系统时,settings.py文件要添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">INSTALLED_APPS添加:</div><div class="line">&apos;django.contrib.auth&apos;,</div><div class="line"></div><div class="line">MIDDLEWARE添加:</div><div class="line">&apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;,</div><div class="line"></div><div class="line">&apos;django.contrib.auth.context_processors.auth&apos;,</div><div class="line">TEMPLATES = [</div><div class="line">    &#123;</div><div class="line">        &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;,</div><div class="line">        &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;)],</div><div class="line">        &apos;APP_DIRS&apos;: True,</div><div class="line">        &apos;OPTIONS&apos;: &#123;</div><div class="line">            &apos;context_processors&apos;: [</div><div class="line">                &apos;django.template.context_processors.debug&apos;,</div><div class="line">                &apos;django.template.context_processors.i18n&apos;,</div><div class="line">                &apos;django.template.context_processors.media&apos;,</div><div class="line">                &apos;django.template.context_processors.static&apos;,</div><div class="line">                &apos;django.template.context_processors.tz&apos;,</div><div class="line">                &apos;django.contrib.messages.context_processors.messages&apos;,</div><div class="line">                &apos;django.template.context_processors.request&apos;,</div><div class="line">                &apos;django.contrib.auth.context_processors.auth&apos;,</div><div class="line">            ],</div><div class="line">        &#125;,</div><div class="line">    &#125;,</div><div class="line">]</div></pre></td></tr></table></figure></p><p>如何在模板进行权限检查呢？<br>根据官网说明 <a href="https://docs.djangoproject.com/en/1.11/topics/auth/default/#permissions" target="_blank" rel="external">https://docs.djangoproject.com/en/1.11/topics/auth/default/#permissions</a> ,已登录用户权限保存在模板变量中,是权限模板代理django.contrib.auth.context_processors.PermWrapper的一个实例，<br>具体可以查看django/contrib/auth/context_processors.py源码</p><p>测试用例:</p><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/09/codeexample.jpg" alt=""></p><p>测试过程中,发现变量压根不存在,没有任何输出;好吧,只能取Debug Django的源码了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    Returns context variables required by apps that use Django's authentication</span></div><div class="line"><span class="string">    system.</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    If there is no 'user' attribute in the request, uses AnonymousUser (from</span></div><div class="line"><span class="string">    django.contrib.auth).</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">if</span> hasattr(request, <span class="string">'user'</span>):</div><div class="line">        user = request.user</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AnonymousUser</div><div class="line">        user = AnonymousUser()</div><div class="line">    print(user, PermWrapper(user), <span class="string">'-----------------------'</span>)</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="string">'user'</span>: user,</div><div class="line">        <span class="string">'perms'</span>: PermWrapper(user),</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p>测试访问接口,发现有的接口有打印权限信息,有的没有，似乎恍然醒悟<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">可以打印权限信息的接口返回:</div><div class="line">return render(request, &apos;fms/fms_add.html&apos;, &#123;&apos;request&apos;: request, &apos;form&apos;: form, &apos;error&apos;: error&#125;)</div><div class="line">不能打印权限新的接口返回:</div><div class="line">return render_to_response( &apos;fms/fms.html&apos;, data)</div></pre></td></tr></table></figure></p><p>render和render_to_response区别<br>render是比render_to_reponse更便捷渲染模板的方法,会自动使用RequestContext,而后者需要手动添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return render_to_response(request, &apos;fms/fms_add.html&apos;, &#123;&apos;request&apos;: request, &apos;form&apos;: form, &apos;error&apos;: error&#125;,context_instance=RequestContext(request))</div></pre></td></tr></table></figure></p><p>其中RequestContext是django.template.Context的子类.接受request和context_processors,从而将上下文填充渲染到模板<br>问题已经很明确，由于使用了render_to_response方法,没有手动添加context_instance=RequestContext(request)导致模板不能使用变量</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先,在使用Django内置权限管理系统时,settings.py文件要添加&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;di
      
    
    </summary>
    
      <category term="Python" scheme="http://www.simlinux.com/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>企业级Docker私有仓库部署(https)</title>
    <link href="http://www.simlinux.com/2017/08/05/docker-harbor-https.html"/>
    <id>http://www.simlinux.com/2017/08/05/docker-harbor-https.html</id>
    <published>2017-08-05T01:52:42.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h4><ul><li>Centos7.3 x64</li><li>docker-ce-17.06.0</li><li>docker-compose-1.15.0</li><li>Python-2.7.5(系统默认)</li></ul><h4 id="部署目标"><a href="#部署目标" class="headerlink" title="部署目标"></a>部署目标</h4><ul><li>使用HTTPS协议</li><li>支持Clair(在Harbor1.2版本会支持)</li></ul><h5 id="支持HTTPS"><a href="#支持HTTPS" class="headerlink" title="支持HTTPS"></a>支持HTTPS</h5><p>生产环境最好由权威CA机构签发证书(免费的推荐StartSSL,可参考<a href="https://www.wosign.com/Support/Nginx.html),这里为了测试方便使用自签发的证书" target="_blank" rel="external">https://www.wosign.com/Support/Nginx.html),这里为了测试方便使用自签发的证书</a></p><ul><li><p>创建CA证书</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt</div></pre></td></tr></table></figure></li><li><p>生成CSR公钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout hub.wow.key  -out hub.wow.csr</div></pre></td></tr></table></figure></li><li><p>颁发证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl x509 -req -days 365 -in hub.wow.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out hub.wow.crt</div></pre></td></tr></table></figure></li><li><p>部署证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cp hub.wow.crt hub.wow.key   /data/harbor/keys/</div><div class="line">vim /data/harbor/harbor.cfg</div><div class="line">  hostname = hub.wow</div><div class="line">  ui_url_protocol = https</div><div class="line">  ssl_cert = /data/harbor/keys/hub.wow.crt</div><div class="line">  ssl_cert_key = /data/harbor/keys/hub.wow.key</div><div class="line"></div><div class="line">    cd /data/harbor</div><div class="line">    ./prepare  重新生成配置文件</div><div class="line">    docker-compose down</div><div class="line">    docker-compose up</div></pre></td></tr></table></figure></li><li><p>通过HTTPS访问私有仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">WebUI: https://how.wow</div><div class="line">Docker Client:</div><div class="line"></div><div class="line">[root@hub ~]# docker login -u admin -p Harbor12345 hub.wow</div><div class="line">Login Succeeded</div></pre></td></tr></table></figure></li></ul><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>docker login时提示x509: certificate signed by unknown authority<br><strong>解决方法</strong>: 自签名的证书不被系统信任,需要cp ca.crt /etc/docker/certs.d/hub.wow/,  无需重启docker</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;部署环境&quot;&gt;&lt;a href=&quot;#部署环境&quot; class=&quot;headerlink&quot; title=&quot;部署环境&quot;&gt;&lt;/a&gt;部署环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Centos7.3 x64&lt;/li&gt;
&lt;li&gt;docker-ce-17.06.0&lt;/li&gt;
&lt;li&gt;docker
      
    
    </summary>
    
      <category term="docker" scheme="http://www.simlinux.com/categories/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>企业级Docker私有仓库之Harbor部署(http)</title>
    <link href="http://www.simlinux.com/2017/08/04/docker-harbor-http.html"/>
    <id>http://www.simlinux.com/2017/08/04/docker-harbor-http.html</id>
    <published>2017-08-04T04:20:14.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h4><ul><li>Centos7.3 x64</li><li>docker-ce-17.06.0</li><li>docker-compose-1.15.0</li><li>Python-2.7.5(系统默认)</li></ul><h4 id="Docker及Docker-compose安装"><a href="#Docker及Docker-compose安装" class="headerlink" title="Docker及Docker-compose安装"></a>Docker及Docker-compose安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> yum install -y yum-utils device-mapper-persistent-data lvm2</div><div class="line"> yum-config-manager \</div><div class="line">    --add-repo \</div><div class="line">    https://download.docker.com/linux/centos/docker-ce.repo</div><div class="line"> yum-config-manager --enable docker-ce-edge</div><div class="line"> yum makecache fast</div><div class="line"> systemctl start docker </div><div class="line"> systemctl enable docker</div><div class="line"></div><div class="line">curl -L https://github.com/docker/compose/releases/download/1.15.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</div><div class="line">chmod +x /usr/local/bin/docker-compose</div></pre></td></tr></table></figure><h4 id="Habor部署配置"><a href="#Habor部署配置" class="headerlink" title="Habor部署配置"></a>Habor部署配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/vmware/harbor/releases/download/v1.1.2/harbor-offline-installer-v1.1.2.tgz</div><div class="line">tar xf harbor-offline-installer-v1.1.2.tgz</div><div class="line">cd harbor/</div><div class="line"></div><div class="line">vim harbor.cfg</div><div class="line">hostname = hub.wow</div><div class="line">其他默认(http协议)</div><div class="line"></div><div class="line">./install.sh</div><div class="line">安装成功后，可以通过http://hub.wow/访问</div></pre></td></tr></table></figure><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/08/harborui.jpg" alt=""></p><h4 id="Docker客户端使用"><a href="#Docker客户端使用" class="headerlink" title="Docker客户端使用"></a>Docker客户端使用</h4><p>由于Harbor默认使用的http协议,故需要在Docker client上的Dockerd服务增加–insecure-registry hub.wow<br>Centos7修改方式为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim /lib/systemd/system/docker.service</div><div class="line">ExecStart=/usr/bin/dockerd  --insecure-registry hub.wow</div><div class="line"></div><div class="line">systemctl daemon-reload</div><div class="line">systemctl reload docker</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost harbor]# docker login -u admin -p Harbor12345 hub.wow</div><div class="line">官方仓库下载busybox镜像</div><div class="line">[root@localhost harbor]# docker pull busybox </div><div class="line">[root@localhost harbor]# docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">busybox                     latest              efe10ee6727f        2 weeks ago         1.13MB</div><div class="line">本地基于busybox:latest创建标记hub.wow/busybox:latest</div><div class="line">[root@localhost harbor]# docker tag busybox:latest hub.wow/project_name/busybox:latest</div><div class="line">推送本地镜像busybox:latest 到hub.wow私有仓库</div><div class="line">[root@localhost harbor]# docker push hub.wow/project_name/busybox:latest</div></pre></td></tr></table></figure><h4 id="Harbor服务管理"><a href="#Harbor服务管理" class="headerlink" title="Harbor服务管理"></a>Harbor服务管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd harbor/</div><div class="line">docker-compose -f ./docker-compose.yml  [ up|down|ps|stop|start ]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;部署环境&quot;&gt;&lt;a href=&quot;#部署环境&quot; class=&quot;headerlink&quot; title=&quot;部署环境&quot;&gt;&lt;/a&gt;部署环境&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Centos7.3 x64&lt;/li&gt;
&lt;li&gt;docker-ce-17.06.0&lt;/li&gt;
&lt;li&gt;docker
      
    
    </summary>
    
      <category term="docker" scheme="http://www.simlinux.com/categories/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>使用Zabbix LLD实现进程数监控</title>
    <link href="http://www.simlinux.com/2017/04/19/zabbix-proccess-lld.html"/>
    <id>http://www.simlinux.com/2017/04/19/zabbix-proccess-lld.html</id>
    <published>2017-04-19T06:52:09.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><ul><li>针对特定进程数量做监控报警</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li>通过Zabbix LLD自动发现：每台机器都跑了什么服务、每个服务应该跑多少进程</li><li>Zabbix Agent 30s将当前机器跑了哪些服务、每个服务进程数上报Zabbix Server</li><li>开发给定配置文件proccessInfo.txt:  IP 服务名称 进程数量,此配置作为监控依据</li><li>proccessInfo.txt配置文件需在每次变更配置时，自动生成最新</li></ol><h4 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h4><ol><li>LLD自动发现脚本</li><li>数据采集脚本</li><li>Agent添加Key</li><li>Zabbix Server添加模板组</li><li>创建自动发现规则(监控项、报警触发器)</li><li>添加当前进程数监控项(通过Zabbix Trapper方式，由Agent端)</li><li>定义报警内容</li></ol><h4 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h4><h4 id="LLD自动发现脚本"><a href="#LLD自动发现脚本" class="headerlink" title="LLD自动发现脚本"></a>LLD自动发现脚本</h4><p>LLD自动发现,将进程名称及进程总数上报Zabbix Server：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/usr/bin/python services.py services_list</div><div class="line"></div><div class="line">&#123;</div><div class="line">    &quot;data&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_q1_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 3</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_world_d2_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 1</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_gate_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 2</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_world_d1_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 1</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">数据采集上报： /usr/bin/python services.py &#123;HOST.HOST&#125;</div></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line">import json</div><div class="line">import commands</div><div class="line">import subprocess</div><div class="line">import re</div><div class="line">import sys</div><div class="line"></div><div class="line">class services_monitor:</div><div class="line"></div><div class="line">        def __init__(self):</div><div class="line"></div><div class="line">            self.zabbix_server_ip = &apos;192.168.1.1&apos;</div><div class="line">            self.info_path = &apos;/home/proccessInfo.txt&apos;</div><div class="line">            self.data_path = &apos;/tmp/.process_number_monitor.log&apos;</div><div class="line"></div><div class="line">        def ip(self):</div><div class="line">            ipstr = &apos;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&apos;</div><div class="line">            ipconfig_process = subprocess.Popen(&quot;ifconfig&quot;, stdout=subprocess.PIPE)</div><div class="line">            output = ipconfig_process.stdout.read()</div><div class="line">            ip_pattern = re.compile(&apos;(inet addr:%s)&apos; % ipstr)</div><div class="line">            pattern = re.compile(ipstr)</div><div class="line">            iplist = []</div><div class="line">            for ipaddr in re.finditer(ip_pattern, str(output)):</div><div class="line">                ip = pattern.search(ipaddr.group())</div><div class="line">                if ip.group() != &quot;127.0.0.1&quot;:</div><div class="line">                    iplist.append(ip.group())</div><div class="line">            ip = &apos;|&apos;.join(iplist)</div><div class="line">            return ip</div><div class="line"></div><div class="line">        def check_proc(self,proc_name):</div><div class="line"></div><div class="line">            cmd = &apos;ps -ef |grep  %s|grep -v grep|wc -l&apos; % proc_name</div><div class="line">            proccess_info = subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE)</div><div class="line"></div><div class="line">            # list=proccess_info.stdout.read().strip().split(&apos;\n&apos;)</div><div class="line">            procss_num = proccess_info.communicate()[0]</div><div class="line">            return procss_num</div><div class="line"></div><div class="line">        def get_info(self,ip):</div><div class="line"></div><div class="line">            service = []</div><div class="line">            status, result = commands.getstatusoutput(&quot;grep -E &apos;%s&apos; %s&quot; % (str(ip),self.info_path))</div><div class="line">            result = result.split(&apos;\n&apos;)</div><div class="line">            for i in result:</div><div class="line">                i = list(i.split(&apos; &apos;))</div><div class="line">                service.append(&#123;&quot;&#123;#SERVICENAME&#125;&quot;: i[0].strip() + &quot;-&quot; + i[1].strip(), &quot;&#123;#TRIGGER_VALUE&#125;&quot;:int(i[2].strip())&#125;)</div><div class="line">            data = json.dumps(&#123;&apos;data&apos;: service&#125;, sort_keys=True, indent=4)</div><div class="line">            return data</div><div class="line"></div><div class="line">        def collect_data(self,data):</div><div class="line">            data = json.loads(data)[&quot;data&quot;]</div><div class="line">            commands.getstatusoutput(&apos;cat /dev/null &amp;gt;%s&apos; % self.data_path)</div><div class="line">            f = open(self.data_path,&apos;a&apos;)</div><div class="line">            for i  in data:</div><div class="line">                name = i[&apos;&#123;#SERVICENAME&#125;&apos;].split(&apos;-&apos;)</div><div class="line">                ip = name[0]</div><div class="line">                proc_name =  name[1]</div><div class="line">                f.write(&apos;%s\tproc_num[%s]\t%s&apos; %(ip,i[&apos;&#123;#SERVICENAME&#125;&apos;],self.check_proc(proc_name)))</div><div class="line">            f.close()</div><div class="line"></div><div class="line">        def send_data(self,data_path):</div><div class="line">            status,output = commands.getstatusoutput(&apos;/bin/bash -c &quot;zabbix_sender -z  %s  -i  %s &amp;amp;&amp;gt;/dev/null&quot;&apos; % (self.zabbix_server_ip,self.data_path))</div><div class="line">            print status,output</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line"></div><div class="line">    services = services_monitor()</div><div class="line">    ip = services.ip()</div><div class="line">    data = services.get_info(ip)</div><div class="line">    try:</div><div class="line">        argv = sys.argv[1]</div><div class="line">        if argv == &quot;services_list&quot;:</div><div class="line">            print data</div><div class="line">        else:</div><div class="line">            services.collect_data(data)</div><div class="line">            services.send_data(services.data_path)</div><div class="line">    except IndexError:</div><div class="line">        print data</div></pre></td></tr></table></figure><h4 id="Agent添加Key"><a href="#Agent添加Key" class="headerlink" title="Agent添加Key"></a>Agent添加Key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_agentd.conf</div><div class="line">UserParameter=dzpt.service.process.discovery,/usr/bin/python /home/opt/scripts/services.py services_list</div><div class="line">UserParameter=dzpt.service.process.exec[*],/usr/bin/python /home/opt/scripts/services.py  $1</div></pre></td></tr></table></figure><h4 id="创建自动发现规则"><a href="#创建自动发现规则" class="headerlink" title="创建自动发现规则"></a>创建自动发现规则</h4><p>(监控项Trapper方式、报警触发器)</p><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/rules.jpg" alt=""></p><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/roles-items.jpg" alt=""></p><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/roles-triggers.jpg" alt=""></p><h4 id="添加当前进程数监控项"><a href="#添加当前进程数监控项" class="headerlink" title="添加当前进程数监控项"></a>添加当前进程数监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/process-stat.jpg" alt=""></p><h4 id="定义报警内容"><a href="#定义报警内容" class="headerlink" title="定义报警内容"></a>定义报警内容</h4><p>Action中定义(此处略)</p><h4 id="将定义好的模板链接到主机或者其他模板即可"><a href="#将定义好的模板链接到主机或者其他模板即可" class="headerlink" title="将定义好的模板链接到主机或者其他模板即可"></a>将定义好的模板链接到主机或者其他模板即可</h4><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>使用Zabbix LLD之后，可以设定多久更新一次监控项及监控阀值；当配置文件变更时，无需人为调整阀值和监控项</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;针对特定进程数量做监控报警&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;header
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>架构学习之路-高可用高并发系统设计原则</title>
    <link href="http://www.simlinux.com/2017/04/13/arc-ha-summary.html"/>
    <id>http://www.simlinux.com/2017/04/13/arc-ha-summary.html</id>
    <published>2017-04-13T11:00:05.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本系列博客主要是学习开涛《亿级流量网站架构核心技术》一书学习笔记及自己的感悟：</p></blockquote><h4 id="架构设计三大定律"><a href="#架构设计三大定律" class="headerlink" title="架构设计三大定律"></a>架构设计三大定律</h4><blockquote><p>墨菲定律</p><ul><li>任何事没有表面看起来那么简单</li><li>所有的事都会比预计的时间长</li><li>可能出错的事情总会出错</li><li><p>担心某种事情发生，那么它就更有可能发生</p><p>康威定律</p></li></ul></blockquote><ul><li>系统架构师公司组织架构的反映</li><li>按照业务闭环进行系统拆分/组织架构划分，实现闭环、高内聚、低耦合，减少沟通成本</li><li>如果沟通出现问题，应该考虑进行系统和组织架构的调整</li><li>适合时机进行系统拆分，不要一开始就吧系统、服务拆分拆的非常细，虽然闭环，但是每个人维护的系统多，维护成本高</li><li>微服务架构的理论基础 - 康威定律 <a href="https://yq.aliyun.com/articles/8611" target="_blank" rel="external">https://yq.aliyun.com/articles/8611</a></li><li>每个架构师都应该研究下康威定律 <a href="http://36kr.com/p/5042735.html" target="_blank" rel="external">http://36kr.com/p/5042735.html</a></li></ul><blockquote><p>二八定律</p></blockquote><ul><li>80%的结果取决于20%的原因</li></ul><h4 id="系统设计遵循的原则"><a href="#系统设计遵循的原则" class="headerlink" title="系统设计遵循的原则"></a>系统设计遵循的原则</h4><h5 id="1-高并发原则"><a href="#1-高并发原则" class="headerlink" title="1. 高并发原则"></a>1. 高并发原则</h5><blockquote><p>无状态</p></blockquote><ul><li>无状态应用，便于水平扩展</li><li>有状态配置可通过配置中心实现无状态</li><li>实践: Disconf、Yaconf、Zookpeer、Consul、Confd、Diamond、Xdiamond等</li></ul><blockquote><p>拆分</p></blockquote><ul><li>系统维度：按照系统功能、业务拆分，如购物车，结算，订单等</li><li>功能维度：对系统功能在做细粒度拆分</li><li>读写维度：根据读写比例特征拆分；读多，可考虑多级缓存；写多，可考虑分库分表</li><li>AOP维度： 根据访问特征，按照AOP进行拆分，比如商品详情页可分为CDN、页面渲染系统，CDN就是一个AOP系统</li><li>模块维度：对整体代码结构划分Web、Service、DAO</li></ul><blockquote><p>服务化</p></blockquote><ul><li>服务化演进: 进程内服务-单机远程服务-集群手动注册服务-自动注册和发现服务-服务的分组、隔离、路由-服务治理</li><li>考虑服务分组、隔离、限流、黑白名单、超时、重试机制、路由、故障补偿等</li><li>实践：利用Nginx、HaProxy、LVS等实现负载均衡，ZooKeeper、Consul等实现自动注册和发现服</li></ul><blockquote><p>消息队列</p></blockquote><ul><li>目的: 服务解耦(一对多消费)、异步处理、流量削峰缓冲等</li><li>大流量缓冲： 牺牲强一致性，保证最终一致性(案例：库存扣减，现在Redis中做扣减，记录扣减日志，通过后台进程将扣减日志应用到DB)</li><li>数据校对: 解决异步消息机制下消息丢失问题</li></ul><blockquote><p>数据异构</p></blockquote><ul><li>数据异构: 通过消息队列机制接收数据变更，原子化存储</li><li>数据闭环: 屏蔽多从数据来源，将数据异构存储，形成闭环</li></ul><blockquote><p>缓存银弹</p></blockquote><ul><li><p>用户层:</p><ul><li>DNS缓存</li><li>浏览器DNS缓存</li><li>操作系统DNS缓存</li><li>本地DNS服务商缓存</li><li>DNS服务器缓存</li><li>客户端缓存</li><li>浏览器缓存(Expires、Cache-Control、Last-Modified、Etag)*   App客户缓存(js/css/image…)</li></ul></li><li><p>代理层：</p><ul><li>CDN缓存(一般基于ATS、Varnish、Nginx、Squid等构建,边缘节点-二级节点-中心节点-源站)</li></ul></li><li><p>接入层：</p><ul><li><p>Nginx为例：</p></li><li><p>Proxy_cache： 代理缓存,可以存储到/dev/shm或者SSD</p></li><li>FastCGI Cache</li><li>Nginx+Lua+Redis: 业务数据缓存</li><li>PHP为例：<ul><li>Opcache： 缓存PHP的Opcodes</li></ul></li></ul></li><li><p>应用层：</p><ul><li>页面静态化</li><li>业务数据缓存(Redis/Memcached/本地文件等)</li><li>消息队列</li></ul></li><li><p>数据层：</p><ul><li>NoSQL： Redis、Memcache、SSDB等</li><li>MySQL： Innodb/MyISAM等Query Cache、Key Cache、Innodb Buffer Size等</li></ul></li><li><p>系统层：</p><ul><li>CPU : L1/L2/L3 Cache/NUMA</li><li>内存</li><li>磁盘：磁盘本身缓存、dirty_ratio/dirty_background_ratio、阵列卡本身缓存</li></ul></li></ul><blockquote><p>并发化</p></blockquote><h5 id="2-高可用原则"><a href="#2-高可用原则" class="headerlink" title="2. 高可用原则"></a>2. 高可用原则</h5><blockquote><p>降级</p></blockquote><ul><li>降级开关集中化管理：将开关配置信息推送到各个应用</li><li>可降级的多级读服务：如服务调用降级为只读本地缓存</li><li>开关前置化：如Nginx+lua(OpenResty)配置降级策略，引流流量；可基于此做灰度策略</li><li>业务降级：高并发下，保证核心功能，次要功能可由同步改为异步策略或屏蔽功能</li></ul><blockquote><p>限流</p></blockquote><ul><li>目的: 防止恶意请求攻击或超出系统峰值</li><li><p>实践：</p><ul><li>恶意请求流量只访问到Cache</li><li>穿透后端应用的流量使用Nginx的limit处理</li><li>恶意IP使用Nginx Deny策略或者iptables拒绝</li></ul></li></ul><blockquote><p>切流量</p></blockquote><ul><li>目的：屏蔽故障机器</li><li><p>实践:</p><ul><li>DNS: 更改域名解析入口，如DNSPOD可以添加备用IP，正常IP故障时，会自主切换到备用地址;生效实践较慢</li><li>HttpDNS: 为了绕过运营商LocalDNS实现的精准流量调度</li><li>LVS/HaProxy/Nginx: 摘除故障节点</li></ul></li></ul><blockquote><p>可回滚</p></blockquote><ul><li>发布版本失败时可随时快速回退到上一个稳定版本</li></ul><h5 id="3-业务设计原则"><a href="#3-业务设计原则" class="headerlink" title="3. 业务设计原则"></a>3. 业务设计原则</h5><ul><li>防重设计</li><li>幂等设计</li><li>流程定义</li><li>状态与状态机</li><li>后台系统操作可反馈</li><li>后台系统审批化</li><li>文档注释</li><li>备份</li></ul><h5 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h5><p>先行规划和设计时有必要的，要对现有问题有方案，对未来有预案;欠下的技术债，迟早都是要还的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本系列博客主要是学习开涛《亿级流量网站架构核心技术》一书学习笔记及自己的感悟：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;架构设计三大定律&quot;&gt;&lt;a href=&quot;#架构设计三大定律&quot; class=&quot;headerlink&quot; title=&quot;架构
      
    
    </summary>
    
      <category term="架构之路" scheme="http://www.simlinux.com/categories/%E6%9E%B6%E6%9E%84%E4%B9%8B%E8%B7%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>CPU工作模式及调频</title>
    <link href="http://www.simlinux.com/2017/03/24/cpu-model-freq.html"/>
    <id>http://www.simlinux.com/2017/03/24/cpu-model-freq.html</id>
    <published>2017-03-24T04:42:18.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装i7z及cpufrequtils"><a href="#安装i7z及cpufrequtils" class="headerlink" title="安装i7z及cpufrequtils"></a>安装i7z及cpufrequtils</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install i7z cpufrequtils</div></pre></td></tr></table></figure><h4 id="常见的CPU工作模式"><a href="#常见的CPU工作模式" class="headerlink" title="常见的CPU工作模式"></a>常见的CPU工作模式</h4><table><thead><tr><th style="text-align:left">调速器</th><th style="text-align:right">描述</th></tr></thead><tbody><tr><td style="text-align:left">ondemand</td><td style="text-align:right">按需快速动态调整CPU频率， 一有cpu计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率（阙值为 95%</td></tr><tr><td style="text-align:left">performance</td><td style="text-align:right">运行于最大频率</td></tr><tr><td style="text-align:left">conservative</td><td style="text-align:right">按需快速动态调整CPU频率， 一有cpu计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率（阙值为 75%）</td></tr><tr><td style="text-align:left">powersave</td><td style="text-align:right">运行于最小频率</td></tr><tr><td style="text-align:left">userspace</td><td style="text-align:right">运行于用户指定的频率</td></tr></tbody></table><h4 id="查看当前CPU工作模式"><a href="#查看当前CPU工作模式" class="headerlink" title="查看当前CPU工作模式"></a>查看当前CPU工作模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">查看CPU当前的工作模式</div><div class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</div><div class="line"></div><div class="line">查看支持的CPU工作模式</div><div class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors</div></pre></td></tr></table></figure><p>由于在Debian 8下默认使用intel_pstate驱动,只支持performance和powersave模式,不同频率驱动程序支持的模式不同<br>具体可以参考：CPU frequency scaling  <a href="http://t.cn/R6cQXvp" target="_blank" rel="external">http://t.cn/R6cQXvp</a></p><h4 id="调整最高性能模式"><a href="#调整最高性能模式" class="headerlink" title="调整最高性能模式"></a>调整最高性能模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;performance&apos; |tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</div></pre></td></tr></table></figure><h4 id="CPU调频"><a href="#CPU调频" class="headerlink" title="CPU调频"></a>CPU调频</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Usage: cpufreq-set [options] Options:</div><div class="line">-c CPU, --cpu CPU       #指定CPU核心号，请注意上图的analyzing CPU数字。</div><div class="line">-d FREQ, --min FREQ     #手工指定最小主频速度。（在userspace策略）</div><div class="line">-u FREQ, --max FREQ     #手工指定最大主频速度。（在userspace策略）</div><div class="line">-g GOV, --governor GOV  #设置工作策略</div><div class="line">-f FREQ, --freq FREQ    #设定特定的工作频率（CPU默认档次）</div><div class="line">#请参考上图的available frequency steps</div><div class="line">-h, --help            #输出这个帮助信息</div><div class="line"></div><div class="line">cpufreq-set  -d 2.4Ghz -u 2.4Ghz</div></pre></td></tr></table></figure><h4 id="实时查看频率"><a href="#实时查看频率" class="headerlink" title="实时查看频率"></a>实时查看频率</h4><p>通过i7z命令可实时查看当前CPU的工作频率</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;安装i7z及cpufrequtils&quot;&gt;&lt;a href=&quot;#安装i7z及cpufrequtils&quot; class=&quot;headerlink&quot; title=&quot;安装i7z及cpufrequtils&quot;&gt;&lt;/a&gt;安装i7z及cpufrequtils&lt;/h4&gt;&lt;figure c
      
    
    </summary>
    
      <category term="Linux运维" scheme="http://www.simlinux.com/categories/Linux%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Nginx/Haproxy作为反向代理或负载均衡时如何获取客户真实IP？</title>
    <link href="http://www.simlinux.com/2017/03/01/haproxy-proxy-ip.html"/>
    <id>http://www.simlinux.com/2017/03/01/haproxy-proxy-ip.html</id>
    <published>2017-03-01T08:51:27.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Nginx代理配置"><a href="#Nginx代理配置" class="headerlink" title="Nginx代理配置"></a>Nginx代理配置</h4><p>增加如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">proxy_set_header X-Real-IP $remote_addr;</div><div class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">proxy_set_header X_FORWARDED_PROTO https;</div><div class="line">proxy_set_header Host $host;</div></pre></td></tr></table></figure></p><h4 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">option forwardfor</div></pre></td></tr></table></figure><h4 id="后端Nginx配置"><a href="#后端Nginx配置" class="headerlink" title="后端Nginx配置"></a>后端Nginx配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set_real_ip_from  1.1.1.1;  前端Nginx代理或者负载均衡的IP(在后端Nginx日志中显示的)</div><div class="line">real_ip_header  X-Forwarded-For;</div><div class="line">real_ip_recursive  on;</div></pre></td></tr></table></figure><h4 id="后端Nginx访问控制"><a href="#后端Nginx访问控制" class="headerlink" title="后端Nginx访问控制"></a>后端Nginx访问控制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">location ~ /test/api/ &#123;</div><div class="line"></div><div class="line">    set $allow false;</div><div class="line">    if ($http_x_forwarded_for ~ &quot;2.2.2.2&quot;) &#123;</div><div class="line">        set $allow false;</div><div class="line">                    &#125;</div><div class="line">    if ($allow = false) &#123; return 403;&#125;</div><div class="line">        proxy_pass  http://web;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote><ul><li><a href="http://www.wkii.org/nginx-cdn-get-user-real-ip.html" target="_blank" rel="external">http://www.wkii.org/nginx-cdn-get-user-real-ip.html</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Nginx代理配置&quot;&gt;&lt;a href=&quot;#Nginx代理配置&quot; class=&quot;headerlink&quot; title=&quot;Nginx代理配置&quot;&gt;&lt;/a&gt;Nginx代理配置&lt;/h4&gt;&lt;p&gt;增加如下配置:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;
      
    
    </summary>
    
      <category term="Linux运维" scheme="http://www.simlinux.com/categories/Linux%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>网卡软中断过高问题优化总结</title>
    <link href="http://www.simlinux.com/2017/02/28/net-softirq.html"/>
    <id>http://www.simlinux.com/2017/02/28/net-softirq.html</id>
    <published>2017-02-28T11:06:50.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>游戏网关高峰期时出网络丢包,CPU0软中断%sys高达90%</p><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><h5 id="什么是中断"><a href="#什么是中断" class="headerlink" title="什么是中断?"></a>什么是中断?</h5><p>由于接收来自外围硬件(相对于CPU和内存)的异步信号或者来自软件的同步信号，而进行相应的硬件、软件处理；发出这样的信号称为进行中断请求(interrupt request, IRQ)</p><h5 id="硬中断与软中断"><a href="#硬中断与软中断" class="headerlink" title="硬中断与软中断?"></a>硬中断与软中断?</h5><ul><li><strong>硬中断</strong>：外围硬件发给CPU或者内存的异步信号就称之为硬中断</li><li><strong>软中断</strong>：由软件系统本身发给操作系统内核的中断信号，称之为软中断。通常是由硬中断处理程序或进程调度程序对操作系统内核的中断，也就是我们常说的系统调用(System Call)</li></ul><h5 id="硬中断与软中断之区别与联系？"><a href="#硬中断与软中断之区别与联系？" class="headerlink" title="硬中断与软中断之区别与联系？"></a>硬中断与软中断之区别与联系？</h5><ol><li>硬中断是有外设硬件发出的，需要有中断控制器之参与。其过程是外设侦测到变化，告知中断控制器，中断控制器通过CPU或内存的中断脚通知CPU，然后硬件进行程序计数器及堆栈寄存器之现场保存工作（引发上下文切换），并根据中断向量调用硬中断处理程序进行中断处理</li><li>软中断则通常是由硬中断处理程序或者进程调度程序等软件程序发出的中断信号，无需中断控制器之参与，直接以一个CPU指令之形式指示CPU进行程序计数器及堆栈寄存器之现场保存工作(亦会引发上下文切换)，并调用相应的软中断处理程序进行中断处理(即我们通常所言之系统调用)</li><li>硬中断直接以硬件的方式引发，处理速度快。软中断以软件指令之方式适合于对响应速度要求不是特别严格的场景</li><li>硬中断通过设置CPU的屏蔽位可进行屏蔽，软中断则由于是指令之方式给出，不能屏蔽</li><li>硬中断发生后，通常会在硬中断处理程序中调用一个软中断来进行后续工作的处理</li><li>硬中断和软中断均会引起上下文切换(进程/线程之切换)，进程切换的过程是差不多的</li></ol><h4 id="查看中断情况"><a href="#查看中断情况" class="headerlink" title="查看中断情况"></a>查看中断情况</h4><p><strong>查看中断分布情况即CPU都在哪些设备上干活，干了多少(也可以使用itop工具实时查看)？</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# cat /proc/interrupts</div><div class="line"></div><div class="line">           CPU0       CPU1       CPU2       CPU3       CPU4       CPU5       CPU6       CPU7       CPU8       CPU9       CPU10      CPU11      CPU12      CPU13      CPU14      CPU15      CPU16      CPU17      CPU18      CPU19      CPU20      CPU21      CPU22      CPU23      CPU24      CPU25      CPU26      CPU27      CPU28      CPU29      CPU30      CPU31      </div><div class="line">  0:        620          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-edge      timer</div><div class="line">  8:          1          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-edge      rtc0</div><div class="line">  9:      20774          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   acpi</div><div class="line"> 16:         28          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   ehci_hcd:usb1</div><div class="line"> 23:        243          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   ehci_hcd:usb2</div><div class="line"> 88:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  DMAR_MSI-edge      dmar0</div><div class="line"> 89:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  DMAR_MSI-edge      dmar1</div><div class="line"> 90:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 91:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 92:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 93:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 94:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 95:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 96:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 97:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 98:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 99:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line">100:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line">101:     169988          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      mpt2sas0-msix0</div><div class="line">134:    1900138          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      eth2-q0</div><div class="line">150:    4262209          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      eth3-q0</div><div class="line">166:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">167:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">168:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">169:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">170:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">171:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">172:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">173:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">174:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">175:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">176:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">177:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">178:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">179:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">180:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">181:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">NMI:        710        280        658        235        114         91         76         74        208        123        176        128        106         93        102         95         30        360        790         46         28         17         10          8         10        129       1166         22         18         16         11          7   Non-maskable interrupts</div><div class="line">LOC:    4230314    2640664    2427443    1337890    1091372     892129     819153     816781    2695809    1563153    1368637    1608410    1241692    1166692    1205270    1124865     120831    1966946     328048     816162     163492     222276     129805     121126     111906     599782    1247371     194215     162828     145678     118762     114295   Local timer interrupts</div><div class="line">SPU:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Spurious interrupts</div><div class="line">PMI:        710        280        658        235        114         91         76         74        208        123        176        128        106         93        102         95         30        360        790         46         28         17         10          8         10        129       1166         22         18         16         11          7   Performance monitoring interrupts</div><div class="line">IWI:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   IRQ work interrupts</div><div class="line">RES:     679921    1369165    1013002     573776     543083     540027     593345     588120     842115     846190     874862     890102     873810     860080     867322     848916       3879      63916      10863      12850       7463       6350      10889      16041       2065      13207       6870       6817       4030       4700       5190       7430   Rescheduling interrupts</div><div class="line">CAL:      46507      67439      67569      67567      67565      67566      67566      67568     154689      67553      67511      67538      67568      67557      67534      67519      67520      26471      67470      67470      67476      67525      67518      67525      67545      64065      67210      67506      67485      67492      67526      67521   Function call interrupts</div><div class="line">TLB:       6547       3416       1798       1015        361        637        271        447        822        113       1079        222        259        198        265        844        157       1470       3468        767        499        262        338        230         41       1457       4023        290        105         93         46        177   TLB shootdowns</div><div class="line">TRM:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Thermal event interrupts</div><div class="line">THR:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Threshold APIC interrupts</div><div class="line">MCE:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Machine check exceptions</div><div class="line">MCP:        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569   Machine check polls</div><div class="line">ERR:          0</div><div class="line">MIS:          0</div></pre></td></tr></table></figure></p><p>从上面的数据可以看出网卡eth2、eth3软中断都落在CPU0可以通过cat /proc/softirqs查看具体的软中断情况,总的中断次数可以通过vmstat或者dstat查看，其中vmstat中的in表示每秒的中断次数；<br>通过mpstat -P ALL 2,每隔两秒查看下所有核状态信息，其中%irq为硬中断，%soft为软中断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# mpstat -P ALL 2</div><div class="line">08:42:04 AM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle</div><div class="line">08:42:05 AM  all    4.31    0.00    0.70    0.00    0.00    0.06    0.00    0.00   94.93</div><div class="line">08:42:05 AM    0    5.26    0.00    1.05    0.00    0.00    60.05    0.00    0.00   92.63</div><div class="line">08:42:05 AM    1    7.07    0.00    1.01    0.00    0.00    0.00    0.00    0.00   91.92</div><div class="line">08:42:05 AM    2    8.91    0.00    0.99    0.00    0.00    0.00    0.00    0.00   90.10</div><div class="line">08:42:05 AM    3    8.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    4    8.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    5    7.00    0.00    2.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    6    7.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   92.00</div><div class="line">08:42:05 AM    7    4.12    0.00    1.03    0.00    0.00    0.00    0.00    0.00   94.85</div><div class="line">08:42:05 AM    8    4.17    0.00    1.04    0.00    0.00    0.00    0.00    0.00   94.79</div><div class="line">08:42:05 AM    9    8.91    0.00    0.99    0.00    0.00    0.00    0.00    0.00   90.10</div><div class="line">08:42:05 AM   10    4.17    0.00    2.08    0.00    0.00    0.00    0.00    0.00   93.75</div><div class="line">08:42:05 AM   11    6.12    0.00    1.02    0.00    0.00    0.00    0.00    0.00   92.86</div><div class="line">08:42:05 AM   12    6.00    0.00    2.00    0.00    0.00    0.00    0.00    0.00   92.00</div><div class="line">08:42:05 AM   13    3.16    0.00    1.05    0.00    0.00    0.00    0.00    0.00   95.79</div><div class="line">08:42:05 AM   14    8.16    0.00    1.02    0.00    0.00    0.00    0.00    0.00   90.82</div><div class="line">08:42:05 AM   15    6.06    0.00    1.01    0.00    0.00    1.01    0.00    0.00   91.92</div><div class="line">08:42:05 AM   16    3.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   96.00</div><div class="line">08:42:05 AM   17    2.02    0.00    1.01    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   18    2.04    0.00    1.02    0.00    0.00    0.00    0.00    0.00   96.94</div><div class="line">08:42:05 AM   19    2.97    0.00    0.99    0.00    0.00    0.00    0.00    0.00   96.04</div><div class="line">08:42:05 AM   20    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   21    2.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.00</div><div class="line">08:42:05 AM   22    3.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   23    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   24    4.95    0.00    0.00    0.00    0.00    0.00    0.00    0.00   95.05</div><div class="line">08:42:05 AM   25    2.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.98</div><div class="line">08:42:05 AM   26    3.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   27    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   28    1.01    0.00    1.01    0.00    0.00    0.00    0.00    0.00   97.98</div><div class="line">08:42:05 AM   29    1.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.98</div><div class="line">08:42:05 AM   30    1.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.99</div><div class="line">08:42:05 AM   31    1.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.98</div></pre></td></tr></table></figure><h4 id="何优化软中断CPU0过高问题"><a href="#何优化软中断CPU0过高问题" class="headerlink" title="何优化软中断CPU0过高问题"></a>何优化软中断CPU0过高问题</h4><h5 id="RSS-Receive-Side-Scaling，需网卡支持多队列"><a href="#RSS-Receive-Side-Scaling，需网卡支持多队列" class="headerlink" title="RSS(Receive Side Scaling，需网卡支持多队列)"></a>RSS(Receive Side Scaling，需网卡支持多队列)</h5><h5 id="查看网卡是否支持队列"><a href="#查看网卡是否支持队列" class="headerlink" title="查看网卡是否支持队列"></a>查看网卡是否支持队列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# lscpi -vvv</div><div class="line">06:00.0 Ethernet controller: Broadcom Corporation BCM57840 NetXtreme II 10/20-Gigabit Ethernet (rev 11)</div><div class="line"> Subsystem: Hewlett-Packard Company Device 22fa</div><div class="line"> Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr+ Stepping- SERR+ FastB2B- DisINTx+</div><div class="line"> Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast &gt;TAbort- &lt;tabort - &lt;MAbort- &gt;SERR- &lt;perr - INTx-</div><div class="line"> Latency: 0, Cache Line Size: 64 bytes</div><div class="line"> Interrupt: pin A routed to IRQ 32</div><div class="line"> Region 0: Memory at 93800000 (64-bit, prefetchable) [size=8M]</div><div class="line"> Region 2: Memory at 93000000 (64-bit, prefetchable) [size=8M]</div><div class="line"> Region 4: Memory at 95000000 (64-bit, prefetchable) [size=64K]</div><div class="line"> [virtual] Expansion ROM at 95080000 [disabled] [size=512K]</div><div class="line"> Capabilities: [48] Power Management version 3</div><div class="line">   Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0+,D1-,D2-,D3hot+,D3cold+)</div><div class="line">   Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=1 PME-</div><div class="line"> Capabilities: [50] Vital Product Data</div><div class="line">   Product Name: HP FlexFabric 10Gb 2-port 536FLB Adapter</div><div class="line">   Read-only fields:</div><div class="line">     [PN] Part number: 766488-001</div><div class="line">     [EC] Engineering changes: A-5444</div><div class="line">     [MN] Manufacture ID: 31 30 33 43</div><div class="line">     [V0] Vendor specific: 12W PCIeGen3</div><div class="line">     [V1] Vendor specific: 7.10.55</div><div class="line">     [V3] Vendor specific: 7.10.72</div><div class="line">     [V5] Vendor specific: 0A</div><div class="line">     [V6] Vendor specific: 7.10.72</div><div class="line">     [V7] Vendor specific: 536FLB</div><div class="line">     [SN] Serial number: 7C444703LG</div><div class="line">     [V2] Vendor specific: 5447</div><div class="line">     [V4] Vendor specific: 8CDCD419D870</div><div class="line">     [RV] Reserved: checksum good, 186 byte(s) reserved</div><div class="line">   End</div><div class="line"> Capabilities: [a0] MSI-X: Enable+ Count=32 Masked-</div></pre></td></tr></table></figure><p>找到Ethernet controller项，如果有MSI-X,Enable+ 并且Count&gt;1，表示该网卡支持多队列</p><h5 id="查看网卡支持多少个队列"><a href="#查看网卡支持多少个队列" class="headerlink" title="查看网卡支持多少个队列"></a>查看网卡支持多少个队列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# grep eth0 /proc/interrupts |awk &apos;&#123;print $NF&#125;&apos;</div><div class="line">eth0</div><div class="line">eth0-fp-0</div><div class="line">eth0-fp-1</div><div class="line">eth0-fp-2</div><div class="line">eth0-fp-3</div><div class="line">eth0-fp-4</div><div class="line">eth0-fp-5</div><div class="line">eth0-fp-6</div><div class="line">eth0-fp-7</div></pre></td></tr></table></figure><h5 id="配置SMP-IRQ-affinity"><a href="#配置SMP-IRQ-affinity" class="headerlink" title="配置SMP IRQ affinity"></a>配置SMP IRQ affinity</h5><p>(即绑定队列到不同CPU,Kernel&gt;2.4)</p><p>方法1：开启系统irqbalance服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get -y install irqbalance</div><div class="line">service irqbalance start</div></pre></td></tr></table></figure><p>方法2: 手动绑定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/proc/irq/：该目录下存放的是以IRQ号命名的目录，如/proc/irq/40/，表示中断号为40的相关信息</div><div class="line">/proc/irq/[irq_num]/smp_affinity：该文件存放的是CPU位掩码（十六进制）。修改该文件中的值可以改变CPU和某中断的亲和性</div><div class="line">/proc/irq/[irq_num]/smp_affinity_list：该文件存放的是CPU列表（十进制）。注意，CPU核心个数用表示编号从0开始，如cpu0,cpu1等,</div><div class="line"></div><div class="line">smp_affinity和smp_affinity_list修改其一即可，下面修改smp_affinity：</div><div class="line"></div><div class="line">echo $bitmask &gt; /proc/irq/IRQ#/smp_affinity</div><div class="line">示例(把140号中断绑定到前4个CPU[cpu0-3]上面):</div><div class="line">echo  f &gt;/proc/irq/140/smp_affinity</div></pre></td></tr></table></figure><h5 id="CPU位掩码计算"><a href="#CPU位掩码计算" class="headerlink" title="CPU位掩码计算"></a>CPU位掩码计算</h5><p>一个十六进制f转换成二进制为1111，每一位表示一个CPU核，最靠右值是最低位即CPU0</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">CPU 1    0010         2</div><div class="line">CPU 2    0100         4</div><div class="line">CPU 3    1000         8</div><div class="line">其中十六进制2就表示CPU1，十六进制8就表示CPU3</div><div class="line"></div><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">+ CPU 2    0100         4</div><div class="line">-----------------------</div><div class="line">both     0101         5</div><div class="line">其中得出的十六进制和5表示CPU0 和CPU2</div><div class="line"></div><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">CPU 1    0010         2</div><div class="line">CPU 2    0100         4</div><div class="line">+ CPU 3    1000         8</div><div class="line">-----------------------</div><div class="line">both     1111         f</div><div class="line">4个CPU参与中断，即可设置为f，8个CPU参与中断可设置为ff，以此类推</div></pre></td></tr></table></figure><h5 id="配置RSS"><a href="#配置RSS" class="headerlink" title="配置RSS"></a>配置RSS</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">过滤eth0中断号，绑定到0-7号CPU核上（eth0-fp命名可能有所不同）:</div><div class="line">root@geekwolf:~# grep eth0-fp /proc/interrupts |awk &apos;&#123;print $1, $NF&#125;&apos;</div><div class="line">147: eth0-fp-0</div><div class="line">148: eth0-fp-1</div><div class="line">149: eth0-fp-2</div><div class="line">150: eth0-fp-3</div><div class="line">151: eth0-fp-4</div><div class="line">152: eth0-fp-5</div><div class="line">153: eth0-fp-6</div><div class="line">154: eth0-fp-7</div><div class="line"></div><div class="line">echo 1  &gt;/proc/irq/147/smp_affinity</div><div class="line">echo 2  &gt;/proc/irq/148/smp_affinity</div><div class="line">echo 4  &gt;/proc/irq/149/smp_affinity</div><div class="line">echo 8  &gt;/proc/irq/150/smp_affinity</div><div class="line">echo 10 &gt;/proc/irq/151/smp_affinity</div><div class="line">echo 20 &gt;/proc/irq/152/smp_affinity</div><div class="line">echo 40 &gt;/proc/irq/153/smp_affinity</div><div class="line">echo 80 &gt;/proc/irq/154/smp_affinity</div><div class="line">可以通过top命令查看%si是否均衡分摊到0-7核CPU</div></pre></td></tr></table></figure><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ol><li>启动irqbalance后，手动绑定将失效</li><li>当CPU工作在最高性能模式时，irqbalance会均匀分配中断到其他CPU，节能模式时中断会集中分配到CPU0</li><li>以上设置均以网卡支持多队列为前提，建议手动绑定SMP IRQ affinity</li><li>网卡多队列需tg3,bnx2,bnx2x,b44等驱动的支持，Broadcom的网卡驱动已经内置在内核中向后兼容大部分的2.6内核及大于2.4.24的2.4内核</li><li>笔者实际测试过程中遇到BladeCenter HS23刀片服务器Emulex Corporation OneConnect 10Gb NIC (be3)本身支持多队列，在连接到千兆网环境下无法使用多队列问题，万兆网络下可以使用，只好通过下面RPS/RFS方式实现</li></ol><h4 id="RPS-RFS"><a href="#RPS-RFS" class="headerlink" title="RPS/RFS"></a>RPS/RFS</h4><p>Receive Packet Steering/Receive Flow Streering,软件方式实现CPU均衡，接收包中断的优化<br>RPS: 网卡驱动对每一个数据库包根据四元组(SIP,SPORT,DIP,DPORT)生成HASH值,通过HASH值将每个连接和CPU 绑定<br>RFS： 由于RPS只是单纯的把数据包均衡到不同的CPU上，此时如果应用程序所在CPU和中断处理的CPU不在同一个核，将会对CPU Cache影响很大，RFS的作用就是将应用程序和软中断处理分配到同一个CPU<br>配置步骤:</p><p>根据上述说明一个十六进制f表示四个CPU核，那么均衡到32核即ffffffff</p><h5 id="配置RPS"><a href="#配置RPS" class="headerlink" title="配置RPS"></a>配置RPS</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rps_cpus=&apos;ffffffffff&apos;</div><div class="line">for rxdir in /sys/class/net/eth0/queues/rx-*</div><div class="line">do</div><div class="line">echo $rps_cpus &gt;$rxdir/rps_cpus</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure><h5 id="配置RFS"><a href="#配置RFS" class="headerlink" title="配置RFS"></a>配置RFS</h5><p>RFS扩展了RPS的性能以增加CPU缓存命中率，减少网络延迟,默认是禁用的<br>/proc/sys/net/core/rps_sock_flow_entries<br>设置此文件至同时活跃连接数的最大预期值。对于中等服务器负载，推荐值为 32768 。所有输入的值四舍五入至最接近的2的幂<br>/sys/class/net/device/queues/rx-queue/rps_flow_cnt<br>将 device 改为想要配置的网络设备名称（例如，eth0），将 rx-queue 改为想要配置的接收队列名称（例如，rx-0）。<br>将此文件的值设为 rps_sock_flow_entries 除以 N，其中 N 是设备中接收队列的数量。例如，如果 rps_flow_entries 设为 32768，并且有 16 个配置接收队列，那么 rps_flow_cnt 就应设为 2048。对于单一队列的设备，rps_flow_cnt 的值和 rps_sock_flow_entries 的值是一样的`</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ls /sys/class/net/eth0/queues/rx-*|grep queues|wc -l</div><div class="line">8</div><div class="line">rps_flow_cnt=32768/8=4096</div><div class="line">echo 32768 &gt;/proc/sys/net/core/rps_sock_flow_entries</div><div class="line">for rxdir in /sys/class/net/eth0/queues/rx-*</div><div class="line">do</div><div class="line">echo $rps_cpus &gt;$rxdir/rps_cpus</div><div class="line">echo $rps_flow_cnt &gt;$rxdir/rps_flow_cnt</div><div class="line">done</div><div class="line"></div><div class="line">echo 32768 &gt;/proc/sys/net/core/rps_sock_flow_entries</div></pre></td></tr></table></figure><p>优化脚本可参考: <a href="https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/performance_tuning/set_rps.sh" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/performance_tuning/set_rps.sh</a></p><h4 id="网卡常规优化方案"><a href="#网卡常规优化方案" class="headerlink" title="网卡常规优化方案"></a>网卡常规优化方案</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/02/net_stack.jpg" alt=""><br>关于发包的优化XPS 还未做测试，有时间在做补充！</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote><ul><li>TCP/UDP压测工具netperf <a href="https://sanwen8.cn/p/P8bHgn.html" target="_blank" rel="external">https://sanwen8.cn/p/P8bHgn.html</a></li><li>多队列网卡及网卡中断绑定阐述 <a href="http://www.ywnds.com/?p=4380" target="_blank" rel="external">http://www.ywnds.com/?p=4380</a></li><li>Netperf压测数据分析 <a href="http://www.docin.com/p-1654134152.html" target="_blank" rel="external">http://www.docin.com/p-1654134152.html</a></li><li>RHEL7.0 Performance_Tuning_Guide <a href="https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Performance_Tuning_Guide/" target="_blank" rel="external">https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Performance_Tuning_Guide/</a></li><li>RPS/RFS/RSS 性能测试 <a href="http://www.cnblogs.com/Bozh/archive/2013/03/21/2973769.html" target="_blank" rel="external">http://www.cnblogs.com/Bozh/archive/2013/03/21/2973769.html</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h4&gt;&lt;p&gt;游戏网关高峰期时出网络丢包,CPU0软中断%sys高达90%&lt;/p&gt;
&lt;h4 id=&quot;预备知识&quot;&gt;&lt;a href=&quot;#预备知
      
    
    </summary>
    
      <category term="Linux运维" scheme="http://www.simlinux.com/categories/Linux%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos6.5部署Zabbix3.2(备忘)</title>
    <link href="http://www.simlinux.com/2016/12/17/centos-zabbix32-install.html"/>
    <id>http://www.simlinux.com/2016/12/17/centos-zabbix32-install.html</id>
    <published>2016-12-17T05:48:45.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate http://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=0 -O epel.repo</div><div class="line">wget --no-check-certificate http://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=1 -O epel-testing.repo</div><div class="line">yum install  -y http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</div><div class="line">rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm</div></pre></td></tr></table></figure><h4 id="安装LNMP环境及依赖包"><a href="#安装LNMP环境及依赖包" class="headerlink" title="安装LNMP环境及依赖包"></a>安装LNMP环境及依赖包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nginx Percona-Server-server-57 Percona-Server-client-57 Percona-Server-devel-57 Percona-Server-tokudb-57  php56w php56w-fpm php56w-mysql gcc-c++ libxml2-devel net-snmp-devel  libcurl-devel fping php56w-bcmath php56w-mbstring php56w-gd php56w-xmlwriter php56w-xmlreader</div></pre></td></tr></table></figure><h4 id="数据库初始化，支持TokuDB"><a href="#数据库初始化，支持TokuDB" class="headerlink" title="数据库初始化，支持TokuDB"></a>数据库初始化，支持TokuDB</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">数据库初始化</div><div class="line">mysqld --initialize-insecure --user=mysql --datadir=/data/mysql/data/</div><div class="line">启用TokuDB</div><div class="line">ps_tokudb_admin --enable -uroot -pgeekwolf</div><div class="line"></div><div class="line">若无法加载tokudb引擎，请查看huge pages是否关闭：</div><div class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</div><div class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</div></pre></td></tr></table></figure><h4 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wget https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.2.2/zabbix-3.2.2.tar.gz</div><div class="line">    groupadd zabbix</div><div class="line">    useradd -g zabbix -s /sbin/nologin</div><div class="line">    tar xf zabbix-3.2.2.tar.gz</div><div class="line">    ./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line">    make -j8</div><div class="line">    make install</div></pre></td></tr></table></figure><h4 id="配置zabbix-agent"><a href="#配置zabbix-agent" class="headerlink" title="配置zabbix_agent"></a>配置zabbix_agent</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_agentd.conf</div><div class="line">PidFile=/tmp/zabbix_agentd.pid</div><div class="line">LogFile=/tmp/zabbix_agentd.log</div><div class="line">LogFileSize=0</div><div class="line">Server=192.168.1.1</div><div class="line">ServerActive=192.168.1.1</div><div class="line">Hostname=192.168.1.2</div><div class="line">UnsafeUserParameters=1</div></pre></td></tr></table></figure><h4 id="配置zabbix-server"><a href="#配置zabbix-server" class="headerlink" title="配置zabbix_server"></a>配置zabbix_server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_server.conf</div><div class="line">DBHost=192.168.1.1</div><div class="line">DBName=zabbix</div><div class="line">DBUser=zabbix</div><div class="line">DBPassword=zabbix</div><div class="line">DebugLevel=3</div><div class="line">StartPollers=80</div><div class="line">CacheSize=32M</div><div class="line">TrendCacheSize=32M</div><div class="line">HistoryCacheSize=32M</div><div class="line">LogFile=/tmp/zabbix_server.log</div><div class="line">AlertScriptsPath=/usr/local/etc/scripts</div><div class="line">FpingLocation=/usr/bin/fping</div><div class="line">StartPingers=20</div><div class="line">HousekeepingFrequency=1</div><div class="line">MaxHousekeeperDelete=10000</div><div class="line">Timeout=10</div></pre></td></tr></table></figure><h4 id="部署Zabbix-FrontEnd"><a href="#部署Zabbix-FrontEnd" class="headerlink" title="部署Zabbix FrontEnd"></a>部署Zabbix FrontEnd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">cd  zabbix-3.2.2/</div><div class="line">cp frontends/php/* /usr/share/zabbix/</div><div class="line">chown apache.apache /usr/share/zabbix -R</div><div class="line">mysql&gt;create database zabbix;</div><div class="line">mysql&gt;source database/mysql/schema.sql;</div><div class="line">mysql&gt;source database/mysql/images.sql;</div><div class="line">mysql&gt;source database/mysql/data.sql;</div><div class="line">拷贝启动脚本:</div><div class="line">cp  misc/init.d/fedora/core5/* /etc/rc.d/init.d/</div><div class="line">配置Nginx:</div><div class="line">vim /etc/nginx/conf.d/zabbix.conf</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name zbx.simlinux.com;</div><div class="line">    index index.html index.php;</div><div class="line">    root /usr/share/zabbix;</div><div class="line">    location ~ \.php$ &#123;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="启动agent和server服务"><a href="#启动agent和server服务" class="headerlink" title="启动agent和server服务"></a>启动agent和server服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service zabbix_agentd start</div><div class="line">service zabbix_server start</div><div class="line">service nginx reload</div></pre></td></tr></table></figure><p>修改php.ini配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">always_populate_raw_post_data = -1</div><div class="line">max_execution_time = 300</div><div class="line">max_input_time = 300</div><div class="line">data.timezone = PRC </div><div class="line">post_max_size=16M</div><div class="line">service php-fpm reload</div></pre></td></tr></table></figure></p><h4 id="修改数据表引擎和创建分区表"><a href="#修改数据表引擎和创建分区表" class="headerlink" title="修改数据表引擎和创建分区表"></a>修改数据表引擎和创建分区表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">alter table history engines=&apos;tokudb&apos;;</div><div class="line">alter table history_log engines=&apos;tokudb&apos;;</div><div class="line">alter table history_str engines=&apos;tokudb&apos;;</div><div class="line">alter table history_text engines=&apos;tokudb&apos;;</div><div class="line">alter table trends engines=&apos;tokudb&apos;;</div></pre></td></tr></table></figure><p>分区表可参考<a href="http://blog.simlinux.com/archives/1776.html" target="_blank" rel="external">http://blog.simlinux.com/archives/1776.html</a></p><h4 id="安装Zabbix-Web"><a href="#安装Zabbix-Web" class="headerlink" title="安装Zabbix Web"></a>安装Zabbix Web</h4><p>访问<a href="http://192.168.1.1" target="_blank" rel="external">http://192.168.1.1</a> 进行安装,默认账号密码: admin zabbix</p><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/zbx.png" alt=""></p><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>A. Zabbix设置中文显示时，图形部分字体显示方框<br> <img src="http://ow1schdt5.bkt.clouddn.com/2016/12/zbx-q1.png" alt=""></p><p>解决方法：<br>Zabbix默认使用DejaVuSan.ttf字体，不支持中文<br>拷贝本地C:\Windows\Fonts下的微软雅黑字体上传到Zabbix Web目录fonts下,即msyh.ttf<br>sed -i ‘s/DejaVuSans/msyh/g’ ./include/defines.inc.php</p><p>B. Zabbix_server日志提示20434:20161217:105010.997 fping failed: fping6: Address family for hostname not supported<br>解决方法:<br>zabbix_server.conf中指定fping和fping6路径<br>FpingLocation=/usr/sbin/fping<br>Fping6Location=/usr/sbin/fping6</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;配置yum源&quot;&gt;&lt;a href=&quot;#配置yum源&quot; class=&quot;headerlink&quot; title=&quot;配置yum源&quot;&gt;&lt;/a&gt;配置yum源&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>Zabbix数据库优化总结</title>
    <link href="http://www.simlinux.com/2016/12/10/zabbix-mysql-performance.html"/>
    <id>http://www.simlinux.com/2016/12/10/zabbix-mysql-performance.html</id>
    <published>2016-12-10T09:48:46.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> <strong>目的:</strong> 快速清理历史数据，并减少数据存储容量<br> <strong>方法</strong>: 历史表使用分区表(删除分区表速度快),使用Tokudb引擎(适合大量insert少量update和select等日志表)</p></blockquote><h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><blockquote><p><strong>Zabbix版本:</strong> 2.4<br><strong>涉及表项:</strong><br>  存储不同类型item的历史数据，最终1小时或者1天等段时间的绘图数据从其中获取<br>  history、history_log、history_str、history_text、history_uint<br>  存储不同类型item的历史趋势数据，每隔一小时从历史数据中统计一次，并计算统计区间的平均值，最大值，最小值trends、trends_uint</p></blockquote><h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><h5 id="关闭zabbix的housekeeper功能"><a href="#关闭zabbix的housekeeper功能" class="headerlink" title="关闭zabbix的housekeeper功能"></a>关闭zabbix的housekeeper功能</h5><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/housekeeper.jpg" alt=""></p><h5 id="备份原有历史数据表"><a href="#备份原有历史数据表" class="headerlink" title="备份原有历史数据表"></a>备份原有历史数据表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">rename table history to history_bak;</div><div class="line">rename table history_log to history_log_bak;</div><div class="line">rename table history_str to history_str_bak;</div><div class="line">rename table history_text to history_text_bak;</div><div class="line">rename table history_unit to history_unit_bak;</div><div class="line">rename table trends to trends_bak;</div><div class="line">rename table trends_unit to trends_unit_bak;</div></pre></td></tr></table></figure><h5 id="创建新表-使用tokudb引擎"><a href="#创建新表-使用tokudb引擎" class="headerlink" title="创建新表(使用tokudb引擎)"></a>创建新表(使用tokudb引擎)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">`CREATE TABLE `history` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line"> CREATE TABLE `history_log` (</div><div class="line">  `id` bigint(20) unsigned NOT NULL,</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `timestamp` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `source` varchar(64) NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `severity` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` text NOT NULL,</div><div class="line">  `logeventid` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  UNIQUE KEY `history_log_2` (`itemid`,`id`),</div><div class="line">  KEY `history_log_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_str` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` varchar(255) NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_str_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_text` (</div><div class="line">  `id` bigint(20) unsigned NOT NULL,</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` text NOT NULL,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  UNIQUE KEY `history_text_2` (`itemid`,`id`),</div><div class="line">  KEY `history_text_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_uint` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_uint_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `trends` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `num` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_min` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `value_avg` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `value_max` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  PRIMARY KEY (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `trends_uint` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `num` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_min` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_avg` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_max` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div></pre></td></tr></table></figure><h5 id="更改索引结构-新版本无需更改"><a href="#更改索引结构-新版本无需更改" class="headerlink" title="更改索引结构(新版本无需更改)"></a>更改索引结构(新版本无需更改)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE history_text DROP PRIMARY KEY,</div><div class="line">ADD INDEX (id),</div><div class="line">DROP INDEX history_text_2,</div><div class="line">ADD INDEX history_text_2 (itemid, id);</div><div class="line">ALTER TABLE history_log DROP PRIMARY KEY,</div><div class="line">ADD INDEX (id),</div><div class="line">DROP INDEX history_log_2,</div><div class="line">ADD INDEX history_log_2 (itemid, id);</div></pre></td></tr></table></figure><h5 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h5><blockquote><p>partition_create 增加分区存储过程<br>partition_drop 删除分区存储过程<br>partition_maintenance 分区维护(创建删除逻辑)存储过程<br>partition_maintenance_all 分区维护(调用partition_maintenance )<br>partition_verify 检查分区、创建第一个分区的存储过程</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line">**************************************partition_create**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_create`(SCHEMANAME varchar(64), TABLENAME varchar(64), PARTITIONNAME varchar(64), CLOCK int)</div><div class="line">BEGIN</div><div class="line">      /*</div><div class="line">         SCHEMANAME = The DB schema in which to make changes</div><div class="line">         TABLENAME = The table with partitions to potentially delete</div><div class="line">         PARTITIONNAME = The name of the partition to create</div><div class="line">      */</div><div class="line">      /*</div><div class="line">         Verify that the partition does not already exist</div><div class="line">      */</div><div class="line"></div><div class="line">      DECLARE RETROWS INT;</div><div class="line">      SELECT COUNT(1) INTO RETROWS</div><div class="line">      FROM information_schema.partitions</div><div class="line">      WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND partition_description &amp;gt;= CLOCK;</div><div class="line"></div><div class="line">      IF RETROWS = 0 THEN</div><div class="line">              /*</div><div class="line">                 1\. Print a message indicating that a partition was created.</div><div class="line">                 2\. Create the SQL to create the partition.</div><div class="line">                 3\. Execute the SQL from #2.</div><div class="line">              */</div><div class="line">              SELECT CONCAT( &quot;partition_create(&quot;, SCHEMANAME, &quot;,&quot;, TABLENAME, &quot;,&quot;, PARTITIONNAME, &quot;,&quot;, CLOCK, &quot;)&quot; ) AS msg;</div><div class="line">              SET @sql = CONCAT( &apos;ALTER TABLE &apos;, SCHEMANAME, &apos;.&apos;, TABLENAME, &apos; ADD PARTITION (PARTITION &apos;, PARTITIONNAME, &apos; VALUES LESS THAN (&apos;, CLOCK, &apos;));&apos; );</div><div class="line">              PREPARE STMT FROM @sql;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_drop**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_drop`(SCHEMANAME VARCHAR(64), TABLENAME VARCHAR(64), DELETE_BELOW_PARTITION_DATE BIGINT)</div><div class="line">BEGIN</div><div class="line">      /*</div><div class="line">         SCHEMANAME = The DB schema in which to make changes</div><div class="line">         TABLENAME = The table with partitions to potentially delete</div><div class="line">         DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</div><div class="line">      */</div><div class="line">      DECLARE done INT DEFAULT FALSE;</div><div class="line">      DECLARE drop_part_name VARCHAR(16);</div><div class="line"></div><div class="line">      /*</div><div class="line">         Get a list of all the partitions that are older than the date</div><div class="line">         in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</div><div class="line">         a &quot;p&quot;, so use SUBSTRING TO get rid of that character.</div><div class="line">      */</div><div class="line">      DECLARE myCursor CURSOR FOR</div><div class="line">              SELECT partition_name</div><div class="line">              FROM information_schema.partitions</div><div class="line">              WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND CAST(SUBSTRING(partition_name FROM 2) AS UNSIGNED) &amp;lt; DELETE_BELOW_PARTITION_DATE;</div><div class="line">      DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;</div><div class="line"></div><div class="line">      /*</div><div class="line">         Create the basics for when we need to drop the partition.  Also, create</div><div class="line">         @drop_partitions to hold a comma-delimited list of all partitions that</div><div class="line">         should be deleted.</div><div class="line">      */</div><div class="line">      SET @alter_header = CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; DROP PARTITION &quot;);</div><div class="line">      SET @drop_partitions = &quot;&quot;;</div><div class="line"></div><div class="line">      /*</div><div class="line">         Start looping through all the partitions that are too old.</div><div class="line">      */</div><div class="line">      OPEN myCursor;</div><div class="line">      read_loop: LOOP</div><div class="line">              FETCH myCursor INTO drop_part_name;</div><div class="line">              IF done THEN</div><div class="line">                      LEAVE read_loop;</div><div class="line">              END IF;</div><div class="line">              SET @drop_partitions = IF(@drop_partitions = &quot;&quot;, drop_part_name, CONCAT(@drop_partitions, &quot;,&quot;, drop_part_name));</div><div class="line">      END LOOP;</div><div class="line">      IF @drop_partitions != &quot;&quot; THEN</div><div class="line">              /*</div><div class="line">                 1\. Build the SQL to drop all the necessary partitions.</div><div class="line">                 2\. Run the SQL to drop the partitions.</div><div class="line">                 3\. Print out the table partitions that were deleted.</div><div class="line">              */</div><div class="line">              SET @full_sql = CONCAT(@alter_header, @drop_partitions, &quot;;&quot;);</div><div class="line">              PREPARE STMT FROM @full_sql;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line"></div><div class="line">              SELECT CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) AS `table`, @drop_partitions AS `partitions_deleted`;</div><div class="line">      ELSE</div><div class="line">              /*</div><div class="line">                 No partitions are being deleted, so print out &quot;N/A&quot; (Not applicable) to indicate</div><div class="line">                 that no changes were made.</div><div class="line">              */</div><div class="line">              SELECT CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) AS `table`, &quot;N/A&quot; AS `partitions_deleted`;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_verify**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_verify`(SCHEMANAME VARCHAR(64), TABLENAME VARCHAR(64), HOURLYINTERVAL INT(11))</div><div class="line">BEGIN</div><div class="line">      DECLARE PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE RETROWS INT(11);</div><div class="line">      DECLARE FUTURE_TIMESTAMP TIMESTAMP;</div><div class="line"></div><div class="line">      /*</div><div class="line">       * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</div><div class="line">       */</div><div class="line">      SELECT COUNT(1) INTO RETROWS</div><div class="line">      FROM information_schema.partitions</div><div class="line">      WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND partition_name IS NULL;</div><div class="line"></div><div class="line">      /*</div><div class="line">       * If partitions do not exist, go ahead and partition the table</div><div class="line">       */</div><div class="line">      IF RETROWS = 1 THEN</div><div class="line">              /*</div><div class="line">               * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</div><div class="line">               * We begin partitioning based on the beginning of a day.  This is because we don&apos;t want to generate a random partition</div><div class="line">               * that won&apos;t necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</div><div class="line">               * end up creating a partition now named &quot;p201403270600&quot; when all other partitions will be like &quot;p201403280000&quot;).</div><div class="line">               */</div><div class="line">              SET FUTURE_TIMESTAMP = TIMESTAMPADD(HOUR, HOURLYINTERVAL, CONCAT(CURDATE(), &quot; &quot;, &apos;00:00:00&apos;));</div><div class="line">              SET PARTITION_NAME = DATE_FORMAT(CURDATE(), &apos;p%Y%m%d%H00&apos;);</div><div class="line"></div><div class="line">              -- Create the partitioning query</div><div class="line">              SET @__PARTITION_SQL = CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; PARTITION BY RANGE(`clock`)&quot;);</div><div class="line">              SET @__PARTITION_SQL = CONCAT(@__PARTITION_SQL, &quot;(PARTITION &quot;, PARTITION_NAME, &quot; VALUES LESS THAN (&quot;, UNIX_TIMESTAMP(FUTURE_TIMESTAMP), &quot;));&quot;);</div><div class="line"></div><div class="line">              -- Run the partitioning query</div><div class="line">              PREPARE STMT FROM @__PARTITION_SQL;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_maintenance**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_maintenance`(SCHEMA_NAME VARCHAR(32), TABLE_NAME VARCHAR(32), KEEP_DATA_DAYS INT, HOURLY_INTERVAL INT, CREATE_NEXT_INTERVALS INT)</div><div class="line">BEGIN</div><div class="line">      DECLARE OLDER_THAN_PARTITION_DATE VARCHAR(16);</div><div class="line">      DECLARE PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE OLD_PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE LESS_THAN_TIMESTAMP INT;</div><div class="line">      DECLARE CUR_TIME INT;</div><div class="line"></div><div class="line">      CALL partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</div><div class="line">      SET CUR_TIME = UNIX_TIMESTAMP(DATE_FORMAT(NOW(), &apos;%Y-%m-%d 00:00:00&apos;));</div><div class="line"></div><div class="line">      SET @__interval = 1;</div><div class="line">      create_loop: LOOP</div><div class="line">              IF @__interval &amp;gt; CREATE_NEXT_INTERVALS THEN</div><div class="line">                      LEAVE create_loop;</div><div class="line">              END IF;</div><div class="line"></div><div class="line">              SET LESS_THAN_TIMESTAMP = CUR_TIME + (HOURLY_INTERVAL * @__interval * 3600);</div><div class="line">              SET PARTITION_NAME = FROM_UNIXTIME(CUR_TIME + HOURLY_INTERVAL * (@__interval - 1) * 3600, &apos;p%Y%m%d%H00&apos;);</div><div class="line">              IF(PARTITION_NAME != OLD_PARTITION_NAME) THEN</div><div class="line">                      CALL partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</div><div class="line">              END IF;</div><div class="line">              SET @__interval=@__interval+1;</div><div class="line">              SET OLD_PARTITION_NAME = PARTITION_NAME;</div><div class="line">      END LOOP;</div><div class="line"></div><div class="line">      SET OLDER_THAN_PARTITION_DATE=DATE_FORMAT(DATE_SUB(NOW(), INTERVAL KEEP_DATA_DAYS DAY), &apos;%Y%m%d0000&apos;);</div><div class="line">      CALL partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</div><div class="line"></div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_maintenance_all**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_maintenance_all`(SCHEMA_NAME VARCHAR(32))</div><div class="line">BEGIN</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history&apos;, 90, 24, 30);</div><div class="line">    #针对zabbix数据库（调用时传入zabbix数据库的库名）的history表创建分区，数据保留90天，分区时间间隔为24小时，每次创建30个分区</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_log&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_str&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_text&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_uint&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;trends&apos;, 730, 24, 15);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;trends_uint&apos;, 730, 24, 30);</div><div class="line">END$$</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure><h5 id="设置分区表维护Event-Scheduler"><a href="#设置分区表维护Event-Scheduler" class="headerlink" title="设置分区表维护Event Scheduler"></a>设置分区表维护Event Scheduler</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">开启数据库Event Scheduler功能</div><div class="line">set GLOBAL event_scheduler=ON;</div><div class="line">创建事件zbx_partition_maintenance 每月1号1点执行partition_maintenance_all:</div><div class="line">DELIMITER $$</div><div class="line">CREATE EVENT `zbx_partition_maintenance`</div><div class="line">ON SCHEDULE every 1 month starts date_add(date_add(date_sub(curdate(),interval day(curdate())-1 day),interval 1 month),interval 1 HOUR)</div><div class="line">ON COMPLETION PRESERVE DO</div><div class="line">BEGIN</div><div class="line">    CALL partition_maintenance_all(&apos;zabbix&apos;) ; </div><div class="line">END$$</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt; &lt;strong&gt;目的:&lt;/strong&gt; 快速清理历史数据，并减少数据存储容量&lt;br&gt; &lt;strong&gt;方法&lt;/strong&gt;: 历史表使用分区表(删除分区表速度快),使用Tokudb引擎(适合大量insert少量update和select等日志
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>zabbix LLD之多核CPU监控(备忘)</title>
    <link href="http://www.simlinux.com/2016/12/10/zabbix-cpucores-lld.html"/>
    <id>http://www.simlinux.com/2016/12/10/zabbix-cpucores-lld.html</id>
    <published>2016-12-10T08:57:48.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>使用Zabbix自带的system.cpu.discovery实现CPU多核监控</li><li>Zabbix Agent 2.4+以上版本才开始支持</li></ul></blockquote><h4 id="创建发现规则"><a href="#创建发现规则" class="headerlink" title="创建发现规则"></a>创建发现规则</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_multi.jpg" alt=""></p><h4 id="创建监控项"><a href="#创建监控项" class="headerlink" title="创建监控项"></a>创建监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_item.png" alt=""></p><h4 id="根据监控项创建图形"><a href="#根据监控项创建图形" class="headerlink" title="根据监控项创建图形"></a>根据监控项创建图形</h4><h4 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_trigger.png" alt=""></p><h4 id="展示效果"><a href="#展示效果" class="headerlink" title="展示效果"></a>展示效果</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu-core-pic.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用Zabbix自带的system.cpu.discovery实现CPU多核监控&lt;/li&gt;
&lt;li&gt;Zabbix Agent 2.4+以上版本才开始支持&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;创建发现规则&quot;&gt;
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>通过zabbix_sender实现批量传递key值(备忘)</title>
    <link href="http://www.simlinux.com/2016/10/26/zabbix-trap-sender.html"/>
    <id>http://www.simlinux.com/2016/10/26/zabbix-trap-sender.html</id>
    <published>2016-10-26T09:58:52.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>选择使用zabbix_sender的由来基于业务中需要从MySQL数据库中提取游戏在线人数(5个服务)，如果通过zabbix_get方式获取需要执行5次脚本获取，而通过zabbix_sender执行一次脚本可将5个服务的数据批量发送到zabbix trapper更为方便，减少了不必要的脚本执行</p></blockquote><p><strong>配置步骤如下:</strong></p><p><strong>1.配置zabbix_agentd.conf 自定义UserParameter</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UserParameter=send.online.count.data[*],/home/opt/scripts/online_count.sh $1</div><div class="line">/etc/init.d/zabbix_agent stop</div><div class="line">/etc/init.d/zabbix_agent start</div></pre></td></tr></table></figure></p><p>注释: 此步骤的目的是在zabbix server上创建key为send.online.count.data的item用于设置脚本的执行间隔，也可以在zabbix agent服务上设置crontab实现</p><p><strong>2.数据获取脚本</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">host_ip=$1</div><div class="line">zabbix_server_ip=&quot;10.1.1.1&quot;</div><div class="line">mysql  -C -N  -h localhost -u geekwolf -pgeekwolf &quot;--execute=select total,dota,war3vs,war3rpg,first_login from online_table;&quot;&gt;/tmp/.data</div><div class="line">Total=`cat /tmp/.data |awk &apos;&#123;print $1&#125;&apos;`</div><div class="line">Dota=`cat /tmp/.data |awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">War3vs=`cat /tmp/.data |awk &apos;&#123;print $3&#125;&apos;`</div><div class="line">War3rpg=`cat /tmp/.data |awk &apos;&#123;print $4&#125;&apos;`</div><div class="line">First_Login=`cat /tmp/.data |awk &apos;&#123;print $5&#125;&apos;`</div><div class="line"></div><div class="line">echo &quot;$host_ip online_count[Total] $Total&quot; &gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[Dota] $Dota&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[War3vs] $War3vs&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[War3rpg] $War3rpg&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[First_login] $First_Login&quot; &gt;&gt;/tmp/count.log</div><div class="line">zabbix_sender -z $zabbix_server_ip -i /tmp/count.log &gt;/dev/null</div></pre></td></tr></table></figure></p><p><strong>3.创建模板和项目</strong><br>A. 创建模板Online_Count_Template<br>B. 创建项目send.count.data<br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t1.png" alt=""></p><p>C. 创建Total监控项,其他略<br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t2.png" alt=""></p><p><strong>4. 创建图形</strong><br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t3.png" alt=""></p><p><strong>5. 将模板关联到主机即可(可通过最新数据查看是否有数据上报 )</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;选择使用zabbix_sender的由来基于业务中需要从MySQL数据库中提取游戏在线人数(5个服务)，如果通过zabbix_get方式获取需要执行5次脚本获取，而通过zabbix_sender执行一次脚本可将5个服务的数据批量发送到zabbix 
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>利用Zabbix做流量聚合汇总</title>
    <link href="http://www.simlinux.com/2016/08/02/zabbix-traffic-sum.html"/>
    <id>http://www.simlinux.com/2016/08/02/zabbix-traffic-sum.html</id>
    <published>2016-08-02T08:20:46.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ul><li>创建主机群组 : 数据大盘</li><li>创建主机 : Geekwolf</li><li>创建监控项：网卡流入流出，grpsum实现聚合</li><li>创建图形：关联监控项</li></ul></blockquote><h4 id="创建主机群组"><a href="#创建主机群组" class="headerlink" title="创建主机群组"></a>创建主机群组</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/dashboard.png" alt="此处输入图片的描述"></p><h4 id="创建主机Geekwolf"><a href="#创建主机Geekwolf" class="headerlink" title="创建主机Geekwolf"></a>创建主机Geekwolf</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host1.png" alt="此处输入图片的描述"></p><h4 id="创建监控项：网卡流入流出，grpsum实现聚合"><a href="#创建监控项：网卡流入流出，grpsum实现聚合" class="headerlink" title="创建监控项：网卡流入流出，grpsum实现聚合"></a>创建监控项：网卡流入流出，grpsum实现聚合</h4><p>点击创建主机界面上方的项目</p><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host2.png" alt="此处输入图片的描述"><br> <img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host3.png" alt="此处输入图片的描述"></p><h4 id="创建图形：关联监控项"><a href="#创建图形：关联监控项" class="headerlink" title="创建图形：关联监控项"></a>创建图形：关联监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host4.png" alt="此处输入图片的描述"></p><h4 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/traffic.png" alt="此处输入图片的描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建主机群组 : 数据大盘&lt;/li&gt;
&lt;li&gt;创建主机 : Geekwolf&lt;/li&gt;
&lt;li&gt;创建监控项：网卡流入流出，grpsum实现聚合&lt;/li&gt;
&lt;li&gt;创建图形：关联监控项&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>Grafana+InfluxDB+Collectd构建监控系统</title>
    <link href="http://www.simlinux.com/2016/04/28/grafana-influxdb-collectd.html"/>
    <id>http://www.simlinux.com/2016/04/28/grafana-influxdb-collectd.html</id>
    <published>2016-04-28T14:39:37.000Z</published>
    <updated>2017-12-17T01:55:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="架构原理"><a href="#架构原理" class="headerlink" title="架构原理"></a>架构原理</h4><blockquote><p>Collectd(数据采集,配置Server连接InfluxDB的25826端口) -&gt; InfluxDB(数据存储,启用collectd插件监听25826端口) —&gt; Grafana(数据展示)</p><ul><li>Collectd ： C 语言开发的一个守护(daemon)进程，周期性收集统计数据和存储，拥有丰富的插件包括监控Ceph,DRBD,OpenLDAP,ZK等，类似statD(graphite也可以用来采集数据，不过展示功能没有Grafana丰富)，数据可以存储在Kafka,InfluxDB，OpenTSDB等上*   InfluxDB:   GO开发的开源分布式时序数据库，适合存储指标，时间，分析等数据</li><li>Grafana： 是一个开源的，具有丰富指标仪表盘的数据展示和图表编辑工具，支持Graphite,Elasticsearch,OpenTSDB,Prometheus和influxDB,Zabbix等</li></ul></blockquote><h4 id="Collectd"><a href="#Collectd" class="headerlink" title="Collectd"></a>Collectd</h4><ol><li><p>安装collectd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">yum -y  install perl-ExtUtils-Embed perl-ExtUtils-MakeMaker  liboping* </div><div class="line">wget https://collectd.org/files/collectd-5.5.0.tar.gz</div><div class="line">tar xf collectd-5.5.0.tar.gz</div><div class="line">cd collectd-5.5.0</div><div class="line">./configure --enable-cpu  --enable-df --enable-disk --enable-interface --enable-load --enable-memory --enable-ping --enable-swap --enable-users --enable-uptime</div><div class="line">make &amp;amp;&amp;amp; make install</div><div class="line">cp contrib/redhat/init.d-collectd  /etc/rc.d/init.d/collectd</div><div class="line">chmod +x /etc/rc.d/init.d/collectd</div><div class="line">ln -s /opt/collectd/sbin/collectdmon  /usr/sbin/</div><div class="line">ln -s /opt/collectd/sbin/collectd  /usr/sbin/</div></pre></td></tr></table></figure></li><li><p>配置collectd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">vim /etc/collectd.conf</div><div class="line">BaseDir &quot;/opt/collectd&quot;</div><div class="line">PIDFile &quot;/run/collectd.pid&quot;</div><div class="line">Hostname &quot;host.example.com&quot;</div><div class="line">Interval 60</div><div class="line">&lt;loadplugin df&gt;</div><div class="line">Interval 120</div><div class="line">&lt;/loadplugin&gt;</div><div class="line">LoadPlugin disk</div><div class="line">LoadPlugin interface</div><div class="line">LoadPlugin load</div><div class="line">LoadPlugin memory</div><div class="line">LoadPlugin network</div><div class="line">LoadPlugin processes</div><div class="line">LoadPlugin users</div><div class="line">&lt;plugin interface&gt;</div><div class="line">Interface &quot;eth1&quot;</div><div class="line">IgnoreSelected false</div><div class="line">&lt;/plugin&gt;</div><div class="line">&lt;plugin network&gt;</div><div class="line">Server &quot;10.44.38.244&quot; &quot;25826&quot;</div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure></li><li><p>说明<br>默认collectd进程会每10s中调用注册在配置文件中的插件，默认全局参数interval＝10s(10s上报一次数据到influxdb等)，针对不同的插件可以配置不同的搜集数据的时间间隔interval</p></li></ol><h4 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h4><ol><li><p>安装并启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">cat &lt; &lt;EOF | sudo tee /etc/yum.repos.d/influxdb.repo</div><div class="line">[influxdb]</div><div class="line">name = InfluxDB Repository - RHEL \$releasever</div><div class="line">baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable</div><div class="line">enabled = 1</div><div class="line">gpgcheck = 1</div><div class="line">gpgkey = https://repos.influxdata.com/influxdb.key</div><div class="line">EOF</div><div class="line">yum -y install influxdb</div><div class="line">service influxdb start</div><div class="line">启动后TCP端口:8083 为InfluxDB 管理控制台</div><div class="line">  TCP端口:8086 为客户端和InfluxDB通信时的HTTP API</div><div class="line">启动后InfluxDB用户认证默认是关闭的，先创建用户:geekwolf geekwolf</div><div class="line">命令行输入influx</div></pre></td></tr></table></figure></li><li><p>基本使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@geekwolf ~]# influx</div><div class="line">Visit https://enterprise.influxdata.com to register for updates, InfluxDB server management, and monitoring.</div><div class="line">Connected to http://localhost:8086 version 0.12.2</div><div class="line">InfluxDB shell 0.12.2</div><div class="line">&gt; create database collectdb</div><div class="line">&gt; create database collectdb</div><div class="line">&gt; show databases</div><div class="line">name: databases</div><div class="line">\------</div><div class="line">name</div><div class="line">_internal</div><div class="line">collectdb</div><div class="line">&gt; create user geekwolf with password &apos;geekwolf&apos;</div><div class="line">&gt; show users</div><div class="line">user            admin</div><div class="line">geekwolf        false</div><div class="line">&gt; grant all on collectdb from to geekwolf</div><div class="line">&gt; help show</div><div class="line">Usage:</div><div class="line">    connect &lt;host:port&gt;   connects to another node specified by host:port</div><div class="line">    auth                  prompts for username and password</div><div class="line">    pretty                toggles pretty print for the json format</div><div class="line">    use &lt;db_name&gt;         sets current database</div><div class="line">    format &lt;format&gt;       specifies the format of the server responses: json, csv, or column</div><div class="line">    precision &lt;/format&gt;&lt;format&gt;    specifies the format of the timestamp: rfc3339, h, m, s, ms, u or ns</div><div class="line">    consistency &lt;level&gt;   sets write consistency level: any, one, quorum, or all</div><div class="line">    history               displays command history</div><div class="line">    settings              outputs the current settings for the shell</div><div class="line">    exit/quit/ctrl+d      quits the influx shell</div><div class="line">    show databases        show database names</div><div class="line">    show series           show series information</div><div class="line">    show measurements     show measurement information</div><div class="line">    show tag keys         show tag key information</div><div class="line">    show field keys       show field key information</div><div class="line">    A full list of influxql commands can be found at:</div><div class="line">    https://docs.influxdata.com/influxdb/v0.10/query_language/spec</div></pre></td></tr></table></figure></li><li><p>启用认证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">修改配置文件启用认证</div><div class="line">sed -i ’s#auth-enabled = false#auth-enabled = true#g’ /etc/influxdb/influxdb.conf</div><div class="line">service influxdb restart</div></pre></td></tr></table></figure></li></ol><h4 id="配置InfluxDB支持Collectd"><a href="#配置InfluxDB支持Collectd" class="headerlink" title="配置InfluxDB支持Collectd"></a>配置InfluxDB支持Collectd</h4><ol><li><p>修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">vim /etc/influxdb/influxdb.conf</div><div class="line">[collectd]</div><div class="line">enabled = true</div><div class="line">bind-address = &quot;10.44.38.244:25826&quot;</div><div class="line">database = &quot;collectdb&quot;</div><div class="line">typesdb = &quot;/opt/collectd/share/collectd/types.db&quot;</div><div class="line">batch-size = 5000</div><div class="line">batch-pending = 10</div><div class="line">batch-timeout = &quot;10s&quot;</div><div class="line">read-buffer = 0</div><div class="line">service influxdb restart</div></pre></td></tr></table></figure></li><li><p>查看metrics信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[root@geekwolf ~]# influx</div><div class="line">Visit https://enterprise.influxdata.com to register for updates, InfluxDB server management, and monitoring.</div><div class="line">Connected to http://localhost:8086 version 0.12.2</div><div class="line">InfluxDB shell 0.12.2</div><div class="line">&gt; use collectdb</div><div class="line">Using database collectdb</div><div class="line">&gt; show field keys</div><div class="line">name: cpu_value</div><div class="line">---------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: df_free</div><div class="line">-------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: df_used</div><div class="line">-------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: disk_read</div><div class="line">---------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line">&gt; select * from cpu_value limit 15;</div><div class="line">name: cpu_value</div><div class="line">---------------</div><div class="line">time                    host                    instance        type    type_instance   value</div><div class="line">1461657293000000000     host.example.com        1               cpu     idle            1.59845e+06</div><div class="line">1461657293000000000     host.example.com        1               cpu     system          2316</div><div class="line">1461657293000000000     host.example.com        1               cpu     nice            508</div><div class="line">1461657293000000000     host.example.com        0               cpu     steal           0</div><div class="line">1461657293000000000     host.example.com        1               cpu     user            11619</div><div class="line">1461657293000000000     host.example.com        1               cpu     interrupt       0</div><div class="line">1461657293000000000     host.example.com        1               cpu     steal           0</div><div class="line">1461657293000000000     host.example.com        1               cpu     wait            172</div><div class="line">1461657293000000000     host.example.com        1               cpu     softirq         0</div><div class="line">1461657303000000000     host.example.com        1               cpu     wait            172</div><div class="line">1461657303000000000     host.example.com        1               cpu     softirq         0</div><div class="line">1461657303000000000     host.example.com        1               cpu     nice            508</div><div class="line">1461657303000000000     host.example.com        0               cpu     idle            1.587007e+06</div><div class="line">1461657303000000000     host.example.com        0               cpu     softirq         127</div><div class="line">1461657303000000000     host.example.com        0               cpu     interrupt       54</div></pre></td></tr></table></figure></li></ol><h4 id="安装配置Grafana"><a href="#安装配置Grafana" class="headerlink" title="安装配置Grafana"></a>安装配置Grafana</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">yum install https://grafanarel.s3.amazonaws.com/builds/grafana-3.0.0-beta51460725904.x86_64.rpm</div><div class="line">目录结构</div><div class="line">/usr/sbin/grafana-server</div><div class="line">/etc/init.d/grafana-server          上述命令的拷贝，启动脚本</div><div class="line">/etc/sysconfig/grafana-server       环境变量</div><div class="line">/etc/grafana/grafana.ini            配置文件</div><div class="line">/var/log/grafana/grafana.log        日志文件</div><div class="line">/var/lib/grafana/grafana.db     sqlite3数据库</div><div class="line"></div><div class="line">启动服务: service grafana-server start</div><div class="line">         chkconfig grafana-server on</div></pre></td></tr></table></figure><blockquote><p>访问地址:<a href="http://10.44.38.244:3000" target="_blank" rel="external">http://10.44.38.244:3000</a> 默认账号为admin admin</p></blockquote><p>关闭Grafana注册功能:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i ’s/#allow_sign_up = true/allow_sign_up = false/g’  /etc/grafana/grafana.ini,重启服务</div></pre></td></tr></table></figure></p><ul><li>添加InfluxDB数据源</li></ul><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/datasource.png" alt="此处输入图片的描述"></p><ul><li>添加ping图的例子</li></ul><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/ping.png" alt="此处输入图片的描述"></p><ul><li>图表展示</li></ul><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/view.png" alt="此处输入图片的描述"></p><p>详细demo可参考:<a href="http://play.grafana.org/" target="_blank" rel="external">http://play.grafana.org/</a></p><h4 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h4><p><strong>问题 :</strong>在使用influxdb0.12.x版本和Grafana2.6时出现multiple query syntax的bug,原因是influxdb的apiwent</p><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/multiquery.png" alt="此处输入图片的描述"></p><p><strong>解决方法:</strong> 升级Grafana2.6到Grafana3.0-beta1以上版本<br> <a href="https://github.com/grafana/grafana/commit/ed62822d442569e7ba287ff63d83a069a596c458" target="_blank" rel="external">https://github.com/grafana/grafana/commit/ed62822d442569e7ba287ff63d83a069a596c458</a></p><h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><blockquote><p><a href="http://docs.grafana.org" target="_blank" rel="external">http://docs.grafana.org</a><br><a href="https://collectd.org/wiki/index.php/Table_of_Plugins" target="_blank" rel="external">https://collectd.org/wiki/index.php/Table_of_Plugins</a><br><a href="https://docs.influxdata.com/influxdb/v0.12/introduction/getting_started/" target="_blank" rel="external">https://docs.influxdata.com/influxdb/v0.12/introduction/getting_started/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;架构原理&quot;&gt;&lt;a href=&quot;#架构原理&quot; class=&quot;headerlink&quot; title=&quot;架构原理&quot;&gt;&lt;/a&gt;架构原理&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Collectd(数据采集,配置Server连接InfluxDB的25826端口) -&amp;gt; I
      
    
    </summary>
    
      <category term="系统监控" scheme="http://www.simlinux.com/categories/%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7/"/>
    
    
  </entry>
  
</feed>
